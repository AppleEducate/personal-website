define(['dart_sdk', 'packages/flutter/material', 'packages/intl/intl', 'packages/flutter/src/widgets/actions', 'packages/flutter/src/foundation/_bitfield_web', 'packages/intl/date_symbols', 'packages/intl/date_symbol_data_custom', 'packages/flutter/src/cupertino/action_sheet'], function(dart_sdk, packages__flutter__material, packages__intl__intl, packages__flutter__src__widgets__actions, packages__flutter__src__foundation___bitfield_web, packages__intl__date_symbols, packages__intl__date_symbol_data_custom, packages__flutter__src__cupertino__action_sheet) {
  'use strict';
  const core = dart_sdk.core;
  const collection = dart_sdk.collection;
  const ui = dart_sdk.ui;
  const async = dart_sdk.async;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const typography = packages__flutter__material.src__material__typography;
  const time = packages__flutter__material.src__material__time;
  const material_localizations = packages__flutter__material.src__material__material_localizations;
  const intl = packages__intl__intl.intl;
  const localizations = packages__flutter__src__widgets__actions.src__widgets__localizations;
  const synchronous_future = packages__flutter__src__foundation___bitfield_web.src__foundation__synchronous_future;
  const date_symbols = packages__intl__date_symbols.date_symbols;
  const date_symbol_data_custom = packages__intl__date_symbol_data_custom.date_symbol_data_custom;
  const localizations$ = packages__flutter__src__cupertino__action_sheet.src__cupertino__localizations;
  const generated_material_localizations = Object.create(dart.library);
  const material_localizations$ = Object.create(dart.library);
  const widgets_localizations = Object.create(dart.library);
  const date_localizations = Object.create(dart.library);
  const generated_date_localizations = Object.create(dart.library);
  const cupertino_localizations = Object.create(dart.library);
  const generated_cupertino_localizations = Object.create(dart.library);
  const flutter_localizations = Object.create(dart.library);
  const $modulo = dartx['%'];
  const $replaceFirst = dartx.replaceFirst;
  const $putIfAbsent = dartx.putIfAbsent;
  const $length = dartx.length;
  const $toLowerCase = dartx.toLowerCase;
  const $contains = dartx.contains;
  const $split = dartx.split;
  const $_get = dartx._get;
  const $containsKey = dartx.containsKey;
  const $forEach = dartx.forEach;
  let HashSetOfString = () => (HashSetOfString = dart.constFn(collection.HashSet$(core.String)))();
  let SynchronousFutureOfMaterialLocalizations = () => (SynchronousFutureOfMaterialLocalizations = dart.constFn(synchronous_future.SynchronousFuture$(material_localizations.MaterialLocalizations)))();
  let VoidToSynchronousFutureOfMaterialLocalizations = () => (VoidToSynchronousFutureOfMaterialLocalizations = dart.constFn(dart.fnType(SynchronousFutureOfMaterialLocalizations(), [])))();
  let FutureOfMaterialLocalizations = () => (FutureOfMaterialLocalizations = dart.constFn(async.Future$(material_localizations.MaterialLocalizations)))();
  let LinkedMapOfLocale$FutureOfMaterialLocalizations = () => (LinkedMapOfLocale$FutureOfMaterialLocalizations = dart.constFn(_js_helper.LinkedMap$(ui.Locale, FutureOfMaterialLocalizations())))();
  let SynchronousFutureOfWidgetsLocalizations = () => (SynchronousFutureOfWidgetsLocalizations = dart.constFn(synchronous_future.SynchronousFuture$(localizations.WidgetsLocalizations)))();
  let LinkedHashSetOfString = () => (LinkedHashSetOfString = dart.constFn(collection.LinkedHashSet$(core.String)))();
  let StringAnddynamicToNull = () => (StringAnddynamicToNull = dart.constFn(dart.fnType(core.Null, [core.String, dart.dynamic])))();
  let MapOfString$String = () => (MapOfString$String = dart.constFn(core.Map$(core.String, core.String)))();
  let StringTovoid = () => (StringTovoid = dart.constFn(dart.fnType(dart.void, [core.String])))();
  let SynchronousFutureOfCupertinoLocalizations = () => (SynchronousFutureOfCupertinoLocalizations = dart.constFn(synchronous_future.SynchronousFuture$(localizations$.CupertinoLocalizations)))();
  let VoidToSynchronousFutureOfCupertinoLocalizations = () => (VoidToSynchronousFutureOfCupertinoLocalizations = dart.constFn(dart.fnType(SynchronousFutureOfCupertinoLocalizations(), [])))();
  let FutureOfCupertinoLocalizations = () => (FutureOfCupertinoLocalizations = dart.constFn(async.Future$(localizations$.CupertinoLocalizations)))();
  let LinkedMapOfLocale$FutureOfCupertinoLocalizations = () => (LinkedMapOfLocale$FutureOfCupertinoLocalizations = dart.constFn(_js_helper.LinkedMap$(ui.Locale, FutureOfCupertinoLocalizations())))();
  const CT = Object.create(null);
  dart.defineLazy(CT, {
    get C0() {
      return C0 = dart.const({
        __proto__: time.HourFormat.prototype,
        [_name]: "HourFormat.HH",
        index: 0
      });
    },
    get C1() {
      return C1 = dart.const({
        __proto__: time.HourFormat.prototype,
        [_name]: "HourFormat.H",
        index: 1
      });
    },
    get C2() {
      return C2 = dart.const({
        __proto__: time.HourFormat.prototype,
        [_name]: "HourFormat.h",
        index: 2
      });
    },
    get C3() {
      return C3 = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [_name]: "TimeOfDayFormat.h_colon_mm_space_a",
        index: 4
      });
    },
    get C4() {
      return C4 = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [_name]: "TimeOfDayFormat.H_colon_mm",
        index: 3
      });
    },
    get C5() {
      return C5 = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [_name]: "TimeOfDayFormat.HH_colon_mm",
        index: 0
      });
    },
    get C6() {
      return C6 = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [_name]: "TimeOfDayFormat.HH_dot_mm",
        index: 1
      });
    },
    get C7() {
      return C7 = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [_name]: "TimeOfDayFormat.a_space_h_colon_mm",
        index: 5
      });
    },
    get C8() {
      return C8 = dart.const({
        __proto__: time.TimeOfDayFormat.prototype,
        [_name]: "TimeOfDayFormat.frenchCanadian",
        index: 2
      });
    },
    get C9() {
      return C9 = dart.const({
        __proto__: time.DayPeriod.prototype,
        [_name]: "DayPeriod.am",
        index: 0
      });
    },
    get C10() {
      return C10 = dart.const({
        __proto__: time.DayPeriod.prototype,
        [_name]: "DayPeriod.pm",
        index: 1
      });
    },
    get C11() {
      return C11 = dart.const({
        __proto__: material_localizations$._MaterialLocalizationsDelegate.prototype
      });
    },
    get C13() {
      return C13 = dart.const({
        __proto__: cupertino_localizations._GlobalCupertinoLocalizationsDelegate.prototype
      });
    },
    get C14() {
      return C14 = dart.const({
        __proto__: widgets_localizations._WidgetsLocalizationsDelegate.prototype
      });
    },
    get C12() {
      return C12 = dart.constList([C13 || CT.C13, C11 || CT.C11, C14 || CT.C14], localizations.LocalizationsDelegate);
    },
    get C15() {
      return C15 = dart.constList(["af", "am", "ar", "as", "az", "be", "bg", "bn", "bs", "ca", "cs", "da", "de", "el", "en", "es", "et", "eu", "fa", "fi", "fil", "fr", "gl", "gsw", "gu", "he", "hi", "hr", "hu", "hy", "id", "is", "it", "ja", "ka", "kk", "km", "kn", "ko", "ky", "lo", "lt", "lv", "mk", "ml", "mn", "mr", "ms", "my", "nb", "ne", "nl", "or", "pa", "pl", "ps", "pt", "ro", "ru", "si", "sk", "sl", "sq", "sr", "sv", "sw", "ta", "te", "th", "tl", "tr", "uk", "ur", "uz", "vi", "zh", "zu"], core.String);
    },
    get C16() {
      return C16 = dart.constList(["ar", "fa", "he", "ps", "ur"], core.String);
    },
    get C19() {
      return C19 = dart.constList(["v.C.", "n.C."], dart.dynamic);
    },
    get C20() {
      return C20 = dart.constList(["voor Christus", "na Christus"], dart.dynamic);
    },
    get C21() {
      return C21 = dart.constList(["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], dart.dynamic);
    },
    get C22() {
      return C22 = dart.constList(["Januarie", "Februarie", "Maart", "April", "Mei", "Junie", "Julie", "Augustus", "September", "Oktober", "November", "Desember"], dart.dynamic);
    },
    get C23() {
      return C23 = dart.constList(["Jan.", "Feb.", "Mrt.", "Apr.", "Mei", "Jun.", "Jul.", "Aug.", "Sep.", "Okt.", "Nov.", "Des."], dart.dynamic);
    },
    get C24() {
      return C24 = dart.constList(["Sondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrydag", "Saterdag"], dart.dynamic);
    },
    get C25() {
      return C25 = dart.constList(["So.", "Ma.", "Di.", "Wo.", "Do.", "Vr.", "Sa."], dart.dynamic);
    },
    get C26() {
      return C26 = dart.constList(["S", "M", "D", "W", "D", "V", "S"], dart.dynamic);
    },
    get C27() {
      return C27 = dart.constList(["K1", "K2", "K3", "K4"], dart.dynamic);
    },
    get C28() {
      return C28 = dart.constList(["1ste kwartaal", "2de kwartaal", "3de kwartaal", "4de kwartaal"], dart.dynamic);
    },
    get C29() {
      return C29 = dart.constList(["vm.", "nm."], dart.dynamic);
    },
    get C30() {
      return C30 = dart.constList(["EEEE, dd MMMM y", "dd MMMM y", "dd MMM y", "y-MM-dd"], dart.dynamic);
    },
    get C31() {
      return C31 = dart.constList(["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], dart.dynamic);
    },
    get C32() {
      return C32 = dart.constList([5, 6], dart.dynamic);
    },
    get C33() {
      return C33 = dart.constList(["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], dart.dynamic);
    },
    get C18() {
      return C18 = dart.constMap(core.String, dart.dynamic, ["NAME", "af", "ERAS", C19 || CT.C19, "ERANAMES", C20 || CT.C20, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C22 || CT.C22, "STANDALONEMONTHS", C22 || CT.C22, "SHORTMONTHS", C23 || CT.C23, "STANDALONESHORTMONTHS", C23 || CT.C23, "WEEKDAYS", C24 || CT.C24, "STANDALONEWEEKDAYS", C24 || CT.C24, "SHORTWEEKDAYS", C25 || CT.C25, "STANDALONESHORTWEEKDAYS", C25 || CT.C25, "NARROWWEEKDAYS", C26 || CT.C26, "STANDALONENARROWWEEKDAYS", C26 || CT.C26, "SHORTQUARTERS", C27 || CT.C27, "QUARTERS", C28 || CT.C28, "AMPMS", C29 || CT.C29, "DATEFORMATS", C30 || CT.C30, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C35() {
      return C35 = dart.constList(["ዓ/ዓ", "ዓ/ም"], dart.dynamic);
    },
    get C36() {
      return C36 = dart.constList(["ዓመተ ዓለም", "ዓመተ ምሕረት"], dart.dynamic);
    },
    get C37() {
      return C37 = dart.constList(["ጃ", "ፌ", "ማ", "ኤ", "ሜ", "ጁ", "ጁ", "ኦ", "ሴ", "ኦ", "ኖ", "ዲ"], dart.dynamic);
    },
    get C38() {
      return C38 = dart.constList(["ጃንዩወሪ", "ፌብሩወሪ", "ማርች", "ኤፕሪል", "ሜይ", "ጁን", "ጁላይ", "ኦገስት", "ሴፕቴምበር", "ኦክቶበር", "ኖቬምበር", "ዲሴምበር"], dart.dynamic);
    },
    get C39() {
      return C39 = dart.constList(["ጃንዩ", "ፌብሩ", "ማርች", "ኤፕሪ", "ሜይ", "ጁን", "ጁላይ", "ኦገስ", "ሴፕቴ", "ኦክቶ", "ኖቬም", "ዲሴም"], dart.dynamic);
    },
    get C40() {
      return C40 = dart.constList(["እሑድ", "ሰኞ", "ማክሰኞ", "ረቡዕ", "ሐሙስ", "ዓርብ", "ቅዳሜ"], dart.dynamic);
    },
    get C41() {
      return C41 = dart.constList(["እሑድ", "ሰኞ", "ማክሰ", "ረቡዕ", "ሐሙስ", "ዓርብ", "ቅዳሜ"], dart.dynamic);
    },
    get C42() {
      return C42 = dart.constList(["እ", "ሰ", "ማ", "ረ", "ሐ", "ዓ", "ቅ"], dart.dynamic);
    },
    get C43() {
      return C43 = dart.constList(["ሩብ1", "ሩብ2", "ሩብ3", "ሩብ4"], dart.dynamic);
    },
    get C44() {
      return C44 = dart.constList(["1ኛው ሩብ", "2ኛው ሩብ", "3ኛው ሩብ", "4ኛው ሩብ"], dart.dynamic);
    },
    get C45() {
      return C45 = dart.constList(["ጥዋት", "ከሰዓት"], dart.dynamic);
    },
    get C46() {
      return C46 = dart.constList(["EEEE ፣d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], dart.dynamic);
    },
    get C47() {
      return C47 = dart.constList(["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], dart.dynamic);
    },
    get C34() {
      return C34 = dart.constMap(core.String, dart.dynamic, ["NAME", "am", "ERAS", C35 || CT.C35, "ERANAMES", C36 || CT.C36, "NARROWMONTHS", C37 || CT.C37, "STANDALONENARROWMONTHS", C37 || CT.C37, "MONTHS", C38 || CT.C38, "STANDALONEMONTHS", C38 || CT.C38, "SHORTMONTHS", C39 || CT.C39, "STANDALONESHORTMONTHS", C39 || CT.C39, "WEEKDAYS", C40 || CT.C40, "STANDALONEWEEKDAYS", C40 || CT.C40, "SHORTWEEKDAYS", C41 || CT.C41, "STANDALONESHORTWEEKDAYS", C41 || CT.C41, "NARROWWEEKDAYS", C42 || CT.C42, "STANDALONENARROWWEEKDAYS", C42 || CT.C42, "SHORTQUARTERS", C43 || CT.C43, "QUARTERS", C44 || CT.C44, "AMPMS", C45 || CT.C45, "DATEFORMATS", C46 || CT.C46, "TIMEFORMATS", C47 || CT.C47, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C49() {
      return C49 = dart.constList(["ق.م", "م"], dart.dynamic);
    },
    get C50() {
      return C50 = dart.constList(["قبل الميلاد", "ميلادي"], dart.dynamic);
    },
    get C51() {
      return C51 = dart.constList(["ي", "ف", "م", "أ", "و", "ن", "ل", "غ", "س", "ك", "ب", "د"], dart.dynamic);
    },
    get C52() {
      return C52 = dart.constList(["يناير", "فبراير", "مارس", "أبريل", "مايو", "يونيو", "يوليو", "أغسطس", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"], dart.dynamic);
    },
    get C53() {
      return C53 = dart.constList(["الأحد", "الاثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت"], dart.dynamic);
    },
    get C54() {
      return C54 = dart.constList(["ح", "ن", "ث", "ر", "خ", "ج", "س"], dart.dynamic);
    },
    get C55() {
      return C55 = dart.constList(["الربع الأول", "الربع الثاني", "الربع الثالث", "الربع الرابع"], dart.dynamic);
    },
    get C56() {
      return C56 = dart.constList(["ص", "م"], dart.dynamic);
    },
    get C57() {
      return C57 = dart.constList(["EEEE، d MMMM y", "d MMMM y", "dd‏/MM‏/y", "d‏/M‏/y"], dart.dynamic);
    },
    get C58() {
      return C58 = dart.constList([4, 5], dart.dynamic);
    },
    get C48() {
      return C48 = dart.constMap(core.String, dart.dynamic, ["NAME", "ar", "ERAS", C49 || CT.C49, "ERANAMES", C50 || CT.C50, "NARROWMONTHS", C51 || CT.C51, "STANDALONENARROWMONTHS", C51 || CT.C51, "MONTHS", C52 || CT.C52, "STANDALONEMONTHS", C52 || CT.C52, "SHORTMONTHS", C52 || CT.C52, "STANDALONESHORTMONTHS", C52 || CT.C52, "WEEKDAYS", C53 || CT.C53, "STANDALONEWEEKDAYS", C53 || CT.C53, "SHORTWEEKDAYS", C53 || CT.C53, "STANDALONESHORTWEEKDAYS", C53 || CT.C53, "NARROWWEEKDAYS", C54 || CT.C54, "STANDALONENARROWWEEKDAYS", C54 || CT.C54, "SHORTQUARTERS", C55 || CT.C55, "QUARTERS", C55 || CT.C55, "AMPMS", C56 || CT.C56, "DATEFORMATS", C57 || CT.C57, "TIMEFORMATS", C47 || CT.C47, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 5, "WEEKENDRANGE", C58 || CT.C58, "FIRSTWEEKCUTOFFDAY", 4, "DATETIMEFORMATS", C33 || CT.C33, "ZERODIGIT", "٠"]);
    },
    get C60() {
      return C60 = dart.constList(["e.ə.", "y.e."], dart.dynamic);
    },
    get C61() {
      return C61 = dart.constList(["eramızdan əvvəl", "yeni era"], dart.dynamic);
    },
    get C62() {
      return C62 = dart.constList(["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], dart.dynamic);
    },
    get C63() {
      return C63 = dart.constList(["yanvar", "fevral", "mart", "aprel", "may", "iyun", "iyul", "avqust", "sentyabr", "oktyabr", "noyabr", "dekabr"], dart.dynamic);
    },
    get C64() {
      return C64 = dart.constList(["Yanvar", "Fevral", "Mart", "Aprel", "May", "İyun", "İyul", "Avqust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"], dart.dynamic);
    },
    get C65() {
      return C65 = dart.constList(["yan", "fev", "mar", "apr", "may", "iyn", "iyl", "avq", "sen", "okt", "noy", "dek"], dart.dynamic);
    },
    get C66() {
      return C66 = dart.constList(["bazar", "bazar ertəsi", "çərşənbə axşamı", "çərşənbə", "cümə axşamı", "cümə", "şənbə"], dart.dynamic);
    },
    get C67() {
      return C67 = dart.constList(["B.", "B.E.", "Ç.A.", "Ç.", "C.A.", "C.", "Ş."], dart.dynamic);
    },
    get C68() {
      return C68 = dart.constList(["7", "1", "2", "3", "4", "5", "6"], dart.dynamic);
    },
    get C69() {
      return C69 = dart.constList(["1-ci kv.", "2-ci kv.", "3-cü kv.", "4-cü kv."], dart.dynamic);
    },
    get C70() {
      return C70 = dart.constList(["1-ci kvartal", "2-ci kvartal", "3-cü kvartal", "4-cü kvartal"], dart.dynamic);
    },
    get C71() {
      return C71 = dart.constList(["AM", "PM"], dart.dynamic);
    },
    get C72() {
      return C72 = dart.constList(["d MMMM y, EEEE", "d MMMM y", "d MMM y", "dd.MM.yy"], dart.dynamic);
    },
    get C59() {
      return C59 = dart.constMap(core.String, dart.dynamic, ["NAME", "az", "ERAS", C60 || CT.C60, "ERANAMES", C61 || CT.C61, "NARROWMONTHS", C62 || CT.C62, "STANDALONENARROWMONTHS", C62 || CT.C62, "MONTHS", C63 || CT.C63, "STANDALONEMONTHS", C64 || CT.C64, "SHORTMONTHS", C65 || CT.C65, "STANDALONESHORTMONTHS", C65 || CT.C65, "WEEKDAYS", C66 || CT.C66, "STANDALONEWEEKDAYS", C66 || CT.C66, "SHORTWEEKDAYS", C67 || CT.C67, "STANDALONESHORTWEEKDAYS", C67 || CT.C67, "NARROWWEEKDAYS", C68 || CT.C68, "STANDALONENARROWWEEKDAYS", C68 || CT.C68, "SHORTQUARTERS", C69 || CT.C69, "QUARTERS", C70 || CT.C70, "AMPMS", C71 || CT.C71, "DATEFORMATS", C72 || CT.C72, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 6, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C74() {
      return C74 = dart.constList(["да н.э.", "н.э."], dart.dynamic);
    },
    get C75() {
      return C75 = dart.constList(["да нараджэння Хрыстова", "ад нараджэння Хрыстова"], dart.dynamic);
    },
    get C76() {
      return C76 = dart.constList(["с", "л", "с", "к", "м", "ч", "л", "ж", "в", "к", "л", "с"], dart.dynamic);
    },
    get C77() {
      return C77 = dart.constList(["студзеня", "лютага", "сакавіка", "красавіка", "мая", "чэрвеня", "ліпеня", "жніўня", "верасня", "кастрычніка", "лістапада", "снежня"], dart.dynamic);
    },
    get C78() {
      return C78 = dart.constList(["студзень", "люты", "сакавік", "красавік", "май", "чэрвень", "ліпень", "жнівень", "верасень", "кастрычнік", "лістапад", "снежань"], dart.dynamic);
    },
    get C79() {
      return C79 = dart.constList(["сту", "лют", "сак", "кра", "мая", "чэр", "ліп", "жні", "вер", "кас", "ліс", "сне"], dart.dynamic);
    },
    get C80() {
      return C80 = dart.constList(["сту", "лют", "сак", "кра", "май", "чэр", "ліп", "жні", "вер", "кас", "ліс", "сне"], dart.dynamic);
    },
    get C81() {
      return C81 = dart.constList(["нядзеля", "панядзелак", "аўторак", "серада", "чацвер", "пятніца", "субота"], dart.dynamic);
    },
    get C82() {
      return C82 = dart.constList(["нд", "пн", "аў", "ср", "чц", "пт", "сб"], dart.dynamic);
    },
    get C83() {
      return C83 = dart.constList(["н", "п", "а", "с", "ч", "п", "с"], dart.dynamic);
    },
    get C84() {
      return C84 = dart.constList(["1-шы кв.", "2-гі кв.", "3-ці кв.", "4-ты кв."], dart.dynamic);
    },
    get C85() {
      return C85 = dart.constList(["1-шы квартал", "2-гі квартал", "3-ці квартал", "4-ты квартал"], dart.dynamic);
    },
    get C86() {
      return C86 = dart.constList(["EEEE, d MMMM y 'г'.", "d MMMM y 'г'.", "d.MM.y", "d.MM.yy"], dart.dynamic);
    },
    get C87() {
      return C87 = dart.constList(["HH:mm:ss, zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], dart.dynamic);
    },
    get C88() {
      return C88 = dart.constList(["{1} 'у' {0}", "{1} 'у' {0}", "{1}, {0}", "{1}, {0}"], dart.dynamic);
    },
    get C73() {
      return C73 = dart.constMap(core.String, dart.dynamic, ["NAME", "be", "ERAS", C74 || CT.C74, "ERANAMES", C75 || CT.C75, "NARROWMONTHS", C76 || CT.C76, "STANDALONENARROWMONTHS", C76 || CT.C76, "MONTHS", C77 || CT.C77, "STANDALONEMONTHS", C78 || CT.C78, "SHORTMONTHS", C79 || CT.C79, "STANDALONESHORTMONTHS", C80 || CT.C80, "WEEKDAYS", C81 || CT.C81, "STANDALONEWEEKDAYS", C81 || CT.C81, "SHORTWEEKDAYS", C82 || CT.C82, "STANDALONESHORTWEEKDAYS", C82 || CT.C82, "NARROWWEEKDAYS", C83 || CT.C83, "STANDALONENARROWWEEKDAYS", C83 || CT.C83, "SHORTQUARTERS", C84 || CT.C84, "QUARTERS", C85 || CT.C85, "AMPMS", C71 || CT.C71, "DATEFORMATS", C86 || CT.C86, "TIMEFORMATS", C87 || CT.C87, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 6, "DATETIMEFORMATS", C88 || CT.C88]);
    },
    get C90() {
      return C90 = dart.constList(["пр.Хр.", "сл.Хр."], dart.dynamic);
    },
    get C91() {
      return C91 = dart.constList(["преди Христа", "след Христа"], dart.dynamic);
    },
    get C92() {
      return C92 = dart.constList(["я", "ф", "м", "а", "м", "ю", "ю", "а", "с", "о", "н", "д"], dart.dynamic);
    },
    get C93() {
      return C93 = dart.constList(["януари", "февруари", "март", "април", "май", "юни", "юли", "август", "септември", "октомври", "ноември", "декември"], dart.dynamic);
    },
    get C94() {
      return C94 = dart.constList(["яну", "фев", "март", "апр", "май", "юни", "юли", "авг", "сеп", "окт", "ное", "дек"], dart.dynamic);
    },
    get C95() {
      return C95 = dart.constList(["неделя", "понеделник", "вторник", "сряда", "четвъртък", "петък", "събота"], dart.dynamic);
    },
    get C96() {
      return C96 = dart.constList(["нд", "пн", "вт", "ср", "чт", "пт", "сб"], dart.dynamic);
    },
    get C97() {
      return C97 = dart.constList(["н", "п", "в", "с", "ч", "п", "с"], dart.dynamic);
    },
    get C98() {
      return C98 = dart.constList(["1. трим.", "2. трим.", "3. трим.", "4. трим."], dart.dynamic);
    },
    get C99() {
      return C99 = dart.constList(["1. тримесечие", "2. тримесечие", "3. тримесечие", "4. тримесечие"], dart.dynamic);
    },
    get C100() {
      return C100 = dart.constList(["пр.об.", "сл.об."], dart.dynamic);
    },
    get C101() {
      return C101 = dart.constList(["EEEE, d MMMM y 'г'.", "d MMMM y 'г'.", "d.MM.y 'г'.", "d.MM.yy 'г'."], dart.dynamic);
    },
    get C102() {
      return C102 = dart.constList(["H:mm:ss 'ч'. zzzz", "H:mm:ss 'ч'. z", "H:mm:ss 'ч'.", "H:mm 'ч'."], dart.dynamic);
    },
    get C103() {
      return C103 = dart.constList(["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], dart.dynamic);
    },
    get C89() {
      return C89 = dart.constMap(core.String, dart.dynamic, ["NAME", "bg", "ERAS", C90 || CT.C90, "ERANAMES", C91 || CT.C91, "NARROWMONTHS", C92 || CT.C92, "STANDALONENARROWMONTHS", C92 || CT.C92, "MONTHS", C93 || CT.C93, "STANDALONEMONTHS", C93 || CT.C93, "SHORTMONTHS", C94 || CT.C94, "STANDALONESHORTMONTHS", C94 || CT.C94, "WEEKDAYS", C95 || CT.C95, "STANDALONEWEEKDAYS", C95 || CT.C95, "SHORTWEEKDAYS", C96 || CT.C96, "STANDALONESHORTWEEKDAYS", C96 || CT.C96, "NARROWWEEKDAYS", C97 || CT.C97, "STANDALONENARROWWEEKDAYS", C97 || CT.C97, "SHORTQUARTERS", C98 || CT.C98, "QUARTERS", C99 || CT.C99, "AMPMS", C100 || CT.C100, "DATEFORMATS", C101 || CT.C101, "TIMEFORMATS", C102 || CT.C102, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C103 || CT.C103]);
    },
    get C105() {
      return C105 = dart.constList(["খ্রিস্টপূর্ব", "খৃষ্টাব্দ"], dart.dynamic);
    },
    get C106() {
      return C106 = dart.constList(["খ্রিস্টপূর্ব", "খ্রীষ্টাব্দ"], dart.dynamic);
    },
    get C107() {
      return C107 = dart.constList(["জা", "ফে", "মা", "এ", "মে", "জুন", "জু", "আ", "সে", "অ", "ন", "ডি"], dart.dynamic);
    },
    get C108() {
      return C108 = dart.constList(["জানুয়ারী", "ফেব্রুয়ারী", "মার্চ", "এপ্রিল", "মে", "জুন", "জুলাই", "আগস্ট", "সেপ্টেম্বর", "অক্টোবর", "নভেম্বর", "ডিসেম্বর"], dart.dynamic);
    },
    get C109() {
      return C109 = dart.constList(["জানু", "ফেব", "মার্চ", "এপ্রিল", "মে", "জুন", "জুলাই", "আগস্ট", "সেপ্টেম্বর", "অক্টোবর", "নভেম্বর", "ডিসেম্বর"], dart.dynamic);
    },
    get C110() {
      return C110 = dart.constList(["রবিবার", "সোমবার", "মঙ্গলবার", "বুধবার", "বৃহস্পতিবার", "শুক্রবার", "শনিবার"], dart.dynamic);
    },
    get C111() {
      return C111 = dart.constList(["রবিবার", "সোমবার", "মঙ্গলবার", "বুধবার", "বৃহষ্পতিবার", "শুক্রবার", "শনিবার"], dart.dynamic);
    },
    get C112() {
      return C112 = dart.constList(["রবি", "সোম", "মঙ্গল", "বুধ", "বৃহস্পতি", "শুক্র", "শনি"], dart.dynamic);
    },
    get C113() {
      return C113 = dart.constList(["র", "সো", "ম", "বু", "বৃ", "শু", "শ"], dart.dynamic);
    },
    get C114() {
      return C114 = dart.constList(["Q1", "Q2", "Q3", "Q4"], dart.dynamic);
    },
    get C115() {
      return C115 = dart.constList(["ত্রৈমাসিক", "দ্বিতীয় ত্রৈমাসিক", "তৃতীয় ত্রৈমাসিক", "চতুর্থ ত্রৈমাসিক"], dart.dynamic);
    },
    get C116() {
      return C116 = dart.constList(["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d/M/yy"], dart.dynamic);
    },
    get C104() {
      return C104 = dart.constMap(core.String, dart.dynamic, ["NAME", "bn", "ERAS", C105 || CT.C105, "ERANAMES", C106 || CT.C106, "NARROWMONTHS", C107 || CT.C107, "STANDALONENARROWMONTHS", C107 || CT.C107, "MONTHS", C108 || CT.C108, "STANDALONEMONTHS", C108 || CT.C108, "SHORTMONTHS", C109 || CT.C109, "STANDALONESHORTMONTHS", C108 || CT.C108, "WEEKDAYS", C110 || CT.C110, "STANDALONEWEEKDAYS", C111 || CT.C111, "SHORTWEEKDAYS", C112 || CT.C112, "STANDALONESHORTWEEKDAYS", C112 || CT.C112, "NARROWWEEKDAYS", C113 || CT.C113, "STANDALONENARROWWEEKDAYS", C113 || CT.C113, "SHORTQUARTERS", C114 || CT.C114, "QUARTERS", C115 || CT.C115, "AMPMS", C71 || CT.C71, "DATEFORMATS", C116 || CT.C116, "TIMEFORMATS", C47 || CT.C47, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C33 || CT.C33, "ZERODIGIT", "০"]);
    },
    get C118() {
      return C118 = dart.constList(["p. n. e.", "n. e."], dart.dynamic);
    },
    get C119() {
      return C119 = dart.constList(["prije nove ere", "nove ere"], dart.dynamic);
    },
    get C120() {
      return C120 = dart.constList(["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], dart.dynamic);
    },
    get C121() {
      return C121 = dart.constList(["januar", "februar", "mart", "april", "maj", "juni", "juli", "avgust", "septembar", "oktobar", "novembar", "decembar"], dart.dynamic);
    },
    get C122() {
      return C122 = dart.constList(["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"], dart.dynamic);
    },
    get C123() {
      return C123 = dart.constList(["nedjelja", "ponedjeljak", "utorak", "srijeda", "četvrtak", "petak", "subota"], dart.dynamic);
    },
    get C124() {
      return C124 = dart.constList(["ned", "pon", "uto", "sri", "čet", "pet", "sub"], dart.dynamic);
    },
    get C125() {
      return C125 = dart.constList(["N", "P", "U", "S", "Č", "P", "S"], dart.dynamic);
    },
    get C126() {
      return C126 = dart.constList(["n", "p", "u", "s", "č", "p", "s"], dart.dynamic);
    },
    get C127() {
      return C127 = dart.constList(["KV1", "KV2", "KV3", "KV4"], dart.dynamic);
    },
    get C128() {
      return C128 = dart.constList(["Prvi kvartal", "Drugi kvartal", "Treći kvartal", "Četvrti kvartal"], dart.dynamic);
    },
    get C129() {
      return C129 = dart.constList(["prijepodne", "popodne"], dart.dynamic);
    },
    get C130() {
      return C130 = dart.constList(["EEEE, d. MMMM y.", "d. MMMM y.", "d. MMM y.", "d.M.yy."], dart.dynamic);
    },
    get C131() {
      return C131 = dart.constList(["{1} 'u' {0}", "{1} 'u' {0}", "{1} {0}", "{1} {0}"], dart.dynamic);
    },
    get C117() {
      return C117 = dart.constMap(core.String, dart.dynamic, ["NAME", "bs", "ERAS", C118 || CT.C118, "ERANAMES", C119 || CT.C119, "NARROWMONTHS", C120 || CT.C120, "STANDALONENARROWMONTHS", C120 || CT.C120, "MONTHS", C121 || CT.C121, "STANDALONEMONTHS", C121 || CT.C121, "SHORTMONTHS", C122 || CT.C122, "STANDALONESHORTMONTHS", C122 || CT.C122, "WEEKDAYS", C123 || CT.C123, "STANDALONEWEEKDAYS", C123 || CT.C123, "SHORTWEEKDAYS", C124 || CT.C124, "STANDALONESHORTWEEKDAYS", C124 || CT.C124, "NARROWWEEKDAYS", C125 || CT.C125, "STANDALONENARROWWEEKDAYS", C126 || CT.C126, "SHORTQUARTERS", C127 || CT.C127, "QUARTERS", C128 || CT.C128, "AMPMS", C129 || CT.C129, "DATEFORMATS", C130 || CT.C130, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 6, "DATETIMEFORMATS", C131 || CT.C131]);
    },
    get C133() {
      return C133 = dart.constList(["aC", "dC"], dart.dynamic);
    },
    get C134() {
      return C134 = dart.constList(["abans de Crist", "després de Crist"], dart.dynamic);
    },
    get C135() {
      return C135 = dart.constList(["GN", "FB", "MÇ", "AB", "MG", "JN", "JL", "AG", "ST", "OC", "NV", "DS"], dart.dynamic);
    },
    get C136() {
      return C136 = dart.constList(["de gener", "de febrer", "de març", "d’abril", "de maig", "de juny", "de juliol", "d’agost", "de setembre", "d’octubre", "de novembre", "de desembre"], dart.dynamic);
    },
    get C137() {
      return C137 = dart.constList(["gener", "febrer", "març", "abril", "maig", "juny", "juliol", "agost", "setembre", "octubre", "novembre", "desembre"], dart.dynamic);
    },
    get C138() {
      return C138 = dart.constList(["de gen.", "de febr.", "de març", "d’abr.", "de maig", "de juny", "de jul.", "d’ag.", "de set.", "d’oct.", "de nov.", "de des."], dart.dynamic);
    },
    get C139() {
      return C139 = dart.constList(["gen.", "febr.", "març", "abr.", "maig", "juny", "jul.", "ag.", "set.", "oct.", "nov.", "des."], dart.dynamic);
    },
    get C140() {
      return C140 = dart.constList(["diumenge", "dilluns", "dimarts", "dimecres", "dijous", "divendres", "dissabte"], dart.dynamic);
    },
    get C141() {
      return C141 = dart.constList(["dg.", "dl.", "dt.", "dc.", "dj.", "dv.", "ds."], dart.dynamic);
    },
    get C142() {
      return C142 = dart.constList(["dg", "dl", "dt", "dc", "dj", "dv", "ds"], dart.dynamic);
    },
    get C143() {
      return C143 = dart.constList(["1T", "2T", "3T", "4T"], dart.dynamic);
    },
    get C144() {
      return C144 = dart.constList(["1r trimestre", "2n trimestre", "3r trimestre", "4t trimestre"], dart.dynamic);
    },
    get C145() {
      return C145 = dart.constList(["a. m.", "p. m."], dart.dynamic);
    },
    get C146() {
      return C146 = dart.constList(["EEEE, d MMMM 'de' y", "d MMMM 'de' y", "d MMM y", "d/M/yy"], dart.dynamic);
    },
    get C147() {
      return C147 = dart.constList(["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], dart.dynamic);
    },
    get C148() {
      return C148 = dart.constList(["{1} 'a' 'les' {0}", "{1} 'a' 'les' {0}", "{1}, {0}", "{1} {0}"], dart.dynamic);
    },
    get C132() {
      return C132 = dart.constMap(core.String, dart.dynamic, ["NAME", "ca", "ERAS", C133 || CT.C133, "ERANAMES", C134 || CT.C134, "NARROWMONTHS", C135 || CT.C135, "STANDALONENARROWMONTHS", C135 || CT.C135, "MONTHS", C136 || CT.C136, "STANDALONEMONTHS", C137 || CT.C137, "SHORTMONTHS", C138 || CT.C138, "STANDALONESHORTMONTHS", C139 || CT.C139, "WEEKDAYS", C140 || CT.C140, "STANDALONEWEEKDAYS", C140 || CT.C140, "SHORTWEEKDAYS", C141 || CT.C141, "STANDALONESHORTWEEKDAYS", C141 || CT.C141, "NARROWWEEKDAYS", C142 || CT.C142, "STANDALONENARROWWEEKDAYS", C142 || CT.C142, "SHORTQUARTERS", C143 || CT.C143, "QUARTERS", C144 || CT.C144, "AMPMS", C145 || CT.C145, "DATEFORMATS", C146 || CT.C146, "TIMEFORMATS", C147 || CT.C147, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C148 || CT.C148]);
    },
    get C150() {
      return C150 = dart.constList(["př. n. l.", "n. l."], dart.dynamic);
    },
    get C151() {
      return C151 = dart.constList(["před naším letopočtem", "našeho letopočtu"], dart.dynamic);
    },
    get C152() {
      return C152 = dart.constList(["ledna", "února", "března", "dubna", "května", "června", "července", "srpna", "září", "října", "listopadu", "prosince"], dart.dynamic);
    },
    get C153() {
      return C153 = dart.constList(["leden", "únor", "březen", "duben", "květen", "červen", "červenec", "srpen", "září", "říjen", "listopad", "prosinec"], dart.dynamic);
    },
    get C154() {
      return C154 = dart.constList(["led", "úno", "bře", "dub", "kvě", "čvn", "čvc", "srp", "zář", "říj", "lis", "pro"], dart.dynamic);
    },
    get C155() {
      return C155 = dart.constList(["neděle", "pondělí", "úterý", "středa", "čtvrtek", "pátek", "sobota"], dart.dynamic);
    },
    get C156() {
      return C156 = dart.constList(["ne", "po", "út", "st", "čt", "pá", "so"], dart.dynamic);
    },
    get C157() {
      return C157 = dart.constList(["N", "P", "Ú", "S", "Č", "P", "S"], dart.dynamic);
    },
    get C158() {
      return C158 = dart.constList(["1. čtvrtletí", "2. čtvrtletí", "3. čtvrtletí", "4. čtvrtletí"], dart.dynamic);
    },
    get C159() {
      return C159 = dart.constList(["dop.", "odp."], dart.dynamic);
    },
    get C160() {
      return C160 = dart.constList(["EEEE d. MMMM y", "d. MMMM y", "d. M. y", "dd.MM.yy"], dart.dynamic);
    },
    get C149() {
      return C149 = dart.constMap(core.String, dart.dynamic, ["NAME", "cs", "ERAS", C150 || CT.C150, "ERANAMES", C151 || CT.C151, "NARROWMONTHS", C62 || CT.C62, "STANDALONENARROWMONTHS", C62 || CT.C62, "MONTHS", C152 || CT.C152, "STANDALONEMONTHS", C153 || CT.C153, "SHORTMONTHS", C154 || CT.C154, "STANDALONESHORTMONTHS", C154 || CT.C154, "WEEKDAYS", C155 || CT.C155, "STANDALONEWEEKDAYS", C155 || CT.C155, "SHORTWEEKDAYS", C156 || CT.C156, "STANDALONESHORTWEEKDAYS", C156 || CT.C156, "NARROWWEEKDAYS", C157 || CT.C157, "STANDALONENARROWWEEKDAYS", C157 || CT.C157, "SHORTQUARTERS", C114 || CT.C114, "QUARTERS", C158 || CT.C158, "AMPMS", C159 || CT.C159, "DATEFORMATS", C160 || CT.C160, "TIMEFORMATS", C147 || CT.C147, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C162() {
      return C162 = dart.constList(["f.Kr.", "e.Kr."], dart.dynamic);
    },
    get C163() {
      return C163 = dart.constList(["januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", "december"], dart.dynamic);
    },
    get C164() {
      return C164 = dart.constList(["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], dart.dynamic);
    },
    get C165() {
      return C165 = dart.constList(["søndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "lørdag"], dart.dynamic);
    },
    get C166() {
      return C166 = dart.constList(["søn.", "man.", "tir.", "ons.", "tor.", "fre.", "lør."], dart.dynamic);
    },
    get C167() {
      return C167 = dart.constList(["søn", "man", "tir", "ons", "tor", "fre", "lør"], dart.dynamic);
    },
    get C168() {
      return C168 = dart.constList(["S", "M", "T", "O", "T", "F", "L"], dart.dynamic);
    },
    get C169() {
      return C169 = dart.constList(["1. kvt.", "2. kvt.", "3. kvt.", "4. kvt."], dart.dynamic);
    },
    get C170() {
      return C170 = dart.constList(["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], dart.dynamic);
    },
    get C171() {
      return C171 = dart.constList(["EEEE 'den' d. MMMM y", "d. MMMM y", "d. MMM y", "dd/MM/y"], dart.dynamic);
    },
    get C172() {
      return C172 = dart.constList(["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], dart.dynamic);
    },
    get C173() {
      return C173 = dart.constList(["{1} 'kl'. {0}", "{1} 'kl'. {0}", "{1} {0}", "{1} {0}"], dart.dynamic);
    },
    get C161() {
      return C161 = dart.constMap(core.String, dart.dynamic, ["NAME", "da", "ERAS", C162 || CT.C162, "ERANAMES", C162 || CT.C162, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C163 || CT.C163, "STANDALONEMONTHS", C163 || CT.C163, "SHORTMONTHS", C164 || CT.C164, "STANDALONESHORTMONTHS", C164 || CT.C164, "WEEKDAYS", C165 || CT.C165, "STANDALONEWEEKDAYS", C165 || CT.C165, "SHORTWEEKDAYS", C166 || CT.C166, "STANDALONESHORTWEEKDAYS", C167 || CT.C167, "NARROWWEEKDAYS", C168 || CT.C168, "STANDALONENARROWWEEKDAYS", C168 || CT.C168, "SHORTQUARTERS", C169 || CT.C169, "QUARTERS", C170 || CT.C170, "AMPMS", C71 || CT.C71, "DATEFORMATS", C171 || CT.C171, "TIMEFORMATS", C172 || CT.C172, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C173 || CT.C173]);
    },
    get C175() {
      return C175 = dart.constList(["v. Chr.", "n. Chr."], dart.dynamic);
    },
    get C176() {
      return C176 = dart.constList(["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], dart.dynamic);
    },
    get C177() {
      return C177 = dart.constList(["Jan.", "Feb.", "März", "Apr.", "Mai", "Juni", "Juli", "Aug.", "Sep.", "Okt.", "Nov.", "Dez."], dart.dynamic);
    },
    get C178() {
      return C178 = dart.constList(["Jan", "Feb", "Mär", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], dart.dynamic);
    },
    get C179() {
      return C179 = dart.constList(["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], dart.dynamic);
    },
    get C180() {
      return C180 = dart.constList(["So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", "Sa."], dart.dynamic);
    },
    get C181() {
      return C181 = dart.constList(["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"], dart.dynamic);
    },
    get C182() {
      return C182 = dart.constList(["S", "M", "D", "M", "D", "F", "S"], dart.dynamic);
    },
    get C183() {
      return C183 = dart.constList(["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], dart.dynamic);
    },
    get C184() {
      return C184 = dart.constList(["vorm.", "nachm."], dart.dynamic);
    },
    get C185() {
      return C185 = dart.constList(["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.y", "dd.MM.yy"], dart.dynamic);
    },
    get C186() {
      return C186 = dart.constList(["{1} 'um' {0}", "{1} 'um' {0}", "{1}, {0}", "{1}, {0}"], dart.dynamic);
    },
    get C174() {
      return C174 = dart.constMap(core.String, dart.dynamic, ["NAME", "de", "ERAS", C175 || CT.C175, "ERANAMES", C175 || CT.C175, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C176 || CT.C176, "STANDALONEMONTHS", C176 || CT.C176, "SHORTMONTHS", C177 || CT.C177, "STANDALONESHORTMONTHS", C178 || CT.C178, "WEEKDAYS", C179 || CT.C179, "STANDALONEWEEKDAYS", C179 || CT.C179, "SHORTWEEKDAYS", C180 || CT.C180, "STANDALONESHORTWEEKDAYS", C181 || CT.C181, "NARROWWEEKDAYS", C182 || CT.C182, "STANDALONENARROWWEEKDAYS", C182 || CT.C182, "SHORTQUARTERS", C114 || CT.C114, "QUARTERS", C183 || CT.C183, "AMPMS", C184 || CT.C184, "DATEFORMATS", C185 || CT.C185, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C186 || CT.C186]);
    },
    get C187() {
      return C187 = dart.constMap(core.String, dart.dynamic, ["NAME", "de_CH", "ERAS", C175 || CT.C175, "ERANAMES", C175 || CT.C175, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C176 || CT.C176, "STANDALONEMONTHS", C176 || CT.C176, "SHORTMONTHS", C177 || CT.C177, "STANDALONESHORTMONTHS", C178 || CT.C178, "WEEKDAYS", C179 || CT.C179, "STANDALONEWEEKDAYS", C179 || CT.C179, "SHORTWEEKDAYS", C180 || CT.C180, "STANDALONESHORTWEEKDAYS", C181 || CT.C181, "NARROWWEEKDAYS", C182 || CT.C182, "STANDALONENARROWWEEKDAYS", C182 || CT.C182, "SHORTQUARTERS", C114 || CT.C114, "QUARTERS", C183 || CT.C183, "AMPMS", C184 || CT.C184, "DATEFORMATS", C185 || CT.C185, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C186 || CT.C186]);
    },
    get C189() {
      return C189 = dart.constList(["π.Χ.", "μ.Χ."], dart.dynamic);
    },
    get C190() {
      return C190 = dart.constList(["προ Χριστού", "μετά Χριστόν"], dart.dynamic);
    },
    get C191() {
      return C191 = dart.constList(["Ι", "Φ", "Μ", "Α", "Μ", "Ι", "Ι", "Α", "Σ", "Ο", "Ν", "Δ"], dart.dynamic);
    },
    get C192() {
      return C192 = dart.constList(["Ιανουαρίου", "Φεβρουαρίου", "Μαρτίου", "Απριλίου", "Μαΐου", "Ιουνίου", "Ιουλίου", "Αυγούστου", "Σεπτεμβρίου", "Οκτωβρίου", "Νοεμβρίου", "Δεκεμβρίου"], dart.dynamic);
    },
    get C193() {
      return C193 = dart.constList(["Ιανουάριος", "Φεβρουάριος", "Μάρτιος", "Απρίλιος", "Μάιος", "Ιούνιος", "Ιούλιος", "Αύγουστος", "Σεπτέμβριος", "Οκτώβριος", "Νοέμβριος", "Δεκέμβριος"], dart.dynamic);
    },
    get C194() {
      return C194 = dart.constList(["Ιαν", "Φεβ", "Μαρ", "Απρ", "Μαΐ", "Ιουν", "Ιουλ", "Αυγ", "Σεπ", "Οκτ", "Νοε", "Δεκ"], dart.dynamic);
    },
    get C195() {
      return C195 = dart.constList(["Ιαν", "Φεβ", "Μάρ", "Απρ", "Μάι", "Ιούν", "Ιούλ", "Αύγ", "Σεπ", "Οκτ", "Νοέ", "Δεκ"], dart.dynamic);
    },
    get C196() {
      return C196 = dart.constList(["Κυριακή", "Δευτέρα", "Τρίτη", "Τετάρτη", "Πέμπτη", "Παρασκευή", "Σάββατο"], dart.dynamic);
    },
    get C197() {
      return C197 = dart.constList(["Κυρ", "Δευ", "Τρί", "Τετ", "Πέμ", "Παρ", "Σάβ"], dart.dynamic);
    },
    get C198() {
      return C198 = dart.constList(["Κ", "Δ", "Τ", "Τ", "Π", "Π", "Σ"], dart.dynamic);
    },
    get C199() {
      return C199 = dart.constList(["Τ1", "Τ2", "Τ3", "Τ4"], dart.dynamic);
    },
    get C200() {
      return C200 = dart.constList(["1ο τρίμηνο", "2ο τρίμηνο", "3ο τρίμηνο", "4ο τρίμηνο"], dart.dynamic);
    },
    get C201() {
      return C201 = dart.constList(["π.μ.", "μ.μ."], dart.dynamic);
    },
    get C202() {
      return C202 = dart.constList(["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], dart.dynamic);
    },
    get C203() {
      return C203 = dart.constList(["{1} - {0}", "{1} - {0}", "{1}, {0}", "{1}, {0}"], dart.dynamic);
    },
    get C188() {
      return C188 = dart.constMap(core.String, dart.dynamic, ["NAME", "el", "ERAS", C189 || CT.C189, "ERANAMES", C190 || CT.C190, "NARROWMONTHS", C191 || CT.C191, "STANDALONENARROWMONTHS", C191 || CT.C191, "MONTHS", C192 || CT.C192, "STANDALONEMONTHS", C193 || CT.C193, "SHORTMONTHS", C194 || CT.C194, "STANDALONESHORTMONTHS", C195 || CT.C195, "WEEKDAYS", C196 || CT.C196, "STANDALONEWEEKDAYS", C196 || CT.C196, "SHORTWEEKDAYS", C197 || CT.C197, "STANDALONESHORTWEEKDAYS", C197 || CT.C197, "NARROWWEEKDAYS", C198 || CT.C198, "STANDALONENARROWWEEKDAYS", C198 || CT.C198, "SHORTQUARTERS", C199 || CT.C199, "QUARTERS", C200 || CT.C200, "AMPMS", C201 || CT.C201, "DATEFORMATS", C202 || CT.C202, "TIMEFORMATS", C47 || CT.C47, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C203 || CT.C203]);
    },
    get C205() {
      return C205 = dart.constList(["BC", "AD"], dart.dynamic);
    },
    get C206() {
      return C206 = dart.constList(["Before Christ", "Anno Domini"], dart.dynamic);
    },
    get C207() {
      return C207 = dart.constList(["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], dart.dynamic);
    },
    get C208() {
      return C208 = dart.constList(["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], dart.dynamic);
    },
    get C209() {
      return C209 = dart.constList(["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], dart.dynamic);
    },
    get C210() {
      return C210 = dart.constList(["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], dart.dynamic);
    },
    get C211() {
      return C211 = dart.constList(["S", "M", "T", "W", "T", "F", "S"], dart.dynamic);
    },
    get C212() {
      return C212 = dart.constList(["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], dart.dynamic);
    },
    get C213() {
      return C213 = dart.constList(["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], dart.dynamic);
    },
    get C214() {
      return C214 = dart.constList(["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], dart.dynamic);
    },
    get C204() {
      return C204 = dart.constMap(core.String, dart.dynamic, ["NAME", "en", "ERAS", C205 || CT.C205, "ERANAMES", C206 || CT.C206, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C207 || CT.C207, "STANDALONEMONTHS", C207 || CT.C207, "SHORTMONTHS", C208 || CT.C208, "STANDALONESHORTMONTHS", C208 || CT.C208, "WEEKDAYS", C209 || CT.C209, "STANDALONEWEEKDAYS", C209 || CT.C209, "SHORTWEEKDAYS", C210 || CT.C210, "STANDALONESHORTWEEKDAYS", C210 || CT.C210, "NARROWWEEKDAYS", C211 || CT.C211, "STANDALONENARROWWEEKDAYS", C211 || CT.C211, "SHORTQUARTERS", C114 || CT.C114, "QUARTERS", C212 || CT.C212, "AMPMS", C71 || CT.C71, "DATEFORMATS", C213 || CT.C213, "TIMEFORMATS", C47 || CT.C47, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C214 || CT.C214]);
    },
    get C216() {
      return C216 = dart.constList(["Jan.", "Feb.", "Mar.", "Apr.", "May", "Jun.", "Jul.", "Aug.", "Sep.", "Oct.", "Nov.", "Dec."], dart.dynamic);
    },
    get C217() {
      return C217 = dart.constList(["Sun.", "Mon.", "Tue.", "Wed.", "Thu.", "Fri.", "Sat."], dart.dynamic);
    },
    get C218() {
      return C218 = dart.constList(["Su.", "M.", "Tu.", "W.", "Th.", "F.", "Sa."], dart.dynamic);
    },
    get C219() {
      return C219 = dart.constList(["am", "pm"], dart.dynamic);
    },
    get C215() {
      return C215 = dart.constMap(core.String, dart.dynamic, ["NAME", "en_AU", "ERAS", C205 || CT.C205, "ERANAMES", C206 || CT.C206, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C207 || CT.C207, "STANDALONEMONTHS", C207 || CT.C207, "SHORTMONTHS", C216 || CT.C216, "STANDALONESHORTMONTHS", C216 || CT.C216, "WEEKDAYS", C209 || CT.C209, "STANDALONEWEEKDAYS", C209 || CT.C209, "SHORTWEEKDAYS", C217 || CT.C217, "STANDALONESHORTWEEKDAYS", C217 || CT.C217, "NARROWWEEKDAYS", C218 || CT.C218, "STANDALONENARROWWEEKDAYS", C218 || CT.C218, "SHORTQUARTERS", C114 || CT.C114, "QUARTERS", C212 || CT.C212, "AMPMS", C219 || CT.C219, "DATEFORMATS", C202 || CT.C202, "TIMEFORMATS", C47 || CT.C47, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C214 || CT.C214]);
    },
    get C221() {
      return C221 = dart.constList(["a.m.", "p.m."], dart.dynamic);
    },
    get C222() {
      return C222 = dart.constList(["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "y-MM-dd"], dart.dynamic);
    },
    get C220() {
      return C220 = dart.constMap(core.String, dart.dynamic, ["NAME", "en_CA", "ERAS", C205 || CT.C205, "ERANAMES", C206 || CT.C206, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C207 || CT.C207, "STANDALONEMONTHS", C207 || CT.C207, "SHORTMONTHS", C216 || CT.C216, "STANDALONESHORTMONTHS", C208 || CT.C208, "WEEKDAYS", C209 || CT.C209, "STANDALONEWEEKDAYS", C209 || CT.C209, "SHORTWEEKDAYS", C217 || CT.C217, "STANDALONESHORTWEEKDAYS", C217 || CT.C217, "NARROWWEEKDAYS", C211 || CT.C211, "STANDALONENARROWWEEKDAYS", C211 || CT.C211, "SHORTQUARTERS", C114 || CT.C114, "QUARTERS", C212 || CT.C212, "AMPMS", C221 || CT.C221, "DATEFORMATS", C222 || CT.C222, "TIMEFORMATS", C47 || CT.C47, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C214 || CT.C214]);
    },
    get C224() {
      return C224 = dart.constList(["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], dart.dynamic);
    },
    get C223() {
      return C223 = dart.constMap(core.String, dart.dynamic, ["NAME", "en_GB", "ERAS", C205 || CT.C205, "ERANAMES", C206 || CT.C206, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C207 || CT.C207, "STANDALONEMONTHS", C207 || CT.C207, "SHORTMONTHS", C208 || CT.C208, "STANDALONESHORTMONTHS", C208 || CT.C208, "WEEKDAYS", C209 || CT.C209, "STANDALONEWEEKDAYS", C209 || CT.C209, "SHORTWEEKDAYS", C210 || CT.C210, "STANDALONESHORTWEEKDAYS", C210 || CT.C210, "NARROWWEEKDAYS", C211 || CT.C211, "STANDALONENARROWWEEKDAYS", C211 || CT.C211, "SHORTQUARTERS", C114 || CT.C114, "QUARTERS", C212 || CT.C212, "AMPMS", C219 || CT.C219, "DATEFORMATS", C224 || CT.C224, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C214 || CT.C214]);
    },
    get C226() {
      return C226 = dart.constList(["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], dart.dynamic);
    },
    get C225() {
      return C225 = dart.constMap(core.String, dart.dynamic, ["NAME", "en_IE", "ERAS", C205 || CT.C205, "ERANAMES", C206 || CT.C206, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C207 || CT.C207, "STANDALONEMONTHS", C207 || CT.C207, "SHORTMONTHS", C208 || CT.C208, "STANDALONESHORTMONTHS", C208 || CT.C208, "WEEKDAYS", C209 || CT.C209, "STANDALONEWEEKDAYS", C209 || CT.C209, "SHORTWEEKDAYS", C210 || CT.C210, "STANDALONESHORTWEEKDAYS", C210 || CT.C210, "NARROWWEEKDAYS", C211 || CT.C211, "STANDALONENARROWWEEKDAYS", C211 || CT.C211, "SHORTQUARTERS", C114 || CT.C114, "QUARTERS", C212 || CT.C212, "AMPMS", C221 || CT.C221, "DATEFORMATS", C226 || CT.C226, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 2, "DATETIMEFORMATS", C214 || CT.C214]);
    },
    get C228() {
      return C228 = dart.constList(["EEEE, d MMMM, y", "d MMMM y", "dd-MMM-y", "dd/MM/yy"], dart.dynamic);
    },
    get C229() {
      return C229 = dart.constList([6, 6], dart.dynamic);
    },
    get C227() {
      return C227 = dart.constMap(core.String, dart.dynamic, ["NAME", "en_IN", "ERAS", C205 || CT.C205, "ERANAMES", C206 || CT.C206, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C207 || CT.C207, "STANDALONEMONTHS", C207 || CT.C207, "SHORTMONTHS", C208 || CT.C208, "STANDALONESHORTMONTHS", C208 || CT.C208, "WEEKDAYS", C209 || CT.C209, "STANDALONEWEEKDAYS", C209 || CT.C209, "SHORTWEEKDAYS", C210 || CT.C210, "STANDALONESHORTWEEKDAYS", C210 || CT.C210, "NARROWWEEKDAYS", C211 || CT.C211, "STANDALONENARROWWEEKDAYS", C211 || CT.C211, "SHORTQUARTERS", C114 || CT.C114, "QUARTERS", C212 || CT.C212, "AMPMS", C71 || CT.C71, "DATEFORMATS", C228 || CT.C228, "TIMEFORMATS", C47 || CT.C47, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C229 || CT.C229, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C214 || CT.C214]);
    },
    get C230() {
      return C230 = dart.constMap(core.String, dart.dynamic, ["NAME", "en_SG", "ERAS", C205 || CT.C205, "ERANAMES", C206 || CT.C206, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C207 || CT.C207, "STANDALONEMONTHS", C207 || CT.C207, "SHORTMONTHS", C208 || CT.C208, "STANDALONESHORTMONTHS", C208 || CT.C208, "WEEKDAYS", C209 || CT.C209, "STANDALONEWEEKDAYS", C209 || CT.C209, "SHORTWEEKDAYS", C210 || CT.C210, "STANDALONESHORTWEEKDAYS", C210 || CT.C210, "NARROWWEEKDAYS", C211 || CT.C211, "STANDALONENARROWWEEKDAYS", C211 || CT.C211, "SHORTQUARTERS", C114 || CT.C114, "QUARTERS", C212 || CT.C212, "AMPMS", C71 || CT.C71, "DATEFORMATS", C202 || CT.C202, "TIMEFORMATS", C47 || CT.C47, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C214 || CT.C214]);
    },
    get C232() {
      return C232 = dart.constList(["EEEE, dd MMMM y", "dd MMMM y", "dd MMM y", "y/MM/dd"], dart.dynamic);
    },
    get C231() {
      return C231 = dart.constMap(core.String, dart.dynamic, ["NAME", "en_ZA", "ERAS", C205 || CT.C205, "ERANAMES", C206 || CT.C206, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C207 || CT.C207, "STANDALONEMONTHS", C207 || CT.C207, "SHORTMONTHS", C208 || CT.C208, "STANDALONESHORTMONTHS", C208 || CT.C208, "WEEKDAYS", C209 || CT.C209, "STANDALONEWEEKDAYS", C209 || CT.C209, "SHORTWEEKDAYS", C210 || CT.C210, "STANDALONESHORTWEEKDAYS", C210 || CT.C210, "NARROWWEEKDAYS", C211 || CT.C211, "STANDALONENARROWWEEKDAYS", C211 || CT.C211, "SHORTQUARTERS", C114 || CT.C114, "QUARTERS", C212 || CT.C212, "AMPMS", C71 || CT.C71, "DATEFORMATS", C232 || CT.C232, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C214 || CT.C214]);
    },
    get C234() {
      return C234 = dart.constList(["a. C.", "d. C."], dart.dynamic);
    },
    get C235() {
      return C235 = dart.constList(["antes de Cristo", "después de Cristo"], dart.dynamic);
    },
    get C236() {
      return C236 = dart.constList(["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], dart.dynamic);
    },
    get C237() {
      return C237 = dart.constList(["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"], dart.dynamic);
    },
    get C238() {
      return C238 = dart.constList(["ene.", "feb.", "mar.", "abr.", "may.", "jun.", "jul.", "ago.", "sept.", "oct.", "nov.", "dic."], dart.dynamic);
    },
    get C239() {
      return C239 = dart.constList(["domingo", "lunes", "martes", "miércoles", "jueves", "viernes", "sábado"], dart.dynamic);
    },
    get C240() {
      return C240 = dart.constList(["dom.", "lun.", "mar.", "mié.", "jue.", "vie.", "sáb."], dart.dynamic);
    },
    get C241() {
      return C241 = dart.constList(["D", "L", "M", "X", "J", "V", "S"], dart.dynamic);
    },
    get C242() {
      return C242 = dart.constList(["T1", "T2", "T3", "T4"], dart.dynamic);
    },
    get C243() {
      return C243 = dart.constList(["1.er trimestre", "2.º trimestre", "3.er trimestre", "4.º trimestre"], dart.dynamic);
    },
    get C244() {
      return C244 = dart.constList(["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "d MMM y", "d/M/yy"], dart.dynamic);
    },
    get C245() {
      return C245 = dart.constList(["H:mm:ss (zzzz)", "H:mm:ss z", "H:mm:ss", "H:mm"], dart.dynamic);
    },
    get C246() {
      return C246 = dart.constList(["{1}, {0}", "{1}, {0}", "{1} {0}", "{1} {0}"], dart.dynamic);
    },
    get C233() {
      return C233 = dart.constMap(core.String, dart.dynamic, ["NAME", "es", "ERAS", C234 || CT.C234, "ERANAMES", C235 || CT.C235, "NARROWMONTHS", C236 || CT.C236, "STANDALONENARROWMONTHS", C236 || CT.C236, "MONTHS", C237 || CT.C237, "STANDALONEMONTHS", C237 || CT.C237, "SHORTMONTHS", C238 || CT.C238, "STANDALONESHORTMONTHS", C238 || CT.C238, "WEEKDAYS", C239 || CT.C239, "STANDALONEWEEKDAYS", C239 || CT.C239, "SHORTWEEKDAYS", C240 || CT.C240, "STANDALONESHORTWEEKDAYS", C240 || CT.C240, "NARROWWEEKDAYS", C241 || CT.C241, "STANDALONENARROWWEEKDAYS", C241 || CT.C241, "SHORTQUARTERS", C242 || CT.C242, "QUARTERS", C243 || CT.C243, "AMPMS", C145 || CT.C145, "DATEFORMATS", C244 || CT.C244, "TIMEFORMATS", C245 || CT.C245, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C246 || CT.C246]);
    },
    get C248() {
      return C248 = dart.constList(["ene.", "feb.", "mar.", "abr.", "may.", "jun.", "jul.", "ago.", "sep.", "oct.", "nov.", "dic."], dart.dynamic);
    },
    get C249() {
      return C249 = dart.constList(["d", "l", "m", "m", "j", "v", "s"], dart.dynamic);
    },
    get C250() {
      return C250 = dart.constList(["D", "L", "M", "M", "J", "V", "S"], dart.dynamic);
    },
    get C251() {
      return C251 = dart.constList(["1.º trimestre", "2.º trimestre", "3.º trimestre", "4.º trimestre"], dart.dynamic);
    },
    get C247() {
      return C247 = dart.constMap(core.String, dart.dynamic, ["NAME", "es_419", "ERAS", C234 || CT.C234, "ERANAMES", C235 || CT.C235, "NARROWMONTHS", C236 || CT.C236, "STANDALONENARROWMONTHS", C236 || CT.C236, "MONTHS", C237 || CT.C237, "STANDALONEMONTHS", C237 || CT.C237, "SHORTMONTHS", C248 || CT.C248, "STANDALONESHORTMONTHS", C248 || CT.C248, "WEEKDAYS", C239 || CT.C239, "STANDALONEWEEKDAYS", C239 || CT.C239, "SHORTWEEKDAYS", C240 || CT.C240, "STANDALONESHORTWEEKDAYS", C240 || CT.C240, "NARROWWEEKDAYS", C249 || CT.C249, "STANDALONENARROWWEEKDAYS", C250 || CT.C250, "SHORTQUARTERS", C242 || CT.C242, "QUARTERS", C251 || CT.C251, "AMPMS", C221 || CT.C221, "DATEFORMATS", C244 || CT.C244, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C246 || CT.C246]);
    },
    get C253() {
      return C253 = dart.constList(["ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic"], dart.dynamic);
    },
    get C254() {
      return C254 = dart.constList(["1er. trim.", "2º. trim.", "3er. trim.", "4º trim."], dart.dynamic);
    },
    get C255() {
      return C255 = dart.constList(["1.er trimestre", "2º. trimestre", "3.er trimestre", "4o. trimestre"], dart.dynamic);
    },
    get C256() {
      return C256 = dart.constList(["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "d MMM y", "dd/MM/yy"], dart.dynamic);
    },
    get C252() {
      return C252 = dart.constMap(core.String, dart.dynamic, ["NAME", "es_MX", "ERAS", C234 || CT.C234, "ERANAMES", C235 || CT.C235, "NARROWMONTHS", C236 || CT.C236, "STANDALONENARROWMONTHS", C236 || CT.C236, "MONTHS", C237 || CT.C237, "STANDALONEMONTHS", C237 || CT.C237, "SHORTMONTHS", C253 || CT.C253, "STANDALONESHORTMONTHS", C248 || CT.C248, "WEEKDAYS", C239 || CT.C239, "STANDALONEWEEKDAYS", C239 || CT.C239, "SHORTWEEKDAYS", C240 || CT.C240, "STANDALONESHORTWEEKDAYS", C240 || CT.C240, "NARROWWEEKDAYS", C250 || CT.C250, "STANDALONENARROWWEEKDAYS", C250 || CT.C250, "SHORTQUARTERS", C254 || CT.C254, "QUARTERS", C255 || CT.C255, "AMPMS", C145 || CT.C145, "DATEFORMATS", C256 || CT.C256, "TIMEFORMATS", C147 || CT.C147, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C246 || CT.C246]);
    },
    get C258() {
      return C258 = dart.constList(["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "d MMM y", "d/M/y"], dart.dynamic);
    },
    get C257() {
      return C257 = dart.constMap(core.String, dart.dynamic, ["NAME", "es_US", "ERAS", C234 || CT.C234, "ERANAMES", C235 || CT.C235, "NARROWMONTHS", C236 || CT.C236, "STANDALONENARROWMONTHS", C236 || CT.C236, "MONTHS", C237 || CT.C237, "STANDALONEMONTHS", C237 || CT.C237, "SHORTMONTHS", C248 || CT.C248, "STANDALONESHORTMONTHS", C248 || CT.C248, "WEEKDAYS", C239 || CT.C239, "STANDALONEWEEKDAYS", C239 || CT.C239, "SHORTWEEKDAYS", C240 || CT.C240, "STANDALONESHORTWEEKDAYS", C240 || CT.C240, "NARROWWEEKDAYS", C250 || CT.C250, "STANDALONENARROWWEEKDAYS", C250 || CT.C250, "SHORTQUARTERS", C242 || CT.C242, "QUARTERS", C243 || CT.C243, "AMPMS", C145 || CT.C145, "DATEFORMATS", C258 || CT.C258, "TIMEFORMATS", C47 || CT.C47, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C246 || CT.C246]);
    },
    get C260() {
      return C260 = dart.constList(["eKr", "pKr"], dart.dynamic);
    },
    get C261() {
      return C261 = dart.constList(["enne Kristust", "pärast Kristust"], dart.dynamic);
    },
    get C262() {
      return C262 = dart.constList(["J", "V", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], dart.dynamic);
    },
    get C263() {
      return C263 = dart.constList(["jaanuar", "veebruar", "märts", "aprill", "mai", "juuni", "juuli", "august", "september", "oktoober", "november", "detsember"], dart.dynamic);
    },
    get C264() {
      return C264 = dart.constList(["jaan", "veebr", "märts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets"], dart.dynamic);
    },
    get C265() {
      return C265 = dart.constList(["pühapäev", "esmaspäev", "teisipäev", "kolmapäev", "neljapäev", "reede", "laupäev"], dart.dynamic);
    },
    get C266() {
      return C266 = dart.constList(["P", "E", "T", "K", "N", "R", "L"], dart.dynamic);
    },
    get C267() {
      return C267 = dart.constList(["EEEE, d. MMMM y", "d. MMMM y", "d. MMM y", "dd.MM.yy"], dart.dynamic);
    },
    get C259() {
      return C259 = dart.constMap(core.String, dart.dynamic, ["NAME", "et", "ERAS", C260 || CT.C260, "ERANAMES", C261 || CT.C261, "NARROWMONTHS", C262 || CT.C262, "STANDALONENARROWMONTHS", C262 || CT.C262, "MONTHS", C263 || CT.C263, "STANDALONEMONTHS", C263 || CT.C263, "SHORTMONTHS", C264 || CT.C264, "STANDALONESHORTMONTHS", C264 || CT.C264, "WEEKDAYS", C265 || CT.C265, "STANDALONEWEEKDAYS", C265 || CT.C265, "SHORTWEEKDAYS", C266 || CT.C266, "STANDALONESHORTWEEKDAYS", C266 || CT.C266, "NARROWWEEKDAYS", C266 || CT.C266, "STANDALONENARROWWEEKDAYS", C266 || CT.C266, "SHORTQUARTERS", C27 || CT.C27, "QUARTERS", C170 || CT.C170, "AMPMS", C71 || CT.C71, "DATEFORMATS", C267 || CT.C267, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C269() {
      return C269 = dart.constList(["K.a.", "K.o."], dart.dynamic);
    },
    get C270() {
      return C270 = dart.constList(["K.a.", "Kristo ondoren"], dart.dynamic);
    },
    get C271() {
      return C271 = dart.constList(["U", "O", "M", "A", "M", "E", "U", "A", "I", "U", "A", "A"], dart.dynamic);
    },
    get C272() {
      return C272 = dart.constList(["urtarrila", "otsaila", "martxoa", "apirila", "maiatza", "ekaina", "uztaila", "abuztua", "iraila", "urria", "azaroa", "abendua"], dart.dynamic);
    },
    get C273() {
      return C273 = dart.constList(["urtarrila", "Otsaila", "Martxoa", "Apirila", "Maiatza", "Ekaina", "Uztaila", "Abuztua", "Iraila", "Urria", "Azaroa", "Abendua"], dart.dynamic);
    },
    get C274() {
      return C274 = dart.constList(["urt.", "ots.", "mar.", "api.", "mai.", "eka.", "uzt.", "abu.", "ira.", "urr.", "aza.", "abe."], dart.dynamic);
    },
    get C275() {
      return C275 = dart.constList(["igandea", "astelehena", "asteartea", "asteazkena", "osteguna", "ostirala", "larunbata"], dart.dynamic);
    },
    get C276() {
      return C276 = dart.constList(["Igandea", "Astelehena", "Asteartea", "Asteazkena", "Osteguna", "Ostirala", "Larunbata"], dart.dynamic);
    },
    get C277() {
      return C277 = dart.constList(["ig.", "al.", "ar.", "az.", "og.", "or.", "lr."], dart.dynamic);
    },
    get C278() {
      return C278 = dart.constList(["I", "A", "A", "A", "O", "O", "L"], dart.dynamic);
    },
    get C279() {
      return C279 = dart.constList(["1Hh", "2Hh", "3Hh", "4Hh"], dart.dynamic);
    },
    get C280() {
      return C280 = dart.constList(["1. hiruhilekoa", "2. hiruhilekoa", "3. hiruhilekoa", "4. hiruhilekoa"], dart.dynamic);
    },
    get C281() {
      return C281 = dart.constList(["y('e')'ko' MMMM'ren' d('a'), EEEE", "y('e')'ko' MMMM'ren' d('a')", "y MMM d", "yy/M/d"], dart.dynamic);
    },
    get C282() {
      return C282 = dart.constList(["HH:mm:ss (zzzz)", "HH:mm:ss (z)", "HH:mm:ss", "HH:mm"], dart.dynamic);
    },
    get C268() {
      return C268 = dart.constMap(core.String, dart.dynamic, ["NAME", "eu", "ERAS", C269 || CT.C269, "ERANAMES", C270 || CT.C270, "NARROWMONTHS", C271 || CT.C271, "STANDALONENARROWMONTHS", C271 || CT.C271, "MONTHS", C272 || CT.C272, "STANDALONEMONTHS", C273 || CT.C273, "SHORTMONTHS", C274 || CT.C274, "STANDALONESHORTMONTHS", C274 || CT.C274, "WEEKDAYS", C275 || CT.C275, "STANDALONEWEEKDAYS", C276 || CT.C276, "SHORTWEEKDAYS", C277 || CT.C277, "STANDALONESHORTWEEKDAYS", C277 || CT.C277, "NARROWWEEKDAYS", C278 || CT.C278, "STANDALONENARROWWEEKDAYS", C278 || CT.C278, "SHORTQUARTERS", C279 || CT.C279, "QUARTERS", C280 || CT.C280, "AMPMS", C71 || CT.C71, "DATEFORMATS", C281 || CT.C281, "TIMEFORMATS", C282 || CT.C282, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C284() {
      return C284 = dart.constList(["ق.م.", "م."], dart.dynamic);
    },
    get C285() {
      return C285 = dart.constList(["قبل از میلاد", "میلادی"], dart.dynamic);
    },
    get C286() {
      return C286 = dart.constList(["ژ", "ف", "م", "آ", "م", "ژ", "ژ", "ا", "س", "ا", "ن", "د"], dart.dynamic);
    },
    get C287() {
      return C287 = dart.constList(["ژانویهٔ", "فوریهٔ", "مارس", "آوریل", "مهٔ", "ژوئن", "ژوئیهٔ", "اوت", "سپتامبر", "اکتبر", "نوامبر", "دسامبر"], dart.dynamic);
    },
    get C288() {
      return C288 = dart.constList(["ژانویه", "فوریه", "مارس", "آوریل", "مه", "ژوئن", "ژوئیه", "اوت", "سپتامبر", "اکتبر", "نوامبر", "دسامبر"], dart.dynamic);
    },
    get C289() {
      return C289 = dart.constList(["یکشنبه", "دوشنبه", "سه‌شنبه", "چهارشنبه", "پنجشنبه", "جمعه", "شنبه"], dart.dynamic);
    },
    get C290() {
      return C290 = dart.constList(["ی", "د", "س", "چ", "پ", "ج", "ش"], dart.dynamic);
    },
    get C291() {
      return C291 = dart.constList(["س‌م۱", "س‌م۲", "س‌م۳", "س‌م۴"], dart.dynamic);
    },
    get C292() {
      return C292 = dart.constList(["سه‌ماههٔ اول", "سه‌ماههٔ دوم", "سه‌ماههٔ سوم", "سه‌ماههٔ چهارم"], dart.dynamic);
    },
    get C293() {
      return C293 = dart.constList(["قبل‌ازظهر", "بعدازظهر"], dart.dynamic);
    },
    get C294() {
      return C294 = dart.constList(["EEEE d MMMM y", "d MMMM y", "d MMM y", "y/M/d"], dart.dynamic);
    },
    get C295() {
      return C295 = dart.constList(["H:mm:ss (zzzz)", "H:mm:ss (z)", "H:mm:ss", "H:mm"], dart.dynamic);
    },
    get C296() {
      return C296 = dart.constList([4, 4], dart.dynamic);
    },
    get C297() {
      return C297 = dart.constList(["{1}، ساعت {0}", "{1}، ساعت {0}", "{1}،‏ {0}", "{1}،‏ {0}"], dart.dynamic);
    },
    get C283() {
      return C283 = dart.constMap(core.String, dart.dynamic, ["NAME", "fa", "ERAS", C284 || CT.C284, "ERANAMES", C285 || CT.C285, "NARROWMONTHS", C286 || CT.C286, "STANDALONENARROWMONTHS", C286 || CT.C286, "MONTHS", C287 || CT.C287, "STANDALONEMONTHS", C288 || CT.C288, "SHORTMONTHS", C287 || CT.C287, "STANDALONESHORTMONTHS", C288 || CT.C288, "WEEKDAYS", C289 || CT.C289, "STANDALONEWEEKDAYS", C289 || CT.C289, "SHORTWEEKDAYS", C289 || CT.C289, "STANDALONESHORTWEEKDAYS", C289 || CT.C289, "NARROWWEEKDAYS", C290 || CT.C290, "STANDALONENARROWWEEKDAYS", C290 || CT.C290, "SHORTQUARTERS", C291 || CT.C291, "QUARTERS", C292 || CT.C292, "AMPMS", C293 || CT.C293, "DATEFORMATS", C294 || CT.C294, "TIMEFORMATS", C295 || CT.C295, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 5, "WEEKENDRANGE", C296 || CT.C296, "FIRSTWEEKCUTOFFDAY", 4, "DATETIMEFORMATS", C297 || CT.C297, "ZERODIGIT", "۰"]);
    },
    get C299() {
      return C299 = dart.constList(["eKr.", "jKr."], dart.dynamic);
    },
    get C300() {
      return C300 = dart.constList(["ennen Kristuksen syntymää", "jälkeen Kristuksen syntymän"], dart.dynamic);
    },
    get C301() {
      return C301 = dart.constList(["T", "H", "M", "H", "T", "K", "H", "E", "S", "L", "M", "J"], dart.dynamic);
    },
    get C302() {
      return C302 = dart.constList(["tammikuuta", "helmikuuta", "maaliskuuta", "huhtikuuta", "toukokuuta", "kesäkuuta", "heinäkuuta", "elokuuta", "syyskuuta", "lokakuuta", "marraskuuta", "joulukuuta"], dart.dynamic);
    },
    get C303() {
      return C303 = dart.constList(["tammikuu", "helmikuu", "maaliskuu", "huhtikuu", "toukokuu", "kesäkuu", "heinäkuu", "elokuu", "syyskuu", "lokakuu", "marraskuu", "joulukuu"], dart.dynamic);
    },
    get C304() {
      return C304 = dart.constList(["tammik.", "helmik.", "maalisk.", "huhtik.", "toukok.", "kesäk.", "heinäk.", "elok.", "syysk.", "lokak.", "marrask.", "jouluk."], dart.dynamic);
    },
    get C305() {
      return C305 = dart.constList(["tammi", "helmi", "maalis", "huhti", "touko", "kesä", "heinä", "elo", "syys", "loka", "marras", "joulu"], dart.dynamic);
    },
    get C306() {
      return C306 = dart.constList(["sunnuntaina", "maanantaina", "tiistaina", "keskiviikkona", "torstaina", "perjantaina", "lauantaina"], dart.dynamic);
    },
    get C307() {
      return C307 = dart.constList(["sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai"], dart.dynamic);
    },
    get C308() {
      return C308 = dart.constList(["su", "ma", "ti", "ke", "to", "pe", "la"], dart.dynamic);
    },
    get C309() {
      return C309 = dart.constList(["S", "M", "T", "K", "T", "P", "L"], dart.dynamic);
    },
    get C310() {
      return C310 = dart.constList(["1. nelj.", "2. nelj.", "3. nelj.", "4. nelj."], dart.dynamic);
    },
    get C311() {
      return C311 = dart.constList(["1. neljännes", "2. neljännes", "3. neljännes", "4. neljännes"], dart.dynamic);
    },
    get C312() {
      return C312 = dart.constList(["ap.", "ip."], dart.dynamic);
    },
    get C313() {
      return C313 = dart.constList(["cccc d. MMMM y", "d. MMMM y", "d.M.y", "d.M.y"], dart.dynamic);
    },
    get C314() {
      return C314 = dart.constList(["H.mm.ss zzzz", "H.mm.ss z", "H.mm.ss", "H.mm"], dart.dynamic);
    },
    get C315() {
      return C315 = dart.constList(["{1} 'klo' {0}", "{1} 'klo' {0}", "{1} 'klo' {0}", "{1} {0}"], dart.dynamic);
    },
    get C298() {
      return C298 = dart.constMap(core.String, dart.dynamic, ["NAME", "fi", "ERAS", C299 || CT.C299, "ERANAMES", C300 || CT.C300, "NARROWMONTHS", C301 || CT.C301, "STANDALONENARROWMONTHS", C301 || CT.C301, "MONTHS", C302 || CT.C302, "STANDALONEMONTHS", C303 || CT.C303, "SHORTMONTHS", C304 || CT.C304, "STANDALONESHORTMONTHS", C305 || CT.C305, "WEEKDAYS", C306 || CT.C306, "STANDALONEWEEKDAYS", C307 || CT.C307, "SHORTWEEKDAYS", C308 || CT.C308, "STANDALONESHORTWEEKDAYS", C308 || CT.C308, "NARROWWEEKDAYS", C309 || CT.C309, "STANDALONENARROWWEEKDAYS", C309 || CT.C309, "SHORTQUARTERS", C310 || CT.C310, "QUARTERS", C311 || CT.C311, "AMPMS", C312 || CT.C312, "DATEFORMATS", C313 || CT.C313, "TIMEFORMATS", C314 || CT.C314, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C315 || CT.C315]);
    },
    get C317() {
      return C317 = dart.constList(["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], dart.dynamic);
    },
    get C318() {
      return C318 = dart.constList(["E", "P", "M", "A", "M", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], dart.dynamic);
    },
    get C319() {
      return C319 = dart.constList(["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], dart.dynamic);
    },
    get C320() {
      return C320 = dart.constList(["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], dart.dynamic);
    },
    get C321() {
      return C321 = dart.constList(["Lin", "Lun", "Mar", "Miy", "Huw", "Biy", "Sab"], dart.dynamic);
    },
    get C322() {
      return C322 = dart.constList(["ika-1 quarter", "ika-2 quarter", "ika-3 quarter", "ika-4 na quarter"], dart.dynamic);
    },
    get C323() {
      return C323 = dart.constList(["{1} 'nang' {0}", "{1} 'nang' {0}", "{1}, {0}", "{1}, {0}"], dart.dynamic);
    },
    get C316() {
      return C316 = dart.constMap(core.String, dart.dynamic, ["NAME", "fil", "ERAS", C205 || CT.C205, "ERANAMES", C206 || CT.C206, "NARROWMONTHS", C317 || CT.C317, "STANDALONENARROWMONTHS", C318 || CT.C318, "MONTHS", C319 || CT.C319, "STANDALONEMONTHS", C319 || CT.C319, "SHORTMONTHS", C317 || CT.C317, "STANDALONESHORTMONTHS", C317 || CT.C317, "WEEKDAYS", C320 || CT.C320, "STANDALONEWEEKDAYS", C320 || CT.C320, "SHORTWEEKDAYS", C321 || CT.C321, "STANDALONESHORTWEEKDAYS", C321 || CT.C321, "NARROWWEEKDAYS", C321 || CT.C321, "STANDALONENARROWWEEKDAYS", C321 || CT.C321, "SHORTQUARTERS", C114 || CT.C114, "QUARTERS", C322 || CT.C322, "AMPMS", C71 || CT.C71, "DATEFORMATS", C213 || CT.C213, "TIMEFORMATS", C47 || CT.C47, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C323 || CT.C323]);
    },
    get C325() {
      return C325 = dart.constList(["av. J.-C.", "ap. J.-C."], dart.dynamic);
    },
    get C326() {
      return C326 = dart.constList(["avant Jésus-Christ", "après Jésus-Christ"], dart.dynamic);
    },
    get C327() {
      return C327 = dart.constList(["janvier", "février", "mars", "avril", "mai", "juin", "juillet", "août", "septembre", "octobre", "novembre", "décembre"], dart.dynamic);
    },
    get C328() {
      return C328 = dart.constList(["janv.", "févr.", "mars", "avr.", "mai", "juin", "juil.", "août", "sept.", "oct.", "nov.", "déc."], dart.dynamic);
    },
    get C329() {
      return C329 = dart.constList(["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"], dart.dynamic);
    },
    get C330() {
      return C330 = dart.constList(["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], dart.dynamic);
    },
    get C331() {
      return C331 = dart.constList(["1er trimestre", "2e trimestre", "3e trimestre", "4e trimestre"], dart.dynamic);
    },
    get C332() {
      return C332 = dart.constList(["{1} 'à' {0}", "{1} 'à' {0}", "{1} 'à' {0}", "{1} {0}"], dart.dynamic);
    },
    get C324() {
      return C324 = dart.constMap(core.String, dart.dynamic, ["NAME", "fr", "ERAS", C325 || CT.C325, "ERANAMES", C326 || CT.C326, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C327 || CT.C327, "STANDALONEMONTHS", C327 || CT.C327, "SHORTMONTHS", C328 || CT.C328, "STANDALONESHORTMONTHS", C328 || CT.C328, "WEEKDAYS", C329 || CT.C329, "STANDALONEWEEKDAYS", C329 || CT.C329, "SHORTWEEKDAYS", C330 || CT.C330, "STANDALONESHORTWEEKDAYS", C330 || CT.C330, "NARROWWEEKDAYS", C250 || CT.C250, "STANDALONENARROWWEEKDAYS", C250 || CT.C250, "SHORTQUARTERS", C242 || CT.C242, "QUARTERS", C331 || CT.C331, "AMPMS", C71 || CT.C71, "DATEFORMATS", C226 || CT.C226, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C332 || CT.C332]);
    },
    get C334() {
      return C334 = dart.constList(["janv.", "févr.", "mars", "avr.", "mai", "juin", "juill.", "août", "sept.", "oct.", "nov.", "déc."], dart.dynamic);
    },
    get C335() {
      return C335 = dart.constList(["EEEE d MMMM y", "d MMMM y", "d MMM y", "yy-MM-dd"], dart.dynamic);
    },
    get C336() {
      return C336 = dart.constList(["HH 'h' mm 'min' ss 's' zzzz", "HH 'h' mm 'min' ss 's' z", "HH 'h' mm 'min' ss 's'", "HH 'h' mm"], dart.dynamic);
    },
    get C337() {
      return C337 = dart.constList(["{1} 'à' {0}", "{1} 'à' {0}", "{1} {0}", "{1} {0}"], dart.dynamic);
    },
    get C333() {
      return C333 = dart.constMap(core.String, dart.dynamic, ["NAME", "fr_CA", "ERAS", C325 || CT.C325, "ERANAMES", C326 || CT.C326, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C327 || CT.C327, "STANDALONEMONTHS", C327 || CT.C327, "SHORTMONTHS", C334 || CT.C334, "STANDALONESHORTMONTHS", C334 || CT.C334, "WEEKDAYS", C329 || CT.C329, "STANDALONEWEEKDAYS", C329 || CT.C329, "SHORTWEEKDAYS", C330 || CT.C330, "STANDALONESHORTWEEKDAYS", C330 || CT.C330, "NARROWWEEKDAYS", C250 || CT.C250, "STANDALONENARROWWEEKDAYS", C250 || CT.C250, "SHORTQUARTERS", C242 || CT.C242, "QUARTERS", C331 || CT.C331, "AMPMS", C221 || CT.C221, "DATEFORMATS", C335 || CT.C335, "TIMEFORMATS", C336 || CT.C336, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C337 || CT.C337]);
    },
    get C339() {
      return C339 = dart.constList(["a.C.", "d.C."], dart.dynamic);
    },
    get C340() {
      return C340 = dart.constList(["antes de Cristo", "despois de Cristo"], dart.dynamic);
    },
    get C341() {
      return C341 = dart.constList(["x.", "f.", "m.", "a.", "m.", "x.", "x.", "a.", "s.", "o.", "n.", "d."], dart.dynamic);
    },
    get C342() {
      return C342 = dart.constList(["X", "F", "M", "A", "M", "X", "X", "A", "S", "O", "N", "D"], dart.dynamic);
    },
    get C343() {
      return C343 = dart.constList(["xaneiro", "febreiro", "marzo", "abril", "maio", "xuño", "xullo", "agosto", "setembro", "outubro", "novembro", "decembro"], dart.dynamic);
    },
    get C344() {
      return C344 = dart.constList(["Xaneiro", "Febreiro", "Marzo", "Abril", "Maio", "Xuño", "Xullo", "Agosto", "Setembro", "Outubro", "Novembro", "Decembro"], dart.dynamic);
    },
    get C345() {
      return C345 = dart.constList(["xan.", "feb.", "mar.", "abr.", "maio", "xuño", "xul.", "ago.", "set.", "out.", "nov.", "dec."], dart.dynamic);
    },
    get C346() {
      return C346 = dart.constList(["Xan.", "Feb.", "Mar.", "Abr.", "Maio", "Xuño", "Xul.", "Ago.", "Set.", "Out.", "Nov.", "Dec."], dart.dynamic);
    },
    get C347() {
      return C347 = dart.constList(["domingo", "luns", "martes", "mércores", "xoves", "venres", "sábado"], dart.dynamic);
    },
    get C348() {
      return C348 = dart.constList(["Domingo", "Luns", "Martes", "Mércores", "Xoves", "Venres", "Sábado"], dart.dynamic);
    },
    get C349() {
      return C349 = dart.constList(["dom.", "luns", "mar.", "mér.", "xov.", "ven.", "sáb."], dart.dynamic);
    },
    get C350() {
      return C350 = dart.constList(["Dom.", "Luns", "Mar.", "Mér.", "Xov.", "Ven.", "Sáb."], dart.dynamic);
    },
    get C351() {
      return C351 = dart.constList(["d.", "l.", "m.", "m.", "x.", "v.", "s."], dart.dynamic);
    },
    get C352() {
      return C352 = dart.constList(["D", "L", "M", "M", "X", "V", "S"], dart.dynamic);
    },
    get C353() {
      return C353 = dart.constList(["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "dd/MM/y", "dd/MM/yy"], dart.dynamic);
    },
    get C354() {
      return C354 = dart.constList(["{0} 'do' {1}", "{0} 'do' {1}", "{0}, {1}", "{0}, {1}"], dart.dynamic);
    },
    get C338() {
      return C338 = dart.constMap(core.String, dart.dynamic, ["NAME", "gl", "ERAS", C339 || CT.C339, "ERANAMES", C340 || CT.C340, "NARROWMONTHS", C341 || CT.C341, "STANDALONENARROWMONTHS", C342 || CT.C342, "MONTHS", C343 || CT.C343, "STANDALONEMONTHS", C344 || CT.C344, "SHORTMONTHS", C345 || CT.C345, "STANDALONESHORTMONTHS", C346 || CT.C346, "WEEKDAYS", C347 || CT.C347, "STANDALONEWEEKDAYS", C348 || CT.C348, "SHORTWEEKDAYS", C349 || CT.C349, "STANDALONESHORTWEEKDAYS", C350 || CT.C350, "NARROWWEEKDAYS", C351 || CT.C351, "STANDALONENARROWWEEKDAYS", C352 || CT.C352, "SHORTQUARTERS", C242 || CT.C242, "QUARTERS", C251 || CT.C251, "AMPMS", C221 || CT.C221, "DATEFORMATS", C353 || CT.C353, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C354 || CT.C354]);
    },
    get C356() {
      return C356 = dart.constList(["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "Auguscht", "Septämber", "Oktoober", "Novämber", "Dezämber"], dart.dynamic);
    },
    get C357() {
      return C357 = dart.constList(["Sunntig", "Määntig", "Ziischtig", "Mittwuch", "Dunschtig", "Friitig", "Samschtig"], dart.dynamic);
    },
    get C358() {
      return C358 = dart.constList(["Su.", "Mä.", "Zi.", "Mi.", "Du.", "Fr.", "Sa."], dart.dynamic);
    },
    get C359() {
      return C359 = dart.constList(["am Vormittag", "am Namittag"], dart.dynamic);
    },
    get C355() {
      return C355 = dart.constMap(core.String, dart.dynamic, ["NAME", "gsw", "ERAS", C175 || CT.C175, "ERANAMES", C175 || CT.C175, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C356 || CT.C356, "STANDALONEMONTHS", C356 || CT.C356, "SHORTMONTHS", C178 || CT.C178, "STANDALONESHORTMONTHS", C178 || CT.C178, "WEEKDAYS", C357 || CT.C357, "STANDALONEWEEKDAYS", C357 || CT.C357, "SHORTWEEKDAYS", C358 || CT.C358, "STANDALONESHORTWEEKDAYS", C358 || CT.C358, "NARROWWEEKDAYS", C182 || CT.C182, "STANDALONENARROWWEEKDAYS", C182 || CT.C182, "SHORTQUARTERS", C114 || CT.C114, "QUARTERS", C183 || CT.C183, "AMPMS", C359 || CT.C359, "DATEFORMATS", C185 || CT.C185, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C361() {
      return C361 = dart.constList(["ઈ.સ.પૂર્વે", "ઈ.સ."], dart.dynamic);
    },
    get C362() {
      return C362 = dart.constList(["ઈસવીસન પૂર્વે", "ઇસવીસન"], dart.dynamic);
    },
    get C363() {
      return C363 = dart.constList(["જા", "ફે", "મા", "એ", "મે", "જૂ", "જુ", "ઑ", "સ", "ઑ", "ન", "ડિ"], dart.dynamic);
    },
    get C364() {
      return C364 = dart.constList(["જાન્યુઆરી", "ફેબ્રુઆરી", "માર્ચ", "એપ્રિલ", "મે", "જૂન", "જુલાઈ", "ઑગસ્ટ", "સપ્ટેમ્બર", "ઑક્ટોબર", "નવેમ્બર", "ડિસેમ્બર"], dart.dynamic);
    },
    get C365() {
      return C365 = dart.constList(["જાન્યુ", "ફેબ્રુ", "માર્ચ", "એપ્રિલ", "મે", "જૂન", "જુલાઈ", "ઑગસ્ટ", "સપ્ટે", "ઑક્ટો", "નવે", "ડિસે"], dart.dynamic);
    },
    get C366() {
      return C366 = dart.constList(["રવિવાર", "સોમવાર", "મંગળવાર", "બુધવાર", "ગુરુવાર", "શુક્રવાર", "શનિવાર"], dart.dynamic);
    },
    get C367() {
      return C367 = dart.constList(["રવિ", "સોમ", "મંગળ", "બુધ", "ગુરુ", "શુક્ર", "શનિ"], dart.dynamic);
    },
    get C368() {
      return C368 = dart.constList(["ર", "સો", "મં", "બુ", "ગુ", "શુ", "શ"], dart.dynamic);
    },
    get C369() {
      return C369 = dart.constList(["1લો ત્રિમાસ", "2જો ત્રિમાસ", "3જો ત્રિમાસ", "4થો ત્રિમાસ"], dart.dynamic);
    },
    get C370() {
      return C370 = dart.constList(["hh:mm:ss a zzzz", "hh:mm:ss a z", "hh:mm:ss a", "hh:mm a"], dart.dynamic);
    },
    get C371() {
      return C371 = dart.constList(["{1} એ {0} વાગ્યે", "{1} એ {0} વાગ્યે", "{1} {0}", "{1} {0}"], dart.dynamic);
    },
    get C360() {
      return C360 = dart.constMap(core.String, dart.dynamic, ["NAME", "gu", "ERAS", C361 || CT.C361, "ERANAMES", C362 || CT.C362, "NARROWMONTHS", C363 || CT.C363, "STANDALONENARROWMONTHS", C363 || CT.C363, "MONTHS", C364 || CT.C364, "STANDALONEMONTHS", C364 || CT.C364, "SHORTMONTHS", C365 || CT.C365, "STANDALONESHORTMONTHS", C365 || CT.C365, "WEEKDAYS", C366 || CT.C366, "STANDALONEWEEKDAYS", C366 || CT.C366, "SHORTWEEKDAYS", C367 || CT.C367, "STANDALONESHORTWEEKDAYS", C367 || CT.C367, "NARROWWEEKDAYS", C368 || CT.C368, "STANDALONENARROWWEEKDAYS", C368 || CT.C368, "SHORTQUARTERS", C114 || CT.C114, "QUARTERS", C369 || CT.C369, "AMPMS", C71 || CT.C71, "DATEFORMATS", C116 || CT.C116, "TIMEFORMATS", C370 || CT.C370, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C229 || CT.C229, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C371 || CT.C371]);
    },
    get C373() {
      return C373 = dart.constList(["לפנה״ס", "לספירה"], dart.dynamic);
    },
    get C374() {
      return C374 = dart.constList(["לפני הספירה", "לספירה"], dart.dynamic);
    },
    get C375() {
      return C375 = dart.constList(["ינואר", "פברואר", "מרץ", "אפריל", "מאי", "יוני", "יולי", "אוגוסט", "ספטמבר", "אוקטובר", "נובמבר", "דצמבר"], dart.dynamic);
    },
    get C376() {
      return C376 = dart.constList(["ינו׳", "פבר׳", "מרץ", "אפר׳", "מאי", "יוני", "יולי", "אוג׳", "ספט׳", "אוק׳", "נוב׳", "דצמ׳"], dart.dynamic);
    },
    get C377() {
      return C377 = dart.constList(["יום ראשון", "יום שני", "יום שלישי", "יום רביעי", "יום חמישי", "יום שישי", "יום שבת"], dart.dynamic);
    },
    get C378() {
      return C378 = dart.constList(["יום א׳", "יום ב׳", "יום ג׳", "יום ד׳", "יום ה׳", "יום ו׳", "שבת"], dart.dynamic);
    },
    get C379() {
      return C379 = dart.constList(["א׳", "ב׳", "ג׳", "ד׳", "ה׳", "ו׳", "ש׳"], dart.dynamic);
    },
    get C380() {
      return C380 = dart.constList(["רבעון 1", "רבעון 2", "רבעון 3", "רבעון 4"], dart.dynamic);
    },
    get C381() {
      return C381 = dart.constList(["לפנה״צ", "אחה״צ"], dart.dynamic);
    },
    get C382() {
      return C382 = dart.constList(["EEEE, d בMMMM y", "d בMMMM y", "d בMMM y", "d.M.y"], dart.dynamic);
    },
    get C383() {
      return C383 = dart.constList(["{1} בשעה {0}", "{1} בשעה {0}", "{1}, {0}", "{1}, {0}"], dart.dynamic);
    },
    get C372() {
      return C372 = dart.constMap(core.String, dart.dynamic, ["NAME", "he", "ERAS", C373 || CT.C373, "ERANAMES", C374 || CT.C374, "NARROWMONTHS", C62 || CT.C62, "STANDALONENARROWMONTHS", C62 || CT.C62, "MONTHS", C375 || CT.C375, "STANDALONEMONTHS", C375 || CT.C375, "SHORTMONTHS", C376 || CT.C376, "STANDALONESHORTMONTHS", C376 || CT.C376, "WEEKDAYS", C377 || CT.C377, "STANDALONEWEEKDAYS", C377 || CT.C377, "SHORTWEEKDAYS", C378 || CT.C378, "STANDALONESHORTWEEKDAYS", C378 || CT.C378, "NARROWWEEKDAYS", C379 || CT.C379, "STANDALONENARROWWEEKDAYS", C379 || CT.C379, "SHORTQUARTERS", C114 || CT.C114, "QUARTERS", C380 || CT.C380, "AMPMS", C381 || CT.C381, "DATEFORMATS", C382 || CT.C382, "TIMEFORMATS", C147 || CT.C147, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C58 || CT.C58, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C383 || CT.C383]);
    },
    get C385() {
      return C385 = dart.constList(["ईसा-पूर्व", "ईस्वी"], dart.dynamic);
    },
    get C386() {
      return C386 = dart.constList(["ईसा-पूर्व", "ईसवी सन"], dart.dynamic);
    },
    get C387() {
      return C387 = dart.constList(["ज", "फ़", "मा", "अ", "म", "जू", "जु", "अ", "सि", "अ", "न", "दि"], dart.dynamic);
    },
    get C388() {
      return C388 = dart.constList(["जनवरी", "फ़रवरी", "मार्च", "अप्रैल", "मई", "जून", "जुलाई", "अगस्त", "सितंबर", "अक्तूबर", "नवंबर", "दिसंबर"], dart.dynamic);
    },
    get C389() {
      return C389 = dart.constList(["जन॰", "फ़र॰", "मार्च", "अप्रैल", "मई", "जून", "जुल॰", "अग॰", "सित॰", "अक्तू॰", "नव॰", "दिस॰"], dart.dynamic);
    },
    get C390() {
      return C390 = dart.constList(["रविवार", "सोमवार", "मंगलवार", "बुधवार", "गुरुवार", "शुक्रवार", "शनिवार"], dart.dynamic);
    },
    get C391() {
      return C391 = dart.constList(["रवि", "सोम", "मंगल", "बुध", "गुरु", "शुक्र", "शनि"], dart.dynamic);
    },
    get C392() {
      return C392 = dart.constList(["र", "सो", "मं", "बु", "गु", "शु", "श"], dart.dynamic);
    },
    get C393() {
      return C393 = dart.constList(["ति1", "ति2", "ति3", "ति4"], dart.dynamic);
    },
    get C394() {
      return C394 = dart.constList(["पहली तिमाही", "दूसरी तिमाही", "तीसरी तिमाही", "चौथी तिमाही"], dart.dynamic);
    },
    get C395() {
      return C395 = dart.constList(["{1} को {0}", "{1} को {0}", "{1}, {0}", "{1}, {0}"], dart.dynamic);
    },
    get C384() {
      return C384 = dart.constMap(core.String, dart.dynamic, ["NAME", "hi", "ERAS", C385 || CT.C385, "ERANAMES", C386 || CT.C386, "NARROWMONTHS", C387 || CT.C387, "STANDALONENARROWMONTHS", C387 || CT.C387, "MONTHS", C388 || CT.C388, "STANDALONEMONTHS", C388 || CT.C388, "SHORTMONTHS", C389 || CT.C389, "STANDALONESHORTMONTHS", C389 || CT.C389, "WEEKDAYS", C390 || CT.C390, "STANDALONEWEEKDAYS", C390 || CT.C390, "SHORTWEEKDAYS", C391 || CT.C391, "STANDALONESHORTWEEKDAYS", C391 || CT.C391, "NARROWWEEKDAYS", C392 || CT.C392, "STANDALONENARROWWEEKDAYS", C392 || CT.C392, "SHORTQUARTERS", C393 || CT.C393, "QUARTERS", C394 || CT.C394, "AMPMS", C219 || CT.C219, "DATEFORMATS", C202 || CT.C202, "TIMEFORMATS", C47 || CT.C47, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C229 || CT.C229, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C395 || CT.C395]);
    },
    get C397() {
      return C397 = dart.constList(["pr. Kr.", "po. Kr."], dart.dynamic);
    },
    get C398() {
      return C398 = dart.constList(["prije Krista", "poslije Krista"], dart.dynamic);
    },
    get C399() {
      return C399 = dart.constList(["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], dart.dynamic);
    },
    get C400() {
      return C400 = dart.constList(["siječnja", "veljače", "ožujka", "travnja", "svibnja", "lipnja", "srpnja", "kolovoza", "rujna", "listopada", "studenoga", "prosinca"], dart.dynamic);
    },
    get C401() {
      return C401 = dart.constList(["siječanj", "veljača", "ožujak", "travanj", "svibanj", "lipanj", "srpanj", "kolovoz", "rujan", "listopad", "studeni", "prosinac"], dart.dynamic);
    },
    get C402() {
      return C402 = dart.constList(["sij", "velj", "ožu", "tra", "svi", "lip", "srp", "kol", "ruj", "lis", "stu", "pro"], dart.dynamic);
    },
    get C403() {
      return C403 = dart.constList(["1kv", "2kv", "3kv", "4kv"], dart.dynamic);
    },
    get C404() {
      return C404 = dart.constList(["EEEE, d. MMMM y.", "d. MMMM y.", "d. MMM y.", "dd. MM. y."], dart.dynamic);
    },
    get C405() {
      return C405 = dart.constList(["HH:mm:ss (zzzz)", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], dart.dynamic);
    },
    get C396() {
      return C396 = dart.constMap(core.String, dart.dynamic, ["NAME", "hr", "ERAS", C397 || CT.C397, "ERANAMES", C398 || CT.C398, "NARROWMONTHS", C399 || CT.C399, "STANDALONENARROWMONTHS", C399 || CT.C399, "MONTHS", C400 || CT.C400, "STANDALONEMONTHS", C401 || CT.C401, "SHORTMONTHS", C402 || CT.C402, "STANDALONESHORTMONTHS", C402 || CT.C402, "WEEKDAYS", C123 || CT.C123, "STANDALONEWEEKDAYS", C123 || CT.C123, "SHORTWEEKDAYS", C124 || CT.C124, "STANDALONESHORTWEEKDAYS", C124 || CT.C124, "NARROWWEEKDAYS", C125 || CT.C125, "STANDALONENARROWWEEKDAYS", C126 || CT.C126, "SHORTQUARTERS", C403 || CT.C403, "QUARTERS", C170 || CT.C170, "AMPMS", C71 || CT.C71, "DATEFORMATS", C404 || CT.C404, "TIMEFORMATS", C405 || CT.C405, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 6, "DATETIMEFORMATS", C131 || CT.C131]);
    },
    get C407() {
      return C407 = dart.constList(["i. e.", "i. sz."], dart.dynamic);
    },
    get C408() {
      return C408 = dart.constList(["Krisztus előtt", "időszámításunk szerint"], dart.dynamic);
    },
    get C409() {
      return C409 = dart.constList(["J", "F", "M", "Á", "M", "J", "J", "A", "Sz", "O", "N", "D"], dart.dynamic);
    },
    get C410() {
      return C410 = dart.constList(["január", "február", "március", "április", "május", "június", "július", "augusztus", "szeptember", "október", "november", "december"], dart.dynamic);
    },
    get C411() {
      return C411 = dart.constList(["jan.", "febr.", "márc.", "ápr.", "máj.", "jún.", "júl.", "aug.", "szept.", "okt.", "nov.", "dec."], dart.dynamic);
    },
    get C412() {
      return C412 = dart.constList(["vasárnap", "hétfő", "kedd", "szerda", "csütörtök", "péntek", "szombat"], dart.dynamic);
    },
    get C413() {
      return C413 = dart.constList(["V", "H", "K", "Sze", "Cs", "P", "Szo"], dart.dynamic);
    },
    get C414() {
      return C414 = dart.constList(["V", "H", "K", "Sz", "Cs", "P", "Sz"], dart.dynamic);
    },
    get C415() {
      return C415 = dart.constList(["I. n.év", "II. n.év", "III. n.év", "IV. n.év"], dart.dynamic);
    },
    get C416() {
      return C416 = dart.constList(["I. negyedév", "II. negyedév", "III. negyedév", "IV. negyedév"], dart.dynamic);
    },
    get C417() {
      return C417 = dart.constList(["de.", "du."], dart.dynamic);
    },
    get C418() {
      return C418 = dart.constList(["y. MMMM d., EEEE", "y. MMMM d.", "y. MMM d.", "y. MM. dd."], dart.dynamic);
    },
    get C406() {
      return C406 = dart.constMap(core.String, dart.dynamic, ["NAME", "hu", "ERAS", C407 || CT.C407, "ERANAMES", C408 || CT.C408, "NARROWMONTHS", C409 || CT.C409, "STANDALONENARROWMONTHS", C409 || CT.C409, "MONTHS", C410 || CT.C410, "STANDALONEMONTHS", C410 || CT.C410, "SHORTMONTHS", C411 || CT.C411, "STANDALONESHORTMONTHS", C411 || CT.C411, "WEEKDAYS", C412 || CT.C412, "STANDALONEWEEKDAYS", C412 || CT.C412, "SHORTWEEKDAYS", C413 || CT.C413, "STANDALONESHORTWEEKDAYS", C413 || CT.C413, "NARROWWEEKDAYS", C414 || CT.C414, "STANDALONENARROWWEEKDAYS", C414 || CT.C414, "SHORTQUARTERS", C415 || CT.C415, "QUARTERS", C416 || CT.C416, "AMPMS", C417 || CT.C417, "DATEFORMATS", C418 || CT.C418, "TIMEFORMATS", C147 || CT.C147, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C420() {
      return C420 = dart.constList(["մ.թ.ա.", "մ.թ."], dart.dynamic);
    },
    get C421() {
      return C421 = dart.constList(["Քրիստոսից առաջ", "Քրիստոսից հետո"], dart.dynamic);
    },
    get C422() {
      return C422 = dart.constList(["Հ", "Փ", "Մ", "Ա", "Մ", "Հ", "Հ", "Օ", "Ս", "Հ", "Ն", "Դ"], dart.dynamic);
    },
    get C423() {
      return C423 = dart.constList(["հունվարի", "փետրվարի", "մարտի", "ապրիլի", "մայիսի", "հունիսի", "հուլիսի", "օգոստոսի", "սեպտեմբերի", "հոկտեմբերի", "նոյեմբերի", "դեկտեմբերի"], dart.dynamic);
    },
    get C424() {
      return C424 = dart.constList(["հունվար", "փետրվար", "մարտ", "ապրիլ", "մայիս", "հունիս", "հուլիս", "օգոստոս", "սեպտեմբեր", "հոկտեմբեր", "նոյեմբեր", "դեկտեմբեր"], dart.dynamic);
    },
    get C425() {
      return C425 = dart.constList(["հնվ", "փտվ", "մրտ", "ապր", "մյս", "հնս", "հլս", "օգս", "սեպ", "հոկ", "նոյ", "դեկ"], dart.dynamic);
    },
    get C426() {
      return C426 = dart.constList(["կիրակի", "երկուշաբթի", "երեքշաբթի", "չորեքշաբթի", "հինգշաբթի", "ուրբաթ", "շաբաթ"], dart.dynamic);
    },
    get C427() {
      return C427 = dart.constList(["կիր", "երկ", "երք", "չրք", "հնգ", "ուր", "շբթ"], dart.dynamic);
    },
    get C428() {
      return C428 = dart.constList(["Կ", "Ե", "Ե", "Չ", "Հ", "Ո", "Շ"], dart.dynamic);
    },
    get C429() {
      return C429 = dart.constList(["1-ին եռմս.", "2-րդ եռմս.", "3-րդ եռմս.", "4-րդ եռմս."], dart.dynamic);
    },
    get C430() {
      return C430 = dart.constList(["1-ին եռամսյակ", "2-րդ եռամսյակ", "3-րդ եռամսյակ", "4-րդ եռամսյակ"], dart.dynamic);
    },
    get C431() {
      return C431 = dart.constList(["ԿԱ", "ԿՀ"], dart.dynamic);
    },
    get C432() {
      return C432 = dart.constList(["y թ. MMMM d, EEEE", "dd MMMM, y թ.", "dd MMM, y թ.", "dd.MM.yy"], dart.dynamic);
    },
    get C419() {
      return C419 = dart.constMap(core.String, dart.dynamic, ["NAME", "hy", "ERAS", C420 || CT.C420, "ERANAMES", C421 || CT.C421, "NARROWMONTHS", C422 || CT.C422, "STANDALONENARROWMONTHS", C422 || CT.C422, "MONTHS", C423 || CT.C423, "STANDALONEMONTHS", C424 || CT.C424, "SHORTMONTHS", C425 || CT.C425, "STANDALONESHORTMONTHS", C425 || CT.C425, "WEEKDAYS", C426 || CT.C426, "STANDALONEWEEKDAYS", C426 || CT.C426, "SHORTWEEKDAYS", C427 || CT.C427, "STANDALONESHORTWEEKDAYS", C427 || CT.C427, "NARROWWEEKDAYS", C428 || CT.C428, "STANDALONENARROWWEEKDAYS", C428 || CT.C428, "SHORTQUARTERS", C429 || CT.C429, "QUARTERS", C430 || CT.C430, "AMPMS", C431 || CT.C431, "DATEFORMATS", C432 || CT.C432, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 6, "DATETIMEFORMATS", C103 || CT.C103]);
    },
    get C434() {
      return C434 = dart.constList(["SM", "M"], dart.dynamic);
    },
    get C435() {
      return C435 = dart.constList(["Sebelum Masehi", "Masehi"], dart.dynamic);
    },
    get C436() {
      return C436 = dart.constList(["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], dart.dynamic);
    },
    get C437() {
      return C437 = dart.constList(["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], dart.dynamic);
    },
    get C438() {
      return C438 = dart.constList(["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], dart.dynamic);
    },
    get C439() {
      return C439 = dart.constList(["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], dart.dynamic);
    },
    get C440() {
      return C440 = dart.constList(["M", "S", "S", "R", "K", "J", "S"], dart.dynamic);
    },
    get C441() {
      return C441 = dart.constList(["Kuartal ke-1", "Kuartal ke-2", "Kuartal ke-3", "Kuartal ke-4"], dart.dynamic);
    },
    get C442() {
      return C442 = dart.constList(["EEEE, dd MMMM y", "d MMMM y", "d MMM y", "dd/MM/yy"], dart.dynamic);
    },
    get C433() {
      return C433 = dart.constMap(core.String, dart.dynamic, ["NAME", "id", "ERAS", C434 || CT.C434, "ERANAMES", C435 || CT.C435, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C436 || CT.C436, "STANDALONEMONTHS", C436 || CT.C436, "SHORTMONTHS", C437 || CT.C437, "STANDALONESHORTMONTHS", C437 || CT.C437, "WEEKDAYS", C438 || CT.C438, "STANDALONEWEEKDAYS", C438 || CT.C438, "SHORTWEEKDAYS", C439 || CT.C439, "STANDALONESHORTWEEKDAYS", C439 || CT.C439, "NARROWWEEKDAYS", C440 || CT.C440, "STANDALONENARROWWEEKDAYS", C440 || CT.C440, "SHORTQUARTERS", C27 || CT.C27, "QUARTERS", C441 || CT.C441, "AMPMS", C71 || CT.C71, "DATEFORMATS", C442 || CT.C442, "TIMEFORMATS", C172 || CT.C172, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C444() {
      return C444 = dart.constList(["fyrir Krist", "eftir Krist"], dart.dynamic);
    },
    get C445() {
      return C445 = dart.constList(["J", "F", "M", "A", "M", "J", "J", "Á", "S", "O", "N", "D"], dart.dynamic);
    },
    get C446() {
      return C446 = dart.constList(["janúar", "febrúar", "mars", "apríl", "maí", "júní", "júlí", "ágúst", "september", "október", "nóvember", "desember"], dart.dynamic);
    },
    get C447() {
      return C447 = dart.constList(["jan.", "feb.", "mar.", "apr.", "maí", "jún.", "júl.", "ágú.", "sep.", "okt.", "nóv.", "des."], dart.dynamic);
    },
    get C448() {
      return C448 = dart.constList(["sunnudagur", "mánudagur", "þriðjudagur", "miðvikudagur", "fimmtudagur", "föstudagur", "laugardagur"], dart.dynamic);
    },
    get C449() {
      return C449 = dart.constList(["sun.", "mán.", "þri.", "mið.", "fim.", "fös.", "lau."], dart.dynamic);
    },
    get C450() {
      return C450 = dart.constList(["S", "M", "Þ", "M", "F", "F", "L"], dart.dynamic);
    },
    get C451() {
      return C451 = dart.constList(["F1", "F2", "F3", "F4"], dart.dynamic);
    },
    get C452() {
      return C452 = dart.constList(["1. fjórðungur", "2. fjórðungur", "3. fjórðungur", "4. fjórðungur"], dart.dynamic);
    },
    get C453() {
      return C453 = dart.constList(["f.h.", "e.h."], dart.dynamic);
    },
    get C454() {
      return C454 = dart.constList(["EEEE, d. MMMM y", "d. MMMM y", "d. MMM y", "d.M.y"], dart.dynamic);
    },
    get C455() {
      return C455 = dart.constList(["{1} 'kl'. {0}", "{1} 'kl'. {0}", "{1}, {0}", "{1}, {0}"], dart.dynamic);
    },
    get C443() {
      return C443 = dart.constMap(core.String, dart.dynamic, ["NAME", "is", "ERAS", C162 || CT.C162, "ERANAMES", C444 || CT.C444, "NARROWMONTHS", C445 || CT.C445, "STANDALONENARROWMONTHS", C445 || CT.C445, "MONTHS", C446 || CT.C446, "STANDALONEMONTHS", C446 || CT.C446, "SHORTMONTHS", C447 || CT.C447, "STANDALONESHORTMONTHS", C447 || CT.C447, "WEEKDAYS", C448 || CT.C448, "STANDALONEWEEKDAYS", C448 || CT.C448, "SHORTWEEKDAYS", C449 || CT.C449, "STANDALONESHORTWEEKDAYS", C449 || CT.C449, "NARROWWEEKDAYS", C450 || CT.C450, "STANDALONENARROWWEEKDAYS", C450 || CT.C450, "SHORTQUARTERS", C451 || CT.C451, "QUARTERS", C452 || CT.C452, "AMPMS", C453 || CT.C453, "DATEFORMATS", C454 || CT.C454, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C455 || CT.C455]);
    },
    get C457() {
      return C457 = dart.constList(["avanti Cristo", "dopo Cristo"], dart.dynamic);
    },
    get C458() {
      return C458 = dart.constList(["G", "F", "M", "A", "M", "G", "L", "A", "S", "O", "N", "D"], dart.dynamic);
    },
    get C459() {
      return C459 = dart.constList(["gennaio", "febbraio", "marzo", "aprile", "maggio", "giugno", "luglio", "agosto", "settembre", "ottobre", "novembre", "dicembre"], dart.dynamic);
    },
    get C460() {
      return C460 = dart.constList(["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"], dart.dynamic);
    },
    get C461() {
      return C461 = dart.constList(["domenica", "lunedì", "martedì", "mercoledì", "giovedì", "venerdì", "sabato"], dart.dynamic);
    },
    get C462() {
      return C462 = dart.constList(["dom", "lun", "mar", "mer", "gio", "ven", "sab"], dart.dynamic);
    },
    get C463() {
      return C463 = dart.constList(["D", "L", "M", "M", "G", "V", "S"], dart.dynamic);
    },
    get C464() {
      return C464 = dart.constList(["1º trimestre", "2º trimestre", "3º trimestre", "4º trimestre"], dart.dynamic);
    },
    get C465() {
      return C465 = dart.constList(["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd/MM/yy"], dart.dynamic);
    },
    get C466() {
      return C466 = dart.constList(["{1} {0}", "{1} {0}", "{1}, {0}", "{1}, {0}"], dart.dynamic);
    },
    get C456() {
      return C456 = dart.constMap(core.String, dart.dynamic, ["NAME", "it", "ERAS", C339 || CT.C339, "ERANAMES", C457 || CT.C457, "NARROWMONTHS", C458 || CT.C458, "STANDALONENARROWMONTHS", C458 || CT.C458, "MONTHS", C459 || CT.C459, "STANDALONEMONTHS", C459 || CT.C459, "SHORTMONTHS", C460 || CT.C460, "STANDALONESHORTMONTHS", C460 || CT.C460, "WEEKDAYS", C461 || CT.C461, "STANDALONEWEEKDAYS", C461 || CT.C461, "SHORTWEEKDAYS", C462 || CT.C462, "STANDALONESHORTWEEKDAYS", C462 || CT.C462, "NARROWWEEKDAYS", C463 || CT.C463, "STANDALONENARROWWEEKDAYS", C463 || CT.C463, "SHORTQUARTERS", C242 || CT.C242, "QUARTERS", C464 || CT.C464, "AMPMS", C71 || CT.C71, "DATEFORMATS", C465 || CT.C465, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C466 || CT.C466]);
    },
    get C468() {
      return C468 = dart.constList(["紀元前", "西暦"], dart.dynamic);
    },
    get C469() {
      return C469 = dart.constList(["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], dart.dynamic);
    },
    get C470() {
      return C470 = dart.constList(["日曜日", "月曜日", "火曜日", "水曜日", "木曜日", "金曜日", "土曜日"], dart.dynamic);
    },
    get C471() {
      return C471 = dart.constList(["日", "月", "火", "水", "木", "金", "土"], dart.dynamic);
    },
    get C472() {
      return C472 = dart.constList(["第1四半期", "第2四半期", "第3四半期", "第4四半期"], dart.dynamic);
    },
    get C473() {
      return C473 = dart.constList(["午前", "午後"], dart.dynamic);
    },
    get C474() {
      return C474 = dart.constList(["y年M月d日EEEE", "y年M月d日", "y/MM/dd", "y/MM/dd"], dart.dynamic);
    },
    get C475() {
      return C475 = dart.constList(["H時mm分ss秒 zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], dart.dynamic);
    },
    get C467() {
      return C467 = dart.constMap(core.String, dart.dynamic, ["NAME", "ja", "ERAS", C468 || CT.C468, "ERANAMES", C468 || CT.C468, "NARROWMONTHS", C62 || CT.C62, "STANDALONENARROWMONTHS", C62 || CT.C62, "MONTHS", C469 || CT.C469, "STANDALONEMONTHS", C469 || CT.C469, "SHORTMONTHS", C469 || CT.C469, "STANDALONESHORTMONTHS", C469 || CT.C469, "WEEKDAYS", C470 || CT.C470, "STANDALONEWEEKDAYS", C470 || CT.C470, "SHORTWEEKDAYS", C471 || CT.C471, "STANDALONESHORTWEEKDAYS", C471 || CT.C471, "NARROWWEEKDAYS", C471 || CT.C471, "STANDALONENARROWWEEKDAYS", C471 || CT.C471, "SHORTQUARTERS", C114 || CT.C114, "QUARTERS", C472 || CT.C472, "AMPMS", C473 || CT.C473, "DATEFORMATS", C474 || CT.C474, "TIMEFORMATS", C475 || CT.C475, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C477() {
      return C477 = dart.constList(["ძვ. წ.", "ახ. წ."], dart.dynamic);
    },
    get C478() {
      return C478 = dart.constList(["ძველი წელთაღრიცხვით", "ახალი წელთაღრიცხვით"], dart.dynamic);
    },
    get C479() {
      return C479 = dart.constList(["ი", "თ", "მ", "ა", "მ", "ი", "ი", "ა", "ს", "ო", "ნ", "დ"], dart.dynamic);
    },
    get C480() {
      return C480 = dart.constList(["იანვარი", "თებერვალი", "მარტი", "აპრილი", "მაისი", "ივნისი", "ივლისი", "აგვისტო", "სექტემბერი", "ოქტომბერი", "ნოემბერი", "დეკემბერი"], dart.dynamic);
    },
    get C481() {
      return C481 = dart.constList(["იან", "თებ", "მარ", "აპრ", "მაი", "ივნ", "ივლ", "აგვ", "სექ", "ოქტ", "ნოე", "დეკ"], dart.dynamic);
    },
    get C482() {
      return C482 = dart.constList(["კვირა", "ორშაბათი", "სამშაბათი", "ოთხშაბათი", "ხუთშაბათი", "პარასკევი", "შაბათი"], dart.dynamic);
    },
    get C483() {
      return C483 = dart.constList(["კვი", "ორშ", "სამ", "ოთხ", "ხუთ", "პარ", "შაბ"], dart.dynamic);
    },
    get C484() {
      return C484 = dart.constList(["კ", "ო", "ს", "ო", "ხ", "პ", "შ"], dart.dynamic);
    },
    get C485() {
      return C485 = dart.constList(["I კვ.", "II კვ.", "III კვ.", "IV კვ."], dart.dynamic);
    },
    get C486() {
      return C486 = dart.constList(["I კვარტალი", "II კვარტალი", "III კვარტალი", "IV კვარტალი"], dart.dynamic);
    },
    get C487() {
      return C487 = dart.constList(["EEEE, dd MMMM, y", "d MMMM, y", "d MMM. y", "dd.MM.yy"], dart.dynamic);
    },
    get C476() {
      return C476 = dart.constMap(core.String, dart.dynamic, ["NAME", "ka", "ERAS", C477 || CT.C477, "ERANAMES", C478 || CT.C478, "NARROWMONTHS", C479 || CT.C479, "STANDALONENARROWMONTHS", C479 || CT.C479, "MONTHS", C480 || CT.C480, "STANDALONEMONTHS", C480 || CT.C480, "SHORTMONTHS", C481 || CT.C481, "STANDALONESHORTMONTHS", C481 || CT.C481, "WEEKDAYS", C482 || CT.C482, "STANDALONEWEEKDAYS", C482 || CT.C482, "SHORTWEEKDAYS", C483 || CT.C483, "STANDALONESHORTWEEKDAYS", C483 || CT.C483, "NARROWWEEKDAYS", C484 || CT.C484, "STANDALONENARROWWEEKDAYS", C484 || CT.C484, "SHORTQUARTERS", C485 || CT.C485, "QUARTERS", C486 || CT.C486, "AMPMS", C71 || CT.C71, "DATEFORMATS", C487 || CT.C487, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 6, "DATETIMEFORMATS", C103 || CT.C103]);
    },
    get C489() {
      return C489 = dart.constList(["б.з.д.", "б.з."], dart.dynamic);
    },
    get C490() {
      return C490 = dart.constList(["Біздің заманымызға дейін", "біздің заманымыз"], dart.dynamic);
    },
    get C491() {
      return C491 = dart.constList(["Қ", "А", "Н", "С", "М", "М", "Ш", "Т", "Қ", "Қ", "Қ", "Ж"], dart.dynamic);
    },
    get C492() {
      return C492 = dart.constList(["қаңтар", "ақпан", "наурыз", "сәуір", "мамыр", "маусым", "шілде", "тамыз", "қыркүйек", "қазан", "қараша", "желтоқсан"], dart.dynamic);
    },
    get C493() {
      return C493 = dart.constList(["Қаңтар", "Ақпан", "Наурыз", "Сәуір", "Мамыр", "Маусым", "Шілде", "Тамыз", "Қыркүйек", "Қазан", "Қараша", "Желтоқсан"], dart.dynamic);
    },
    get C494() {
      return C494 = dart.constList(["қаң.", "ақп.", "нау.", "сәу.", "мам.", "мау.", "шіл.", "там.", "қыр.", "қаз.", "қар.", "жел."], dart.dynamic);
    },
    get C495() {
      return C495 = dart.constList(["Қаң.", "Ақп.", "Нау.", "Сәу.", "Мам.", "Мау.", "Шіл.", "Там.", "Қыр.", "Қаз.", "Қар.", "Жел."], dart.dynamic);
    },
    get C496() {
      return C496 = dart.constList(["жексенбі", "дүйсенбі", "сейсенбі", "сәрсенбі", "бейсенбі", "жұма", "сенбі"], dart.dynamic);
    },
    get C497() {
      return C497 = dart.constList(["Жексенбі", "Дүйсенбі", "Сейсенбі", "Сәрсенбі", "Бейсенбі", "Жұма", "Сенбі"], dart.dynamic);
    },
    get C498() {
      return C498 = dart.constList(["Жс", "Дс", "Сс", "Ср", "Бс", "Жм", "Сб"], dart.dynamic);
    },
    get C499() {
      return C499 = dart.constList(["Ж", "Д", "С", "С", "Б", "Ж", "С"], dart.dynamic);
    },
    get C500() {
      return C500 = dart.constList(["І тқс.", "ІІ тқс.", "ІІІ тқс.", "IV тқс."], dart.dynamic);
    },
    get C501() {
      return C501 = dart.constList(["І тоқсан", "ІІ тоқсан", "ІІІ тоқсан", "IV тоқсан"], dart.dynamic);
    },
    get C502() {
      return C502 = dart.constList(["y 'ж'. d MMMM, EEEE", "y 'ж'. d MMMM", "y 'ж'. dd MMM", "dd.MM.yy"], dart.dynamic);
    },
    get C488() {
      return C488 = dart.constMap(core.String, dart.dynamic, ["NAME", "kk", "ERAS", C489 || CT.C489, "ERANAMES", C490 || CT.C490, "NARROWMONTHS", C491 || CT.C491, "STANDALONENARROWMONTHS", C491 || CT.C491, "MONTHS", C492 || CT.C492, "STANDALONEMONTHS", C493 || CT.C493, "SHORTMONTHS", C494 || CT.C494, "STANDALONESHORTMONTHS", C495 || CT.C495, "WEEKDAYS", C496 || CT.C496, "STANDALONEWEEKDAYS", C497 || CT.C497, "SHORTWEEKDAYS", C498 || CT.C498, "STANDALONESHORTWEEKDAYS", C498 || CT.C498, "NARROWWEEKDAYS", C499 || CT.C499, "STANDALONENARROWWEEKDAYS", C499 || CT.C499, "SHORTQUARTERS", C500 || CT.C500, "QUARTERS", C501 || CT.C501, "AMPMS", C71 || CT.C71, "DATEFORMATS", C502 || CT.C502, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 6, "DATETIMEFORMATS", C103 || CT.C103]);
    },
    get C504() {
      return C504 = dart.constList(["មុន គ.ស.", "គ.ស."], dart.dynamic);
    },
    get C505() {
      return C505 = dart.constList(["មុន​គ្រិស្តសករាជ", "គ្រិស្តសករាជ"], dart.dynamic);
    },
    get C506() {
      return C506 = dart.constList(["ម", "ក", "ម", "ម", "ឧ", "ម", "ក", "ស", "ក", "ត", "វ", "ធ"], dart.dynamic);
    },
    get C507() {
      return C507 = dart.constList(["មករា", "កុម្ភៈ", "មីនា", "មេសា", "ឧសភា", "មិថុនា", "កក្កដា", "សីហា", "កញ្ញា", "តុលា", "វិច្ឆិកា", "ធ្នូ"], dart.dynamic);
    },
    get C508() {
      return C508 = dart.constList(["អាទិត្យ", "ច័ន្ទ", "អង្គារ", "ពុធ", "ព្រហស្បតិ៍", "សុក្រ", "សៅរ៍"], dart.dynamic);
    },
    get C509() {
      return C509 = dart.constList(["អ", "ច", "អ", "ព", "ព", "ស", "ស"], dart.dynamic);
    },
    get C510() {
      return C510 = dart.constList(["ត្រីមាសទី 1", "ត្រីមាសទី 2", "ត្រីមាសទី 3", "ត្រីមាសទី 4"], dart.dynamic);
    },
    get C511() {
      return C511 = dart.constList(["EEEE d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], dart.dynamic);
    },
    get C512() {
      return C512 = dart.constList(["{1} នៅ​ម៉ោង {0}", "{1} នៅ​ម៉ោង {0}", "{1}, {0}", "{1}, {0}"], dart.dynamic);
    },
    get C503() {
      return C503 = dart.constMap(core.String, dart.dynamic, ["NAME", "km", "ERAS", C504 || CT.C504, "ERANAMES", C505 || CT.C505, "NARROWMONTHS", C506 || CT.C506, "STANDALONENARROWMONTHS", C506 || CT.C506, "MONTHS", C507 || CT.C507, "STANDALONEMONTHS", C507 || CT.C507, "SHORTMONTHS", C507 || CT.C507, "STANDALONESHORTMONTHS", C507 || CT.C507, "WEEKDAYS", C508 || CT.C508, "STANDALONEWEEKDAYS", C508 || CT.C508, "SHORTWEEKDAYS", C508 || CT.C508, "STANDALONESHORTWEEKDAYS", C508 || CT.C508, "NARROWWEEKDAYS", C509 || CT.C509, "STANDALONENARROWWEEKDAYS", C509 || CT.C509, "SHORTQUARTERS", C510 || CT.C510, "QUARTERS", C510 || CT.C510, "AMPMS", C71 || CT.C71, "DATEFORMATS", C511 || CT.C511, "TIMEFORMATS", C47 || CT.C47, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C512 || CT.C512]);
    },
    get C514() {
      return C514 = dart.constList(["ಕ್ರಿ.ಪೂ", "ಕ್ರಿ.ಶ"], dart.dynamic);
    },
    get C515() {
      return C515 = dart.constList(["ಕ್ರಿಸ್ತ ಪೂರ್ವ", "ಕ್ರಿಸ್ತ ಶಕ"], dart.dynamic);
    },
    get C516() {
      return C516 = dart.constList(["ಜ", "ಫೆ", "ಮಾ", "ಏ", "ಮೇ", "ಜೂ", "ಜು", "ಆ", "ಸೆ", "ಅ", "ನ", "ಡಿ"], dart.dynamic);
    },
    get C517() {
      return C517 = dart.constList(["ಜನವರಿ", "ಫೆಬ್ರವರಿ", "ಮಾರ್ಚ್", "ಏಪ್ರಿಲ್", "ಮೇ", "ಜೂನ್", "ಜುಲೈ", "ಆಗಸ್ಟ್", "ಸೆಪ್ಟೆಂಬರ್", "ಅಕ್ಟೋಬರ್", "ನವೆಂಬರ್", "ಡಿಸೆಂಬರ್"], dart.dynamic);
    },
    get C518() {
      return C518 = dart.constList(["ಜನವರಿ", "ಫೆಬ್ರವರಿ", "ಮಾರ್ಚ್", "ಏಪ್ರಿ", "ಮೇ", "ಜೂನ್", "ಜುಲೈ", "ಆಗ", "ಸೆಪ್ಟೆಂ", "ಅಕ್ಟೋ", "ನವೆಂ", "ಡಿಸೆಂ"], dart.dynamic);
    },
    get C519() {
      return C519 = dart.constList(["ಜನ", "ಫೆಬ್ರ", "ಮಾರ್ಚ್", "ಏಪ್ರಿ", "ಮೇ", "ಜೂನ್", "ಜುಲೈ", "ಆಗ", "ಸೆಪ್ಟೆಂ", "ಅಕ್ಟೋ", "ನವೆಂ", "ಡಿಸೆಂ"], dart.dynamic);
    },
    get C520() {
      return C520 = dart.constList(["ಭಾನುವಾರ", "ಸೋಮವಾರ", "ಮಂಗಳವಾರ", "ಬುಧವಾರ", "ಗುರುವಾರ", "ಶುಕ್ರವಾರ", "ಶನಿವಾರ"], dart.dynamic);
    },
    get C521() {
      return C521 = dart.constList(["ಭಾನು", "ಸೋಮ", "ಮಂಗಳ", "ಬುಧ", "ಗುರು", "ಶುಕ್ರ", "ಶನಿ"], dart.dynamic);
    },
    get C522() {
      return C522 = dart.constList(["ಭಾ", "ಸೋ", "ಮಂ", "ಬು", "ಗು", "ಶು", "ಶ"], dart.dynamic);
    },
    get C523() {
      return C523 = dart.constList(["ತ್ರೈ 1", "ತ್ರೈ 2", "ತ್ರೈ 3", "ತ್ರೈ 4"], dart.dynamic);
    },
    get C524() {
      return C524 = dart.constList(["1ನೇ ತ್ರೈಮಾಸಿಕ", "2ನೇ ತ್ರೈಮಾಸಿಕ", "3ನೇ ತ್ರೈಮಾಸಿಕ", "4ನೇ ತ್ರೈಮಾಸಿಕ"], dart.dynamic);
    },
    get C525() {
      return C525 = dart.constList(["ಪೂರ್ವಾಹ್ನ", "ಅಪರಾಹ್ನ"], dart.dynamic);
    },
    get C526() {
      return C526 = dart.constList(["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "d/M/yy"], dart.dynamic);
    },
    get C513() {
      return C513 = dart.constMap(core.String, dart.dynamic, ["NAME", "kn", "ERAS", C514 || CT.C514, "ERANAMES", C515 || CT.C515, "NARROWMONTHS", C516 || CT.C516, "STANDALONENARROWMONTHS", C516 || CT.C516, "MONTHS", C517 || CT.C517, "STANDALONEMONTHS", C517 || CT.C517, "SHORTMONTHS", C518 || CT.C518, "STANDALONESHORTMONTHS", C519 || CT.C519, "WEEKDAYS", C520 || CT.C520, "STANDALONEWEEKDAYS", C520 || CT.C520, "SHORTWEEKDAYS", C521 || CT.C521, "STANDALONESHORTWEEKDAYS", C521 || CT.C521, "NARROWWEEKDAYS", C522 || CT.C522, "STANDALONENARROWWEEKDAYS", C522 || CT.C522, "SHORTQUARTERS", C523 || CT.C523, "QUARTERS", C524 || CT.C524, "AMPMS", C525 || CT.C525, "DATEFORMATS", C526 || CT.C526, "TIMEFORMATS", C370 || CT.C370, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C229 || CT.C229, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C528() {
      return C528 = dart.constList(["기원전", "서기"], dart.dynamic);
    },
    get C529() {
      return C529 = dart.constList(["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"], dart.dynamic);
    },
    get C530() {
      return C530 = dart.constList(["일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일"], dart.dynamic);
    },
    get C531() {
      return C531 = dart.constList(["일", "월", "화", "수", "목", "금", "토"], dart.dynamic);
    },
    get C532() {
      return C532 = dart.constList(["1분기", "2분기", "3분기", "4분기"], dart.dynamic);
    },
    get C533() {
      return C533 = dart.constList(["제 1/4분기", "제 2/4분기", "제 3/4분기", "제 4/4분기"], dart.dynamic);
    },
    get C534() {
      return C534 = dart.constList(["오전", "오후"], dart.dynamic);
    },
    get C535() {
      return C535 = dart.constList(["y년 M월 d일 EEEE", "y년 M월 d일", "y. M. d.", "yy. M. d."], dart.dynamic);
    },
    get C536() {
      return C536 = dart.constList(["a h시 m분 s초 zzzz", "a h시 m분 s초 z", "a h:mm:ss", "a h:mm"], dart.dynamic);
    },
    get C527() {
      return C527 = dart.constMap(core.String, dart.dynamic, ["NAME", "ko", "ERAS", C205 || CT.C205, "ERANAMES", C528 || CT.C528, "NARROWMONTHS", C529 || CT.C529, "STANDALONENARROWMONTHS", C529 || CT.C529, "MONTHS", C529 || CT.C529, "STANDALONEMONTHS", C529 || CT.C529, "SHORTMONTHS", C529 || CT.C529, "STANDALONESHORTMONTHS", C529 || CT.C529, "WEEKDAYS", C530 || CT.C530, "STANDALONEWEEKDAYS", C530 || CT.C530, "SHORTWEEKDAYS", C531 || CT.C531, "STANDALONESHORTWEEKDAYS", C531 || CT.C531, "NARROWWEEKDAYS", C531 || CT.C531, "STANDALONENARROWWEEKDAYS", C531 || CT.C531, "SHORTQUARTERS", C532 || CT.C532, "QUARTERS", C533 || CT.C533, "AMPMS", C534 || CT.C534, "DATEFORMATS", C535 || CT.C535, "TIMEFORMATS", C536 || CT.C536, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C538() {
      return C538 = dart.constList(["б.з.ч.", "б.з."], dart.dynamic);
    },
    get C539() {
      return C539 = dart.constList(["биздин заманга чейин", "биздин заман"], dart.dynamic);
    },
    get C540() {
      return C540 = dart.constList(["Я", "Ф", "М", "А", "М", "И", "И", "А", "С", "О", "Н", "Д"], dart.dynamic);
    },
    get C541() {
      return C541 = dart.constList(["январь", "февраль", "март", "апрель", "май", "июнь", "июль", "август", "сентябрь", "октябрь", "ноябрь", "декабрь"], dart.dynamic);
    },
    get C542() {
      return C542 = dart.constList(["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"], dart.dynamic);
    },
    get C543() {
      return C543 = dart.constList(["янв.", "фев.", "мар.", "апр.", "май", "июн.", "июл.", "авг.", "сен.", "окт.", "ноя.", "дек."], dart.dynamic);
    },
    get C544() {
      return C544 = dart.constList(["Янв", "Фев", "Мар", "Апр", "Май", "Июн", "Июл", "Авг", "Сен", "Окт", "Ноя", "Дек"], dart.dynamic);
    },
    get C545() {
      return C545 = dart.constList(["жекшемби", "дүйшөмбү", "шейшемби", "шаршемби", "бейшемби", "жума", "ишемби"], dart.dynamic);
    },
    get C546() {
      return C546 = dart.constList(["жек.", "дүй.", "шейш.", "шарш.", "бейш.", "жума", "ишм."], dart.dynamic);
    },
    get C547() {
      return C547 = dart.constList(["Ж", "Д", "Ш", "Ш", "Б", "Ж", "И"], dart.dynamic);
    },
    get C548() {
      return C548 = dart.constList(["1-чей.", "2-чей.", "3-чей.", "4-чей."], dart.dynamic);
    },
    get C549() {
      return C549 = dart.constList(["1-чейрек", "2-чейрек", "3-чейрек", "4-чейрек"], dart.dynamic);
    },
    get C550() {
      return C550 = dart.constList(["таңкы", "түштөн кийинки"], dart.dynamic);
    },
    get C551() {
      return C551 = dart.constList(["y-'ж'., d-MMMM, EEEE", "y-'ж'., d-MMMM", "y-'ж'., d-MMM", "d/M/yy"], dart.dynamic);
    },
    get C537() {
      return C537 = dart.constMap(core.String, dart.dynamic, ["NAME", "ky", "ERAS", C538 || CT.C538, "ERANAMES", C539 || CT.C539, "NARROWMONTHS", C540 || CT.C540, "STANDALONENARROWMONTHS", C540 || CT.C540, "MONTHS", C541 || CT.C541, "STANDALONEMONTHS", C542 || CT.C542, "SHORTMONTHS", C543 || CT.C543, "STANDALONESHORTMONTHS", C544 || CT.C544, "WEEKDAYS", C545 || CT.C545, "STANDALONEWEEKDAYS", C545 || CT.C545, "SHORTWEEKDAYS", C546 || CT.C546, "STANDALONESHORTWEEKDAYS", C546 || CT.C546, "NARROWWEEKDAYS", C547 || CT.C547, "STANDALONENARROWWEEKDAYS", C547 || CT.C547, "SHORTQUARTERS", C548 || CT.C548, "QUARTERS", C549 || CT.C549, "AMPMS", C550 || CT.C550, "DATEFORMATS", C551 || CT.C551, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 6, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C553() {
      return C553 = dart.constList(["ກ່ອນ ຄ.ສ.", "ຄ.ສ."], dart.dynamic);
    },
    get C554() {
      return C554 = dart.constList(["ກ່ອນຄຣິດສັກກະລາດ", "ຄຣິດສັກກະລາດ"], dart.dynamic);
    },
    get C555() {
      return C555 = dart.constList(["ມັງກອນ", "ກຸມພາ", "ມີນາ", "ເມສາ", "ພຶດສະພາ", "ມິຖຸນາ", "ກໍລະກົດ", "ສິງຫາ", "ກັນຍາ", "ຕຸລາ", "ພະຈິກ", "ທັນວາ"], dart.dynamic);
    },
    get C556() {
      return C556 = dart.constList(["ມ.ກ.", "ກ.ພ.", "ມ.ນ.", "ມ.ສ.", "ພ.ພ.", "ມິ.ຖ.", "ກ.ລ.", "ສ.ຫ.", "ກ.ຍ.", "ຕ.ລ.", "ພ.ຈ.", "ທ.ວ."], dart.dynamic);
    },
    get C557() {
      return C557 = dart.constList(["ວັນອາທິດ", "ວັນຈັນ", "ວັນອັງຄານ", "ວັນພຸດ", "ວັນພະຫັດ", "ວັນສຸກ", "ວັນເສົາ"], dart.dynamic);
    },
    get C558() {
      return C558 = dart.constList(["ອາທິດ", "ຈັນ", "ອັງຄານ", "ພຸດ", "ພະຫັດ", "ສຸກ", "ເສົາ"], dart.dynamic);
    },
    get C559() {
      return C559 = dart.constList(["ອາ", "ຈ", "ອ", "ພ", "ພຫ", "ສຸ", "ສ"], dart.dynamic);
    },
    get C560() {
      return C560 = dart.constList(["ຕມ1", "ຕມ2", "ຕມ3", "ຕມ4"], dart.dynamic);
    },
    get C561() {
      return C561 = dart.constList(["ໄຕຣມາດ 1", "ໄຕຣມາດ 2", "ໄຕຣມາດ 3", "ໄຕຣມາດ 4"], dart.dynamic);
    },
    get C562() {
      return C562 = dart.constList(["ກ່ອນທ່ຽງ", "ຫຼັງທ່ຽງ"], dart.dynamic);
    },
    get C563() {
      return C563 = dart.constList(["EEEE ທີ d MMMM G y", "d MMMM y", "d MMM y", "d/M/y"], dart.dynamic);
    },
    get C564() {
      return C564 = dart.constList(["H ໂມງ m ນາທີ ss ວິນາທີ zzzz", "H ໂມງ m ນາທີ ss ວິນາທີ z", "H:mm:ss", "H:mm"], dart.dynamic);
    },
    get C552() {
      return C552 = dart.constMap(core.String, dart.dynamic, ["NAME", "lo", "ERAS", C553 || CT.C553, "ERANAMES", C554 || CT.C554, "NARROWMONTHS", C62 || CT.C62, "STANDALONENARROWMONTHS", C62 || CT.C62, "MONTHS", C555 || CT.C555, "STANDALONEMONTHS", C555 || CT.C555, "SHORTMONTHS", C556 || CT.C556, "STANDALONESHORTMONTHS", C556 || CT.C556, "WEEKDAYS", C557 || CT.C557, "STANDALONEWEEKDAYS", C557 || CT.C557, "SHORTWEEKDAYS", C558 || CT.C558, "STANDALONESHORTWEEKDAYS", C558 || CT.C558, "NARROWWEEKDAYS", C559 || CT.C559, "STANDALONENARROWWEEKDAYS", C559 || CT.C559, "SHORTQUARTERS", C560 || CT.C560, "QUARTERS", C561 || CT.C561, "AMPMS", C562 || CT.C562, "DATEFORMATS", C563 || CT.C563, "TIMEFORMATS", C564 || CT.C564, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C103 || CT.C103]);
    },
    get C566() {
      return C566 = dart.constList(["pr. Kr.", "po Kr."], dart.dynamic);
    },
    get C567() {
      return C567 = dart.constList(["prieš Kristų", "po Kristaus"], dart.dynamic);
    },
    get C568() {
      return C568 = dart.constList(["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"], dart.dynamic);
    },
    get C569() {
      return C569 = dart.constList(["sausio", "vasario", "kovo", "balandžio", "gegužės", "birželio", "liepos", "rugpjūčio", "rugsėjo", "spalio", "lapkričio", "gruodžio"], dart.dynamic);
    },
    get C570() {
      return C570 = dart.constList(["sausis", "vasaris", "kovas", "balandis", "gegužė", "birželis", "liepa", "rugpjūtis", "rugsėjis", "spalis", "lapkritis", "gruodis"], dart.dynamic);
    },
    get C571() {
      return C571 = dart.constList(["saus.", "vas.", "kov.", "bal.", "geg.", "birž.", "liep.", "rugp.", "rugs.", "spal.", "lapkr.", "gruod."], dart.dynamic);
    },
    get C572() {
      return C572 = dart.constList(["sekmadienis", "pirmadienis", "antradienis", "trečiadienis", "ketvirtadienis", "penktadienis", "šeštadienis"], dart.dynamic);
    },
    get C573() {
      return C573 = dart.constList(["sk", "pr", "an", "tr", "kt", "pn", "št"], dart.dynamic);
    },
    get C574() {
      return C574 = dart.constList(["S", "P", "A", "T", "K", "P", "Š"], dart.dynamic);
    },
    get C575() {
      return C575 = dart.constList(["I k.", "II k.", "III k.", "IV k."], dart.dynamic);
    },
    get C576() {
      return C576 = dart.constList(["I ketvirtis", "II ketvirtis", "III ketvirtis", "IV ketvirtis"], dart.dynamic);
    },
    get C577() {
      return C577 = dart.constList(["priešpiet", "popiet"], dart.dynamic);
    },
    get C578() {
      return C578 = dart.constList(["y 'm'. MMMM d 'd'., EEEE", "y 'm'. MMMM d 'd'.", "y-MM-dd", "y-MM-dd"], dart.dynamic);
    },
    get C565() {
      return C565 = dart.constMap(core.String, dart.dynamic, ["NAME", "lt", "ERAS", C566 || CT.C566, "ERANAMES", C567 || CT.C567, "NARROWMONTHS", C568 || CT.C568, "STANDALONENARROWMONTHS", C568 || CT.C568, "MONTHS", C569 || CT.C569, "STANDALONEMONTHS", C570 || CT.C570, "SHORTMONTHS", C571 || CT.C571, "STANDALONESHORTMONTHS", C571 || CT.C571, "WEEKDAYS", C572 || CT.C572, "STANDALONEWEEKDAYS", C572 || CT.C572, "SHORTWEEKDAYS", C573 || CT.C573, "STANDALONESHORTWEEKDAYS", C573 || CT.C573, "NARROWWEEKDAYS", C574 || CT.C574, "STANDALONENARROWWEEKDAYS", C574 || CT.C574, "SHORTQUARTERS", C575 || CT.C575, "QUARTERS", C576 || CT.C576, "AMPMS", C577 || CT.C577, "DATEFORMATS", C578 || CT.C578, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C580() {
      return C580 = dart.constList(["p.m.ē.", "m.ē."], dart.dynamic);
    },
    get C581() {
      return C581 = dart.constList(["pirms mūsu ēras", "mūsu ērā"], dart.dynamic);
    },
    get C582() {
      return C582 = dart.constList(["janvāris", "februāris", "marts", "aprīlis", "maijs", "jūnijs", "jūlijs", "augusts", "septembris", "oktobris", "novembris", "decembris"], dart.dynamic);
    },
    get C583() {
      return C583 = dart.constList(["janv.", "febr.", "marts", "apr.", "maijs", "jūn.", "jūl.", "aug.", "sept.", "okt.", "nov.", "dec."], dart.dynamic);
    },
    get C584() {
      return C584 = dart.constList(["svētdiena", "pirmdiena", "otrdiena", "trešdiena", "ceturtdiena", "piektdiena", "sestdiena"], dart.dynamic);
    },
    get C585() {
      return C585 = dart.constList(["Svētdiena", "Pirmdiena", "Otrdiena", "Trešdiena", "Ceturtdiena", "Piektdiena", "Sestdiena"], dart.dynamic);
    },
    get C586() {
      return C586 = dart.constList(["svētd.", "pirmd.", "otrd.", "trešd.", "ceturtd.", "piektd.", "sestd."], dart.dynamic);
    },
    get C587() {
      return C587 = dart.constList(["Svētd.", "Pirmd.", "Otrd.", "Trešd.", "Ceturtd.", "Piektd.", "Sestd."], dart.dynamic);
    },
    get C588() {
      return C588 = dart.constList(["S", "P", "O", "T", "C", "P", "S"], dart.dynamic);
    },
    get C589() {
      return C589 = dart.constList(["1. cet.", "2. cet.", "3. cet.", "4. cet."], dart.dynamic);
    },
    get C590() {
      return C590 = dart.constList(["1. ceturksnis", "2. ceturksnis", "3. ceturksnis", "4. ceturksnis"], dart.dynamic);
    },
    get C591() {
      return C591 = dart.constList(["priekšpusdienā", "pēcpusdienā"], dart.dynamic);
    },
    get C592() {
      return C592 = dart.constList(["EEEE, y. 'gada' d. MMMM", "y. 'gada' d. MMMM", "y. 'gada' d. MMM", "dd.MM.yy"], dart.dynamic);
    },
    get C579() {
      return C579 = dart.constMap(core.String, dart.dynamic, ["NAME", "lv", "ERAS", C580 || CT.C580, "ERANAMES", C581 || CT.C581, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C582 || CT.C582, "STANDALONEMONTHS", C582 || CT.C582, "SHORTMONTHS", C583 || CT.C583, "STANDALONESHORTMONTHS", C583 || CT.C583, "WEEKDAYS", C584 || CT.C584, "STANDALONEWEEKDAYS", C585 || CT.C585, "SHORTWEEKDAYS", C586 || CT.C586, "STANDALONESHORTWEEKDAYS", C587 || CT.C587, "NARROWWEEKDAYS", C588 || CT.C588, "STANDALONENARROWWEEKDAYS", C588 || CT.C588, "SHORTQUARTERS", C589 || CT.C589, "QUARTERS", C590 || CT.C590, "AMPMS", C591 || CT.C591, "DATEFORMATS", C592 || CT.C592, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 6, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C594() {
      return C594 = dart.constList(["пр.н.е.", "н.е."], dart.dynamic);
    },
    get C595() {
      return C595 = dart.constList(["пред нашата ера", "од нашата ера"], dart.dynamic);
    },
    get C596() {
      return C596 = dart.constList(["ј", "ф", "м", "а", "м", "ј", "ј", "а", "с", "о", "н", "д"], dart.dynamic);
    },
    get C597() {
      return C597 = dart.constList(["јануари", "февруари", "март", "април", "мај", "јуни", "јули", "август", "септември", "октомври", "ноември", "декември"], dart.dynamic);
    },
    get C598() {
      return C598 = dart.constList(["јан.", "фев.", "мар.", "апр.", "мај", "јун.", "јул.", "авг.", "септ.", "окт.", "ноем.", "дек."], dart.dynamic);
    },
    get C599() {
      return C599 = dart.constList(["недела", "понеделник", "вторник", "среда", "четврток", "петок", "сабота"], dart.dynamic);
    },
    get C600() {
      return C600 = dart.constList(["нед.", "пон.", "вт.", "сре.", "чет.", "пет.", "саб."], dart.dynamic);
    },
    get C601() {
      return C601 = dart.constList(["нед.", "пон.", "вто.", "сре.", "чет.", "пет.", "саб."], dart.dynamic);
    },
    get C602() {
      return C602 = dart.constList(["јан-мар", "апр-јун", "јул-сеп", "окт-дек"], dart.dynamic);
    },
    get C603() {
      return C603 = dart.constList(["прво тромесечје", "второ тромесечје", "трето тромесечје", "четврто тромесечје"], dart.dynamic);
    },
    get C604() {
      return C604 = dart.constList(["претпладне", "попладне"], dart.dynamic);
    },
    get C605() {
      return C605 = dart.constList(["EEEE, dd MMMM y", "dd MMMM y", "dd.M.y", "dd.M.yy"], dart.dynamic);
    },
    get C593() {
      return C593 = dart.constMap(core.String, dart.dynamic, ["NAME", "mk", "ERAS", C594 || CT.C594, "ERANAMES", C595 || CT.C595, "NARROWMONTHS", C596 || CT.C596, "STANDALONENARROWMONTHS", C596 || CT.C596, "MONTHS", C597 || CT.C597, "STANDALONEMONTHS", C597 || CT.C597, "SHORTMONTHS", C598 || CT.C598, "STANDALONESHORTMONTHS", C598 || CT.C598, "WEEKDAYS", C599 || CT.C599, "STANDALONEWEEKDAYS", C599 || CT.C599, "SHORTWEEKDAYS", C600 || CT.C600, "STANDALONESHORTWEEKDAYS", C601 || CT.C601, "NARROWWEEKDAYS", C97 || CT.C97, "STANDALONENARROWWEEKDAYS", C97 || CT.C97, "SHORTQUARTERS", C602 || CT.C602, "QUARTERS", C603 || CT.C603, "AMPMS", C604 || CT.C604, "DATEFORMATS", C605 || CT.C605, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 6, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C607() {
      return C607 = dart.constList(["ക്രി.മു.", "എഡി"], dart.dynamic);
    },
    get C608() {
      return C608 = dart.constList(["ക്രിസ്‌തുവിന് മുമ്പ്", "ആന്നോ ഡൊമിനി"], dart.dynamic);
    },
    get C609() {
      return C609 = dart.constList(["ജ", "ഫെ", "മാ", "ഏ", "മെ", "ജൂൺ", "ജൂ", "ഓ", "സെ", "ഒ", "ന", "ഡി"], dart.dynamic);
    },
    get C610() {
      return C610 = dart.constList(["ജനുവരി", "ഫെബ്രുവരി", "മാർച്ച്", "ഏപ്രിൽ", "മേയ്", "ജൂൺ", "ജൂലൈ", "ഓഗസ്റ്റ്", "സെപ്റ്റംബർ", "ഒക്‌ടോബർ", "നവംബർ", "ഡിസംബർ"], dart.dynamic);
    },
    get C611() {
      return C611 = dart.constList(["ജനു", "ഫെബ്രു", "മാർ", "ഏപ്രി", "മേയ്", "ജൂൺ", "ജൂലൈ", "ഓഗ", "സെപ്റ്റം", "ഒക്ടോ", "നവം", "ഡിസം"], dart.dynamic);
    },
    get C612() {
      return C612 = dart.constList(["ഞായറാഴ്‌ച", "തിങ്കളാഴ്‌ച", "ചൊവ്വാഴ്ച", "ബുധനാഴ്‌ച", "വ്യാഴാഴ്‌ച", "വെള്ളിയാഴ്‌ച", "ശനിയാഴ്‌ച"], dart.dynamic);
    },
    get C613() {
      return C613 = dart.constList(["ഞായറാഴ്‌ച", "തിങ്കളാഴ്‌ച", "ചൊവ്വാഴ്‌ച", "ബുധനാഴ്‌ച", "വ്യാഴാഴ്‌ച", "വെള്ളിയാഴ്‌ച", "ശനിയാഴ്‌ച"], dart.dynamic);
    },
    get C614() {
      return C614 = dart.constList(["ഞായർ", "തിങ്കൾ", "ചൊവ്വ", "ബുധൻ", "വ്യാഴം", "വെള്ളി", "ശനി"], dart.dynamic);
    },
    get C615() {
      return C615 = dart.constList(["ഞ", "തി", "ചൊ", "ബു", "വ്യാ", "വെ", "ശ"], dart.dynamic);
    },
    get C616() {
      return C616 = dart.constList(["ഞാ", "തി", "ചൊ", "ബു", "വ്യാ", "വെ", "ശ"], dart.dynamic);
    },
    get C617() {
      return C617 = dart.constList(["ഒന്നാം പാദം", "രണ്ടാം പാദം", "മൂന്നാം പാദം", "നാലാം പാദം"], dart.dynamic);
    },
    get C618() {
      return C618 = dart.constList(["y, MMMM d, EEEE", "y, MMMM d", "y, MMM d", "d/M/yy"], dart.dynamic);
    },
    get C606() {
      return C606 = dart.constMap(core.String, dart.dynamic, ["NAME", "ml", "ERAS", C607 || CT.C607, "ERANAMES", C608 || CT.C608, "NARROWMONTHS", C609 || CT.C609, "STANDALONENARROWMONTHS", C609 || CT.C609, "MONTHS", C610 || CT.C610, "STANDALONEMONTHS", C610 || CT.C610, "SHORTMONTHS", C611 || CT.C611, "STANDALONESHORTMONTHS", C611 || CT.C611, "WEEKDAYS", C612 || CT.C612, "STANDALONEWEEKDAYS", C613 || CT.C613, "SHORTWEEKDAYS", C614 || CT.C614, "STANDALONESHORTWEEKDAYS", C614 || CT.C614, "NARROWWEEKDAYS", C615 || CT.C615, "STANDALONENARROWWEEKDAYS", C616 || CT.C616, "SHORTQUARTERS", C617 || CT.C617, "QUARTERS", C617 || CT.C617, "AMPMS", C71 || CT.C71, "DATEFORMATS", C618 || CT.C618, "TIMEFORMATS", C47 || CT.C47, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C229 || CT.C229, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C620() {
      return C620 = dart.constList(["МЭӨ", "МЭ"], dart.dynamic);
    },
    get C621() {
      return C621 = dart.constList(["манай эриний өмнөх", "манай эриний"], dart.dynamic);
    },
    get C622() {
      return C622 = dart.constList(["I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI", "XII"], dart.dynamic);
    },
    get C623() {
      return C623 = dart.constList(["Нэгдүгээр сар", "Хоёрдугаар сар", "Гуравдугаар сар", "Дөрөвдүгээр сар", "Тавдугаар сар", "Зургаадугаар сар", "Долдугаар сар", "Наймдугаар сар", "Есдүгээр сар", "Аравдугаар сар", "Арван нэгдүгээр сар", "Арван хоёрдугаар сар"], dart.dynamic);
    },
    get C624() {
      return C624 = dart.constList(["1-р сар", "2-р сар", "3-р сар", "4-р сар", "5-р сар", "6-р сар", "7-р сар", "8-р сар", "9-р сар", "10-р сар", "11-р сар", "12-р сар"], dart.dynamic);
    },
    get C625() {
      return C625 = dart.constList(["ням", "даваа", "мягмар", "лхагва", "пүрэв", "баасан", "бямба"], dart.dynamic);
    },
    get C626() {
      return C626 = dart.constList(["Ня", "Да", "Мя", "Лх", "Пү", "Ба", "Бя"], dart.dynamic);
    },
    get C627() {
      return C627 = dart.constList(["I улирал", "II улирал", "III улирал", "IV улирал"], dart.dynamic);
    },
    get C628() {
      return C628 = dart.constList(["1-р улирал", "2-р улирал", "3-р улирал", "4-р улирал"], dart.dynamic);
    },
    get C629() {
      return C629 = dart.constList(["ү.ө", "ү.х"], dart.dynamic);
    },
    get C630() {
      return C630 = dart.constList(["y.MM.dd, EEEE", "y.MM.dd", "y.MM.dd", "y.MM.dd"], dart.dynamic);
    },
    get C619() {
      return C619 = dart.constMap(core.String, dart.dynamic, ["NAME", "mn", "ERAS", C620 || CT.C620, "ERANAMES", C621 || CT.C621, "NARROWMONTHS", C622 || CT.C622, "STANDALONENARROWMONTHS", C622 || CT.C622, "MONTHS", C623 || CT.C623, "STANDALONEMONTHS", C623 || CT.C623, "SHORTMONTHS", C624 || CT.C624, "STANDALONESHORTMONTHS", C624 || CT.C624, "WEEKDAYS", C625 || CT.C625, "STANDALONEWEEKDAYS", C625 || CT.C625, "SHORTWEEKDAYS", C626 || CT.C626, "STANDALONESHORTWEEKDAYS", C626 || CT.C626, "NARROWWEEKDAYS", C626 || CT.C626, "STANDALONENARROWWEEKDAYS", C626 || CT.C626, "SHORTQUARTERS", C627 || CT.C627, "QUARTERS", C628 || CT.C628, "AMPMS", C629 || CT.C629, "DATEFORMATS", C630 || CT.C630, "TIMEFORMATS", C282 || CT.C282, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C632() {
      return C632 = dart.constList(["इ. स. पू.", "इ. स."], dart.dynamic);
    },
    get C633() {
      return C633 = dart.constList(["ईसवीसनपूर्व", "ईसवीसन"], dart.dynamic);
    },
    get C634() {
      return C634 = dart.constList(["जा", "फे", "मा", "ए", "मे", "जू", "जु", "ऑ", "स", "ऑ", "नो", "डि"], dart.dynamic);
    },
    get C635() {
      return C635 = dart.constList(["जानेवारी", "फेब्रुवारी", "मार्च", "एप्रिल", "मे", "जून", "जुलै", "ऑगस्ट", "सप्टेंबर", "ऑक्टोबर", "नोव्हेंबर", "डिसेंबर"], dart.dynamic);
    },
    get C636() {
      return C636 = dart.constList(["जाने", "फेब्रु", "मार्च", "एप्रि", "मे", "जून", "जुलै", "ऑग", "सप्टें", "ऑक्टो", "नोव्हें", "डिसें"], dart.dynamic);
    },
    get C637() {
      return C637 = dart.constList(["रविवार", "सोमवार", "मंगळवार", "बुधवार", "गुरुवार", "शुक्रवार", "शनिवार"], dart.dynamic);
    },
    get C638() {
      return C638 = dart.constList(["रवि", "सोम", "मंगळ", "बुध", "गुरु", "शुक्र", "शनि"], dart.dynamic);
    },
    get C639() {
      return C639 = dart.constList(["ति१", "ति२", "ति३", "ति४"], dart.dynamic);
    },
    get C640() {
      return C640 = dart.constList(["प्रथम तिमाही", "द्वितीय तिमाही", "तृतीय तिमाही", "चतुर्थ तिमाही"], dart.dynamic);
    },
    get C641() {
      return C641 = dart.constList(["म.पू.", "म.उ."], dart.dynamic);
    },
    get C642() {
      return C642 = dart.constList(["{1} रोजी {0}", "{1} रोजी {0}", "{1}, {0}", "{1}, {0}"], dart.dynamic);
    },
    get C631() {
      return C631 = dart.constMap(core.String, dart.dynamic, ["NAME", "mr", "ERAS", C632 || CT.C632, "ERANAMES", C633 || CT.C633, "NARROWMONTHS", C634 || CT.C634, "STANDALONENARROWMONTHS", C634 || CT.C634, "MONTHS", C635 || CT.C635, "STANDALONEMONTHS", C635 || CT.C635, "SHORTMONTHS", C636 || CT.C636, "STANDALONESHORTMONTHS", C636 || CT.C636, "WEEKDAYS", C637 || CT.C637, "STANDALONEWEEKDAYS", C637 || CT.C637, "SHORTWEEKDAYS", C638 || CT.C638, "STANDALONESHORTWEEKDAYS", C638 || CT.C638, "NARROWWEEKDAYS", C392 || CT.C392, "STANDALONENARROWWEEKDAYS", C392 || CT.C392, "SHORTQUARTERS", C639 || CT.C639, "QUARTERS", C640 || CT.C640, "AMPMS", C641 || CT.C641, "DATEFORMATS", C116 || CT.C116, "TIMEFORMATS", C47 || CT.C47, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C229 || CT.C229, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C642 || CT.C642, "ZERODIGIT", "०"]);
    },
    get C644() {
      return C644 = dart.constList(["S.M.", "TM"], dart.dynamic);
    },
    get C645() {
      return C645 = dart.constList(["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"], dart.dynamic);
    },
    get C646() {
      return C646 = dart.constList(["Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember"], dart.dynamic);
    },
    get C647() {
      return C647 = dart.constList(["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ogo", "Sep", "Okt", "Nov", "Dis"], dart.dynamic);
    },
    get C648() {
      return C648 = dart.constList(["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"], dart.dynamic);
    },
    get C649() {
      return C649 = dart.constList(["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"], dart.dynamic);
    },
    get C650() {
      return C650 = dart.constList(["A", "I", "S", "R", "K", "J", "S"], dart.dynamic);
    },
    get C651() {
      return C651 = dart.constList(["S1", "S2", "S3", "S4"], dart.dynamic);
    },
    get C652() {
      return C652 = dart.constList(["Suku pertama", "Suku Ke-2", "Suku Ke-3", "Suku Ke-4"], dart.dynamic);
    },
    get C653() {
      return C653 = dart.constList(["PG", "PTG"], dart.dynamic);
    },
    get C654() {
      return C654 = dart.constList(["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/MM/yy"], dart.dynamic);
    },
    get C643() {
      return C643 = dart.constMap(core.String, dart.dynamic, ["NAME", "ms", "ERAS", C644 || CT.C644, "ERANAMES", C644 || CT.C644, "NARROWMONTHS", C645 || CT.C645, "STANDALONENARROWMONTHS", C645 || CT.C645, "MONTHS", C646 || CT.C646, "STANDALONEMONTHS", C646 || CT.C646, "SHORTMONTHS", C647 || CT.C647, "STANDALONESHORTMONTHS", C647 || CT.C647, "WEEKDAYS", C648 || CT.C648, "STANDALONEWEEKDAYS", C648 || CT.C648, "SHORTWEEKDAYS", C649 || CT.C649, "STANDALONESHORTWEEKDAYS", C649 || CT.C649, "NARROWWEEKDAYS", C650 || CT.C650, "STANDALONENARROWWEEKDAYS", C650 || CT.C650, "SHORTQUARTERS", C651 || CT.C651, "QUARTERS", C652 || CT.C652, "AMPMS", C653 || CT.C653, "DATEFORMATS", C654 || CT.C654, "TIMEFORMATS", C47 || CT.C47, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 6, "DATETIMEFORMATS", C466 || CT.C466]);
    },
    get C656() {
      return C656 = dart.constList(["ဘီစီ", "အေဒီ"], dart.dynamic);
    },
    get C657() {
      return C657 = dart.constList(["ခရစ်တော် မပေါ်မီနှစ်", "ခရစ်နှစ်"], dart.dynamic);
    },
    get C658() {
      return C658 = dart.constList(["ဇ", "ဖ", "မ", "ဧ", "မ", "ဇ", "ဇ", "ဩ", "စ", "အ", "န", "ဒ"], dart.dynamic);
    },
    get C659() {
      return C659 = dart.constList(["ဇန်နဝါရီ", "ဖေဖော်ဝါရီ", "မတ်", "ဧပြီ", "မေ", "ဇွန်", "ဇူလိုင်", "ဩဂုတ်", "စက်တင်ဘာ", "အောက်တိုဘာ", "နိုဝင်ဘာ", "ဒီဇင်ဘာ"], dart.dynamic);
    },
    get C660() {
      return C660 = dart.constList(["ဇန်", "ဖေ", "မတ်", "ဧ", "မေ", "ဇွန်", "ဇူ", "ဩ", "စက်", "အောက်", "နို", "ဒီ"], dart.dynamic);
    },
    get C661() {
      return C661 = dart.constList(["တနင်္ဂနွေ", "တနင်္လာ", "အင်္ဂါ", "ဗုဒ္ဓဟူး", "ကြာသပတေး", "သောကြာ", "စနေ"], dart.dynamic);
    },
    get C662() {
      return C662 = dart.constList(["တ", "တ", "အ", "ဗ", "က", "သ", "စ"], dart.dynamic);
    },
    get C663() {
      return C663 = dart.constList(["ပထမ သုံးလပတ်", "ဒုတိယ သုံးလပတ်", "တတိယ သုံးလပတ်", "စတုတ္ထ သုံးလပတ်"], dart.dynamic);
    },
    get C664() {
      return C664 = dart.constList(["နံနက်", "ညနေ"], dart.dynamic);
    },
    get C665() {
      return C665 = dart.constList(["y၊ MMMM d၊ EEEE", "y၊ d MMMM", "y၊ MMM d", "dd-MM-yy"], dart.dynamic);
    },
    get C666() {
      return C666 = dart.constList(["zzzz HH:mm:ss", "z HH:mm:ss", "B HH:mm:ss", "B H:mm"], dart.dynamic);
    },
    get C655() {
      return C655 = dart.constMap(core.String, dart.dynamic, ["NAME", "my", "ERAS", C656 || CT.C656, "ERANAMES", C657 || CT.C657, "NARROWMONTHS", C658 || CT.C658, "STANDALONENARROWMONTHS", C658 || CT.C658, "MONTHS", C659 || CT.C659, "STANDALONEMONTHS", C659 || CT.C659, "SHORTMONTHS", C660 || CT.C660, "STANDALONESHORTMONTHS", C660 || CT.C660, "WEEKDAYS", C661 || CT.C661, "STANDALONEWEEKDAYS", C661 || CT.C661, "SHORTWEEKDAYS", C661 || CT.C661, "STANDALONESHORTWEEKDAYS", C661 || CT.C661, "NARROWWEEKDAYS", C662 || CT.C662, "STANDALONENARROWWEEKDAYS", C662 || CT.C662, "SHORTQUARTERS", C663 || CT.C663, "QUARTERS", C663 || CT.C663, "AMPMS", C664 || CT.C664, "DATEFORMATS", C665 || CT.C665, "TIMEFORMATS", C666 || CT.C666, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C33 || CT.C33, "ZERODIGIT", "၀"]);
    },
    get C668() {
      return C668 = dart.constList(["før Kristus", "etter Kristus"], dart.dynamic);
    },
    get C669() {
      return C669 = dart.constList(["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], dart.dynamic);
    },
    get C670() {
      return C670 = dart.constList(["jan.", "feb.", "mar.", "apr.", "mai", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "des."], dart.dynamic);
    },
    get C671() {
      return C671 = dart.constList(["jan", "feb", "mar", "apr", "mai", "jun", "jul", "aug", "sep", "okt", "nov", "des"], dart.dynamic);
    },
    get C672() {
      return C672 = dart.constList(["EEEE d. MMMM y", "d. MMMM y", "d. MMM y", "dd.MM.y"], dart.dynamic);
    },
    get C673() {
      return C673 = dart.constList(["{1} {0}", "{1} 'kl'. {0}", "{1}, {0}", "{1}, {0}"], dart.dynamic);
    },
    get C667() {
      return C667 = dart.constMap(core.String, dart.dynamic, ["NAME", "nb", "ERAS", C162 || CT.C162, "ERANAMES", C668 || CT.C668, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C669 || CT.C669, "STANDALONEMONTHS", C669 || CT.C669, "SHORTMONTHS", C670 || CT.C670, "STANDALONESHORTMONTHS", C671 || CT.C671, "WEEKDAYS", C165 || CT.C165, "STANDALONEWEEKDAYS", C165 || CT.C165, "SHORTWEEKDAYS", C166 || CT.C166, "STANDALONESHORTWEEKDAYS", C166 || CT.C166, "NARROWWEEKDAYS", C168 || CT.C168, "STANDALONENARROWWEEKDAYS", C168 || CT.C168, "SHORTQUARTERS", C27 || CT.C27, "QUARTERS", C170 || CT.C170, "AMPMS", C221 || CT.C221, "DATEFORMATS", C672 || CT.C672, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C673 || CT.C673]);
    },
    get C675() {
      return C675 = dart.constList(["ईसा पूर्व", "सन्"], dart.dynamic);
    },
    get C676() {
      return C676 = dart.constList(["जन", "फेब", "मार्च", "अप्र", "मे", "जुन", "जुल", "अग", "सेप", "अक्टो", "नोभे", "डिसे"], dart.dynamic);
    },
    get C677() {
      return C677 = dart.constList(["जन", "फेेब", "मार्च", "अप्र", "मे", "जुन", "जुल", "अग", "सेप", "अक्टो", "नोभे", "डिसे"], dart.dynamic);
    },
    get C678() {
      return C678 = dart.constList(["जनवरी", "फेब्रुअरी", "मार्च", "अप्रिल", "मे", "जुन", "जुलाई", "अगस्ट", "सेप्टेम्बर", "अक्टोबर", "नोभेम्बर", "डिसेम्बर"], dart.dynamic);
    },
    get C679() {
      return C679 = dart.constList(["आइतबार", "सोमबार", "मङ्गलबार", "बुधबार", "बिहिबार", "शुक्रबार", "शनिबार"], dart.dynamic);
    },
    get C680() {
      return C680 = dart.constList(["आइत", "सोम", "मङ्गल", "बुध", "बिहि", "शुक्र", "शनि"], dart.dynamic);
    },
    get C681() {
      return C681 = dart.constList(["आ", "सो", "म", "बु", "बि", "शु", "श"], dart.dynamic);
    },
    get C682() {
      return C682 = dart.constList(["पहिलो सत्र", "दोस्रो सत्र", "तेस्रो सत्र", "चौथो सत्र"], dart.dynamic);
    },
    get C683() {
      return C683 = dart.constList(["पूर्वाह्न", "अपराह्न"], dart.dynamic);
    },
    get C684() {
      return C684 = dart.constList(["y MMMM d, EEEE", "y MMMM d", "y MMM d", "yy/M/d"], dart.dynamic);
    },
    get C674() {
      return C674 = dart.constMap(core.String, dart.dynamic, ["NAME", "ne", "ERAS", C675 || CT.C675, "ERANAMES", C675 || CT.C675, "NARROWMONTHS", C676 || CT.C676, "STANDALONENARROWMONTHS", C677 || CT.C677, "MONTHS", C678 || CT.C678, "STANDALONEMONTHS", C678 || CT.C678, "SHORTMONTHS", C678 || CT.C678, "STANDALONESHORTMONTHS", C678 || CT.C678, "WEEKDAYS", C679 || CT.C679, "STANDALONEWEEKDAYS", C679 || CT.C679, "SHORTWEEKDAYS", C680 || CT.C680, "STANDALONESHORTWEEKDAYS", C680 || CT.C680, "NARROWWEEKDAYS", C681 || CT.C681, "STANDALONENARROWWEEKDAYS", C681 || CT.C681, "SHORTQUARTERS", C682 || CT.C682, "QUARTERS", C682 || CT.C682, "AMPMS", C683 || CT.C683, "DATEFORMATS", C684 || CT.C684, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C466 || CT.C466, "ZERODIGIT", "०"]);
    },
    get C686() {
      return C686 = dart.constList(["v.Chr.", "n.Chr."], dart.dynamic);
    },
    get C687() {
      return C687 = dart.constList(["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"], dart.dynamic);
    },
    get C688() {
      return C688 = dart.constList(["jan.", "feb.", "mrt.", "apr.", "mei", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], dart.dynamic);
    },
    get C689() {
      return C689 = dart.constList(["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"], dart.dynamic);
    },
    get C690() {
      return C690 = dart.constList(["zo", "ma", "di", "wo", "do", "vr", "za"], dart.dynamic);
    },
    get C691() {
      return C691 = dart.constList(["Z", "M", "D", "W", "D", "V", "Z"], dart.dynamic);
    },
    get C692() {
      return C692 = dart.constList(["1e kwartaal", "2e kwartaal", "3e kwartaal", "4e kwartaal"], dart.dynamic);
    },
    get C693() {
      return C693 = dart.constList(["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd-MM-yy"], dart.dynamic);
    },
    get C694() {
      return C694 = dart.constList(["{1} 'om' {0}", "{1} 'om' {0}", "{1} {0}", "{1} {0}"], dart.dynamic);
    },
    get C685() {
      return C685 = dart.constMap(core.String, dart.dynamic, ["NAME", "nl", "ERAS", C686 || CT.C686, "ERANAMES", C20 || CT.C20, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C687 || CT.C687, "STANDALONEMONTHS", C687 || CT.C687, "SHORTMONTHS", C688 || CT.C688, "STANDALONESHORTMONTHS", C688 || CT.C688, "WEEKDAYS", C689 || CT.C689, "STANDALONEWEEKDAYS", C689 || CT.C689, "SHORTWEEKDAYS", C690 || CT.C690, "STANDALONESHORTWEEKDAYS", C690 || CT.C690, "NARROWWEEKDAYS", C691 || CT.C691, "STANDALONENARROWWEEKDAYS", C691 || CT.C691, "SHORTQUARTERS", C27 || CT.C27, "QUARTERS", C692 || CT.C692, "AMPMS", C221 || CT.C221, "DATEFORMATS", C693 || CT.C693, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C694 || CT.C694]);
    },
    get C696() {
      return C696 = dart.constList(["ଖ୍ରୀଷ୍ଟପୂର୍ବ", "ଖ୍ରୀଷ୍ଟାବ୍ଦ"], dart.dynamic);
    },
    get C697() {
      return C697 = dart.constList(["ଜା", "ଫେ", "ମା", "ଅ", "ମଇ", "ଜୁ", "ଜୁ", "ଅ", "ସେ", "ଅ", "ନ", "ଡି"], dart.dynamic);
    },
    get C698() {
      return C698 = dart.constList(["ଜାନୁଆରୀ", "ଫେବୃଆରୀ", "ମାର୍ଚ୍ଚ", "ଅପ୍ରେଲ", "ମଇ", "ଜୁନ", "ଜୁଲାଇ", "ଅଗଷ୍ଟ", "ସେପ୍ଟେମ୍ବର", "ଅକ୍ଟୋବର", "ନଭେମ୍ବର", "ଡିସେମ୍ବର"], dart.dynamic);
    },
    get C699() {
      return C699 = dart.constList(["ରବିବାର", "ସୋମବାର", "ମଙ୍ଗଳବାର", "ବୁଧବାର", "ଗୁରୁବାର", "ଶୁକ୍ରବାର", "ଶନିବାର"], dart.dynamic);
    },
    get C700() {
      return C700 = dart.constList(["ରବି", "ସୋମ", "ମଙ୍ଗଳ", "ବୁଧ", "ଗୁରୁ", "ଶୁକ୍ର", "ଶନି"], dart.dynamic);
    },
    get C701() {
      return C701 = dart.constList(["ର", "ସୋ", "ମ", "ବୁ", "ଗୁ", "ଶୁ", "ଶ"], dart.dynamic);
    },
    get C702() {
      return C702 = dart.constList(["1ମ ତ୍ରୟମାସ", "2ୟ ତ୍ରୟମାସ", "3ୟ ତ୍ରୟମାସ", "4ର୍ଥ ତ୍ରୟମାସ"], dart.dynamic);
    },
    get C703() {
      return C703 = dart.constList(["{0} ଠାରେ {1}", "{0} ଠାରେ {1}", "{1}, {0}", "{1}, {0}"], dart.dynamic);
    },
    get C695() {
      return C695 = dart.constMap(core.String, dart.dynamic, ["NAME", "or", "ERAS", C205 || CT.C205, "ERANAMES", C696 || CT.C696, "NARROWMONTHS", C697 || CT.C697, "STANDALONENARROWMONTHS", C697 || CT.C697, "MONTHS", C698 || CT.C698, "STANDALONEMONTHS", C698 || CT.C698, "SHORTMONTHS", C698 || CT.C698, "STANDALONESHORTMONTHS", C698 || CT.C698, "WEEKDAYS", C699 || CT.C699, "STANDALONEWEEKDAYS", C699 || CT.C699, "SHORTWEEKDAYS", C700 || CT.C700, "STANDALONESHORTWEEKDAYS", C700 || CT.C700, "NARROWWEEKDAYS", C701 || CT.C701, "STANDALONENARROWWEEKDAYS", C701 || CT.C701, "SHORTQUARTERS", C702 || CT.C702, "QUARTERS", C702 || CT.C702, "AMPMS", C71 || CT.C71, "DATEFORMATS", C213 || CT.C213, "TIMEFORMATS", C47 || CT.C47, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C229 || CT.C229, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C703 || CT.C703]);
    },
    get C705() {
      return C705 = dart.constList(["ਈ. ਪੂ.", "ਸੰਨ"], dart.dynamic);
    },
    get C706() {
      return C706 = dart.constList(["ਈਸਵੀ ਪੂਰਵ", "ਈਸਵੀ ਸੰਨ"], dart.dynamic);
    },
    get C707() {
      return C707 = dart.constList(["ਜ", "ਫ਼", "ਮਾ", "ਅ", "ਮ", "ਜੂ", "ਜੁ", "ਅ", "ਸ", "ਅ", "ਨ", "ਦ"], dart.dynamic);
    },
    get C708() {
      return C708 = dart.constList(["ਜਨਵਰੀ", "ਫ਼ਰਵਰੀ", "ਮਾਰਚ", "ਅਪ੍ਰੈਲ", "ਮਈ", "ਜੂਨ", "ਜੁਲਾਈ", "ਅਗਸਤ", "ਸਤੰਬਰ", "ਅਕਤੂਬਰ", "ਨਵੰਬਰ", "ਦਸੰਬਰ"], dart.dynamic);
    },
    get C709() {
      return C709 = dart.constList(["ਜਨ", "ਫ਼ਰ", "ਮਾਰਚ", "ਅਪ੍ਰੈ", "ਮਈ", "ਜੂਨ", "ਜੁਲਾ", "ਅਗ", "ਸਤੰ", "ਅਕਤੂ", "ਨਵੰ", "ਦਸੰ"], dart.dynamic);
    },
    get C710() {
      return C710 = dart.constList(["ਐਤਵਾਰ", "ਸੋਮਵਾਰ", "ਮੰਗਲਵਾਰ", "ਬੁੱਧਵਾਰ", "ਵੀਰਵਾਰ", "ਸ਼ੁੱਕਰਵਾਰ", "ਸ਼ਨਿੱਚਰਵਾਰ"], dart.dynamic);
    },
    get C711() {
      return C711 = dart.constList(["ਐਤ", "ਸੋਮ", "ਮੰਗਲ", "ਬੁੱਧ", "ਵੀਰ", "ਸ਼ੁੱਕਰ", "ਸ਼ਨਿੱਚਰ"], dart.dynamic);
    },
    get C712() {
      return C712 = dart.constList(["ਐ", "ਸੋ", "ਮੰ", "ਬੁੱ", "ਵੀ", "ਸ਼ੁੱ", "ਸ਼"], dart.dynamic);
    },
    get C713() {
      return C713 = dart.constList(["ਤਿਮਾਹੀ1", "ਤਿਮਾਹੀ2", "ਤਿਮਾਹੀ3", "ਤਿਮਾਹੀ4"], dart.dynamic);
    },
    get C714() {
      return C714 = dart.constList(["ਪਹਿਲੀ ਤਿਮਾਹੀ", "ਦੂਜੀ ਤਿਮਾਹੀ", "ਤੀਜੀ ਤਿਮਾਹੀ", "ਚੌਥੀ ਤਿਮਾਹੀ"], dart.dynamic);
    },
    get C715() {
      return C715 = dart.constList(["ਪੂ.ਦੁ.", "ਬਾ.ਦੁ."], dart.dynamic);
    },
    get C704() {
      return C704 = dart.constMap(core.String, dart.dynamic, ["NAME", "pa", "ERAS", C705 || CT.C705, "ERANAMES", C706 || CT.C706, "NARROWMONTHS", C707 || CT.C707, "STANDALONENARROWMONTHS", C707 || CT.C707, "MONTHS", C708 || CT.C708, "STANDALONEMONTHS", C708 || CT.C708, "SHORTMONTHS", C709 || CT.C709, "STANDALONESHORTMONTHS", C709 || CT.C709, "WEEKDAYS", C710 || CT.C710, "STANDALONEWEEKDAYS", C710 || CT.C710, "SHORTWEEKDAYS", C711 || CT.C711, "STANDALONESHORTWEEKDAYS", C711 || CT.C711, "NARROWWEEKDAYS", C712 || CT.C712, "STANDALONENARROWWEEKDAYS", C712 || CT.C712, "SHORTQUARTERS", C713 || CT.C713, "QUARTERS", C714 || CT.C714, "AMPMS", C715 || CT.C715, "DATEFORMATS", C202 || CT.C202, "TIMEFORMATS", C47 || CT.C47, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C229 || CT.C229, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C466 || CT.C466]);
    },
    get C717() {
      return C717 = dart.constList(["p.n.e.", "n.e."], dart.dynamic);
    },
    get C718() {
      return C718 = dart.constList(["przed naszą erą", "naszej ery"], dart.dynamic);
    },
    get C719() {
      return C719 = dart.constList(["s", "l", "m", "k", "m", "c", "l", "s", "w", "p", "l", "g"], dart.dynamic);
    },
    get C720() {
      return C720 = dart.constList(["S", "L", "M", "K", "M", "C", "L", "S", "W", "P", "L", "G"], dart.dynamic);
    },
    get C721() {
      return C721 = dart.constList(["stycznia", "lutego", "marca", "kwietnia", "maja", "czerwca", "lipca", "sierpnia", "września", "października", "listopada", "grudnia"], dart.dynamic);
    },
    get C722() {
      return C722 = dart.constList(["styczeń", "luty", "marzec", "kwiecień", "maj", "czerwiec", "lipiec", "sierpień", "wrzesień", "październik", "listopad", "grudzień"], dart.dynamic);
    },
    get C723() {
      return C723 = dart.constList(["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "paź", "lis", "gru"], dart.dynamic);
    },
    get C724() {
      return C724 = dart.constList(["niedziela", "poniedziałek", "wtorek", "środa", "czwartek", "piątek", "sobota"], dart.dynamic);
    },
    get C725() {
      return C725 = dart.constList(["niedz.", "pon.", "wt.", "śr.", "czw.", "pt.", "sob."], dart.dynamic);
    },
    get C726() {
      return C726 = dart.constList(["n", "p", "w", "ś", "c", "p", "s"], dart.dynamic);
    },
    get C727() {
      return C727 = dart.constList(["N", "P", "W", "Ś", "C", "P", "S"], dart.dynamic);
    },
    get C728() {
      return C728 = dart.constList(["I kw.", "II kw.", "III kw.", "IV kw."], dart.dynamic);
    },
    get C729() {
      return C729 = dart.constList(["I kwartał", "II kwartał", "III kwartał", "IV kwartał"], dart.dynamic);
    },
    get C730() {
      return C730 = dart.constList(["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd.MM.y"], dart.dynamic);
    },
    get C716() {
      return C716 = dart.constMap(core.String, dart.dynamic, ["NAME", "pl", "ERAS", C717 || CT.C717, "ERANAMES", C718 || CT.C718, "NARROWMONTHS", C719 || CT.C719, "STANDALONENARROWMONTHS", C720 || CT.C720, "MONTHS", C721 || CT.C721, "STANDALONEMONTHS", C722 || CT.C722, "SHORTMONTHS", C723 || CT.C723, "STANDALONESHORTMONTHS", C723 || CT.C723, "WEEKDAYS", C724 || CT.C724, "STANDALONEWEEKDAYS", C724 || CT.C724, "SHORTWEEKDAYS", C725 || CT.C725, "STANDALONESHORTWEEKDAYS", C725 || CT.C725, "NARROWWEEKDAYS", C726 || CT.C726, "STANDALONENARROWWEEKDAYS", C727 || CT.C727, "SHORTQUARTERS", C728 || CT.C728, "QUARTERS", C729 || CT.C729, "AMPMS", C71 || CT.C71, "DATEFORMATS", C730 || CT.C730, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C466 || CT.C466]);
    },
    get C732() {
      return C732 = dart.constList(["له میلاد وړاندې", "م."], dart.dynamic);
    },
    get C733() {
      return C733 = dart.constList(["له میلاد څخه وړاندې", "له میلاد څخه وروسته"], dart.dynamic);
    },
    get C734() {
      return C734 = dart.constList(["ج", "ف", "م", "ا", "م", "ج", "ج", "ا", "س", "ا", "ن", "د"], dart.dynamic);
    },
    get C735() {
      return C735 = dart.constList(["جنوري", "فبروري", "مارچ", "اپریل", "مۍ", "جون", "جولای", "اگست", "سېپتمبر", "اکتوبر", "نومبر", "دسمبر"], dart.dynamic);
    },
    get C736() {
      return C736 = dart.constList(["جنوري", "فېبروري", "مارچ", "اپریل", "مۍ", "جون", "جولای", "اگست", "سپتمبر", "اکتوبر", "نومبر", "دسمبر"], dart.dynamic);
    },
    get C737() {
      return C737 = dart.constList(["جنوري", "فبروري", "مارچ", "اپریل", "مۍ", "جون", "جولای", "اگست", "سپتمبر", "اکتوبر", "نومبر", "دسمبر"], dart.dynamic);
    },
    get C738() {
      return C738 = dart.constList(["يونۍ", "دونۍ", "درېنۍ", "څلرنۍ", "پينځنۍ", "جمعه", "اونۍ"], dart.dynamic);
    },
    get C739() {
      return C739 = dart.constList(["لومړۍ ربعه", "۲مه ربعه", "۳مه ربعه", "۴مه ربعه"], dart.dynamic);
    },
    get C740() {
      return C740 = dart.constList(["غ.م.", "غ.و."], dart.dynamic);
    },
    get C741() {
      return C741 = dart.constList(["EEEE د y د MMMM d", "د y د MMMM d", "y MMM d", "y/M/d"], dart.dynamic);
    },
    get C742() {
      return C742 = dart.constList([3, 4], dart.dynamic);
    },
    get C731() {
      return C731 = dart.constMap(core.String, dart.dynamic, ["NAME", "ps", "ERAS", C732 || CT.C732, "ERANAMES", C733 || CT.C733, "NARROWMONTHS", C734 || CT.C734, "STANDALONENARROWMONTHS", C62 || CT.C62, "MONTHS", C735 || CT.C735, "STANDALONEMONTHS", C736 || CT.C736, "SHORTMONTHS", C735 || CT.C735, "STANDALONESHORTMONTHS", C737 || CT.C737, "WEEKDAYS", C738 || CT.C738, "STANDALONEWEEKDAYS", C738 || CT.C738, "SHORTWEEKDAYS", C738 || CT.C738, "STANDALONESHORTWEEKDAYS", C738 || CT.C738, "NARROWWEEKDAYS", C211 || CT.C211, "STANDALONENARROWWEEKDAYS", C211 || CT.C211, "SHORTQUARTERS", C739 || CT.C739, "QUARTERS", C739 || CT.C739, "AMPMS", C740 || CT.C740, "DATEFORMATS", C741 || CT.C741, "TIMEFORMATS", C295 || CT.C295, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 5, "WEEKENDRANGE", C742 || CT.C742, "FIRSTWEEKCUTOFFDAY", 4, "DATETIMEFORMATS", C33 || CT.C33, "ZERODIGIT", "۰"]);
    },
    get C744() {
      return C744 = dart.constList(["antes de Cristo", "depois de Cristo"], dart.dynamic);
    },
    get C745() {
      return C745 = dart.constList(["janeiro", "fevereiro", "março", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro"], dart.dynamic);
    },
    get C746() {
      return C746 = dart.constList(["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], dart.dynamic);
    },
    get C747() {
      return C747 = dart.constList(["domingo", "segunda-feira", "terça-feira", "quarta-feira", "quinta-feira", "sexta-feira", "sábado"], dart.dynamic);
    },
    get C748() {
      return C748 = dart.constList(["dom", "seg", "ter", "qua", "qui", "sex", "sáb"], dart.dynamic);
    },
    get C749() {
      return C749 = dart.constList(["D", "S", "T", "Q", "Q", "S", "S"], dart.dynamic);
    },
    get C750() {
      return C750 = dart.constList(["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "d 'de' MMM 'de' y", "dd/MM/y"], dart.dynamic);
    },
    get C743() {
      return C743 = dart.constMap(core.String, dart.dynamic, ["NAME", "pt", "ERAS", C339 || CT.C339, "ERANAMES", C744 || CT.C744, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C745 || CT.C745, "STANDALONEMONTHS", C745 || CT.C745, "SHORTMONTHS", C746 || CT.C746, "STANDALONESHORTMONTHS", C746 || CT.C746, "WEEKDAYS", C747 || CT.C747, "STANDALONEWEEKDAYS", C747 || CT.C747, "SHORTWEEKDAYS", C748 || CT.C748, "STANDALONESHORTWEEKDAYS", C748 || CT.C748, "NARROWWEEKDAYS", C749 || CT.C749, "STANDALONENARROWWEEKDAYS", C749 || CT.C749, "SHORTQUARTERS", C242 || CT.C242, "QUARTERS", C464 || CT.C464, "AMPMS", C71 || CT.C71, "DATEFORMATS", C750 || CT.C750, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C752() {
      return C752 = dart.constList(["domingo", "segunda", "terça", "quarta", "quinta", "sexta", "sábado"], dart.dynamic);
    },
    get C753() {
      return C753 = dart.constList(["da manhã", "da tarde"], dart.dynamic);
    },
    get C754() {
      return C754 = dart.constList(["{1} 'às' {0}", "{1} 'às' {0}", "{1}, {0}", "{1}, {0}"], dart.dynamic);
    },
    get C751() {
      return C751 = dart.constMap(core.String, dart.dynamic, ["NAME", "pt_PT", "ERAS", C339 || CT.C339, "ERANAMES", C744 || CT.C744, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C745 || CT.C745, "STANDALONEMONTHS", C745 || CT.C745, "SHORTMONTHS", C746 || CT.C746, "STANDALONESHORTMONTHS", C746 || CT.C746, "WEEKDAYS", C747 || CT.C747, "STANDALONEWEEKDAYS", C747 || CT.C747, "SHORTWEEKDAYS", C752 || CT.C752, "STANDALONESHORTWEEKDAYS", C752 || CT.C752, "NARROWWEEKDAYS", C749 || CT.C749, "STANDALONENARROWWEEKDAYS", C749 || CT.C749, "SHORTQUARTERS", C242 || CT.C242, "QUARTERS", C251 || CT.C251, "AMPMS", C753 || CT.C753, "DATEFORMATS", C353 || CT.C353, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C754 || CT.C754]);
    },
    get C756() {
      return C756 = dart.constList(["î.Hr.", "d.Hr."], dart.dynamic);
    },
    get C757() {
      return C757 = dart.constList(["înainte de Hristos", "după Hristos"], dart.dynamic);
    },
    get C758() {
      return C758 = dart.constList(["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], dart.dynamic);
    },
    get C759() {
      return C759 = dart.constList(["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", "iulie", "august", "septembrie", "octombrie", "noiembrie", "decembrie"], dart.dynamic);
    },
    get C760() {
      return C760 = dart.constList(["ian.", "feb.", "mar.", "apr.", "mai", "iun.", "iul.", "aug.", "sept.", "oct.", "nov.", "dec."], dart.dynamic);
    },
    get C761() {
      return C761 = dart.constList(["duminică", "luni", "marți", "miercuri", "joi", "vineri", "sâmbătă"], dart.dynamic);
    },
    get C762() {
      return C762 = dart.constList(["dum.", "lun.", "mar.", "mie.", "joi", "vin.", "sâm."], dart.dynamic);
    },
    get C763() {
      return C763 = dart.constList(["trim. I", "trim. II", "trim. III", "trim. IV"], dart.dynamic);
    },
    get C764() {
      return C764 = dart.constList(["trimestrul I", "trimestrul al II-lea", "trimestrul al III-lea", "trimestrul al IV-lea"], dart.dynamic);
    },
    get C755() {
      return C755 = dart.constMap(core.String, dart.dynamic, ["NAME", "ro", "ERAS", C756 || CT.C756, "ERANAMES", C757 || CT.C757, "NARROWMONTHS", C758 || CT.C758, "STANDALONENARROWMONTHS", C758 || CT.C758, "MONTHS", C759 || CT.C759, "STANDALONEMONTHS", C759 || CT.C759, "SHORTMONTHS", C760 || CT.C760, "STANDALONESHORTMONTHS", C760 || CT.C760, "WEEKDAYS", C761 || CT.C761, "STANDALONEWEEKDAYS", C761 || CT.C761, "SHORTWEEKDAYS", C762 || CT.C762, "STANDALONESHORTWEEKDAYS", C762 || CT.C762, "NARROWWEEKDAYS", C250 || CT.C250, "STANDALONENARROWWEEKDAYS", C250 || CT.C250, "SHORTQUARTERS", C763 || CT.C763, "QUARTERS", C764 || CT.C764, "AMPMS", C221 || CT.C221, "DATEFORMATS", C730 || CT.C730, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 6, "DATETIMEFORMATS", C103 || CT.C103]);
    },
    get C766() {
      return C766 = dart.constList(["до н. э.", "н. э."], dart.dynamic);
    },
    get C767() {
      return C767 = dart.constList(["до Рождества Христова", "от Рождества Христова"], dart.dynamic);
    },
    get C768() {
      return C768 = dart.constList(["января", "февраля", "марта", "апреля", "мая", "июня", "июля", "августа", "сентября", "октября", "ноября", "декабря"], dart.dynamic);
    },
    get C769() {
      return C769 = dart.constList(["янв.", "февр.", "мар.", "апр.", "мая", "июн.", "июл.", "авг.", "сент.", "окт.", "нояб.", "дек."], dart.dynamic);
    },
    get C770() {
      return C770 = dart.constList(["янв.", "февр.", "март", "апр.", "май", "июнь", "июль", "авг.", "сент.", "окт.", "нояб.", "дек."], dart.dynamic);
    },
    get C771() {
      return C771 = dart.constList(["воскресенье", "понедельник", "вторник", "среда", "четверг", "пятница", "суббота"], dart.dynamic);
    },
    get C772() {
      return C772 = dart.constList(["вс", "пн", "вт", "ср", "чт", "пт", "сб"], dart.dynamic);
    },
    get C773() {
      return C773 = dart.constList(["В", "П", "В", "С", "Ч", "П", "С"], dart.dynamic);
    },
    get C774() {
      return C774 = dart.constList(["1-й кв.", "2-й кв.", "3-й кв.", "4-й кв."], dart.dynamic);
    },
    get C775() {
      return C775 = dart.constList(["1-й квартал", "2-й квартал", "3-й квартал", "4-й квартал"], dart.dynamic);
    },
    get C776() {
      return C776 = dart.constList(["EEEE, d MMMM y 'г'.", "d MMMM y 'г'.", "d MMM y 'г'.", "dd.MM.y"], dart.dynamic);
    },
    get C765() {
      return C765 = dart.constMap(core.String, dart.dynamic, ["NAME", "ru", "ERAS", C766 || CT.C766, "ERANAMES", C767 || CT.C767, "NARROWMONTHS", C540 || CT.C540, "STANDALONENARROWMONTHS", C540 || CT.C540, "MONTHS", C768 || CT.C768, "STANDALONEMONTHS", C541 || CT.C541, "SHORTMONTHS", C769 || CT.C769, "STANDALONESHORTMONTHS", C770 || CT.C770, "WEEKDAYS", C771 || CT.C771, "STANDALONEWEEKDAYS", C771 || CT.C771, "SHORTWEEKDAYS", C772 || CT.C772, "STANDALONESHORTWEEKDAYS", C772 || CT.C772, "NARROWWEEKDAYS", C772 || CT.C772, "STANDALONENARROWWEEKDAYS", C773 || CT.C773, "SHORTQUARTERS", C774 || CT.C774, "QUARTERS", C775 || CT.C775, "AMPMS", C71 || CT.C71, "DATEFORMATS", C776 || CT.C776, "TIMEFORMATS", C147 || CT.C147, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C103 || CT.C103]);
    },
    get C778() {
      return C778 = dart.constList(["ක්‍රි.පූ.", "ක්‍රි.ව."], dart.dynamic);
    },
    get C779() {
      return C779 = dart.constList(["ක්‍රිස්තු පූර්ව", "ක්‍රිස්තු වර්ෂ"], dart.dynamic);
    },
    get C780() {
      return C780 = dart.constList(["ජ", "පෙ", "මා", "අ", "මැ", "ජූ", "ජූ", "අ", "සැ", "ඔ", "නෙ", "දෙ"], dart.dynamic);
    },
    get C781() {
      return C781 = dart.constList(["ජනවාරි", "පෙබරවාරි", "මාර්තු", "අප්‍රේල්", "මැයි", "ජූනි", "ජූලි", "අගෝස්තු", "සැප්තැම්බර්", "ඔක්තෝබර්", "නොවැම්බර්", "දෙසැම්බර්"], dart.dynamic);
    },
    get C782() {
      return C782 = dart.constList(["ජන", "පෙබ", "මාර්තු", "අප්‍රේල්", "මැයි", "ජූනි", "ජූලි", "අගෝ", "සැප්", "ඔක්", "නොවැ", "දෙසැ"], dart.dynamic);
    },
    get C783() {
      return C783 = dart.constList(["ජන", "පෙබ", "මාර්", "අප්‍රේල්", "මැයි", "ජූනි", "ජූලි", "අගෝ", "සැප්", "ඔක්", "නොවැ", "දෙසැ"], dart.dynamic);
    },
    get C784() {
      return C784 = dart.constList(["ඉරිදා", "සඳුදා", "අඟහරුවාදා", "බදාදා", "බ්‍රහස්පතින්දා", "සිකුරාදා", "සෙනසුරාදා"], dart.dynamic);
    },
    get C785() {
      return C785 = dart.constList(["ඉරිදා", "සඳුදා", "අඟහ", "බදාදා", "බ්‍රහස්", "සිකු", "සෙන"], dart.dynamic);
    },
    get C786() {
      return C786 = dart.constList(["ඉ", "ස", "අ", "බ", "බ්‍ර", "සි", "සෙ"], dart.dynamic);
    },
    get C787() {
      return C787 = dart.constList(["කාර්:1", "කාර්:2", "කාර්:3", "කාර්:4"], dart.dynamic);
    },
    get C788() {
      return C788 = dart.constList(["1 වන කාර්තුව", "2 වන කාර්තුව", "3 වන කාර්තුව", "4 වන කාර්තුව"], dart.dynamic);
    },
    get C789() {
      return C789 = dart.constList(["පෙ.ව.", "ප.ව."], dart.dynamic);
    },
    get C790() {
      return C790 = dart.constList(["y MMMM d, EEEE", "y MMMM d", "y MMM d", "y-MM-dd"], dart.dynamic);
    },
    get C777() {
      return C777 = dart.constMap(core.String, dart.dynamic, ["NAME", "si", "ERAS", C778 || CT.C778, "ERANAMES", C779 || CT.C779, "NARROWMONTHS", C780 || CT.C780, "STANDALONENARROWMONTHS", C780 || CT.C780, "MONTHS", C781 || CT.C781, "STANDALONEMONTHS", C781 || CT.C781, "SHORTMONTHS", C782 || CT.C782, "STANDALONESHORTMONTHS", C783 || CT.C783, "WEEKDAYS", C784 || CT.C784, "STANDALONEWEEKDAYS", C784 || CT.C784, "SHORTWEEKDAYS", C785 || CT.C785, "STANDALONESHORTWEEKDAYS", C785 || CT.C785, "NARROWWEEKDAYS", C786 || CT.C786, "STANDALONENARROWWEEKDAYS", C786 || CT.C786, "SHORTQUARTERS", C787 || CT.C787, "QUARTERS", C788 || CT.C788, "AMPMS", C789 || CT.C789, "DATEFORMATS", C790 || CT.C790, "TIMEFORMATS", C172 || CT.C172, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 6, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C792() {
      return C792 = dart.constList(["pred Kr.", "po Kr."], dart.dynamic);
    },
    get C793() {
      return C793 = dart.constList(["pred Kristom", "po Kristovi"], dart.dynamic);
    },
    get C794() {
      return C794 = dart.constList(["januára", "februára", "marca", "apríla", "mája", "júna", "júla", "augusta", "septembra", "októbra", "novembra", "decembra"], dart.dynamic);
    },
    get C795() {
      return C795 = dart.constList(["január", "február", "marec", "apríl", "máj", "jún", "júl", "august", "september", "október", "november", "december"], dart.dynamic);
    },
    get C796() {
      return C796 = dart.constList(["jan", "feb", "mar", "apr", "máj", "jún", "júl", "aug", "sep", "okt", "nov", "dec"], dart.dynamic);
    },
    get C797() {
      return C797 = dart.constList(["nedeľa", "pondelok", "utorok", "streda", "štvrtok", "piatok", "sobota"], dart.dynamic);
    },
    get C798() {
      return C798 = dart.constList(["ne", "po", "ut", "st", "št", "pi", "so"], dart.dynamic);
    },
    get C799() {
      return C799 = dart.constList(["n", "p", "u", "s", "š", "p", "s"], dart.dynamic);
    },
    get C800() {
      return C800 = dart.constList(["1. štvrťrok", "2. štvrťrok", "3. štvrťrok", "4. štvrťrok"], dart.dynamic);
    },
    get C801() {
      return C801 = dart.constList(["EEEE d. MMMM y", "d. MMMM y", "d. M. y", "d. M. y"], dart.dynamic);
    },
    get C802() {
      return C802 = dart.constList(["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1} {0}"], dart.dynamic);
    },
    get C791() {
      return C791 = dart.constMap(core.String, dart.dynamic, ["NAME", "sk", "ERAS", C792 || CT.C792, "ERANAMES", C793 || CT.C793, "NARROWMONTHS", C120 || CT.C120, "STANDALONENARROWMONTHS", C120 || CT.C120, "MONTHS", C794 || CT.C794, "STANDALONEMONTHS", C795 || CT.C795, "SHORTMONTHS", C796 || CT.C796, "STANDALONESHORTMONTHS", C796 || CT.C796, "WEEKDAYS", C797 || CT.C797, "STANDALONEWEEKDAYS", C797 || CT.C797, "SHORTWEEKDAYS", C798 || CT.C798, "STANDALONESHORTWEEKDAYS", C798 || CT.C798, "NARROWWEEKDAYS", C799 || CT.C799, "STANDALONENARROWWEEKDAYS", C799 || CT.C799, "SHORTQUARTERS", C114 || CT.C114, "QUARTERS", C800 || CT.C800, "AMPMS", C71 || CT.C71, "DATEFORMATS", C801 || CT.C801, "TIMEFORMATS", C147 || CT.C147, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C802 || CT.C802]);
    },
    get C804() {
      return C804 = dart.constList(["pred Kristusom", "po Kristusu"], dart.dynamic);
    },
    get C805() {
      return C805 = dart.constList(["januar", "februar", "marec", "april", "maj", "junij", "julij", "avgust", "september", "oktober", "november", "december"], dart.dynamic);
    },
    get C806() {
      return C806 = dart.constList(["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "avg.", "sep.", "okt.", "nov.", "dec."], dart.dynamic);
    },
    get C807() {
      return C807 = dart.constList(["nedelja", "ponedeljek", "torek", "sreda", "četrtek", "petek", "sobota"], dart.dynamic);
    },
    get C808() {
      return C808 = dart.constList(["ned.", "pon.", "tor.", "sre.", "čet.", "pet.", "sob."], dart.dynamic);
    },
    get C809() {
      return C809 = dart.constList(["n", "p", "t", "s", "č", "p", "s"], dart.dynamic);
    },
    get C810() {
      return C810 = dart.constList(["1. čet.", "2. čet.", "3. čet.", "4. čet."], dart.dynamic);
    },
    get C811() {
      return C811 = dart.constList(["1. četrtletje", "2. četrtletje", "3. četrtletje", "4. četrtletje"], dart.dynamic);
    },
    get C812() {
      return C812 = dart.constList(["dop.", "pop."], dart.dynamic);
    },
    get C813() {
      return C813 = dart.constList(["EEEE, dd. MMMM y", "dd. MMMM y", "d. MMM y", "d. MM. yy"], dart.dynamic);
    },
    get C803() {
      return C803 = dart.constMap(core.String, dart.dynamic, ["NAME", "sl", "ERAS", C566 || CT.C566, "ERANAMES", C804 || CT.C804, "NARROWMONTHS", C120 || CT.C120, "STANDALONENARROWMONTHS", C120 || CT.C120, "MONTHS", C805 || CT.C805, "STANDALONEMONTHS", C805 || CT.C805, "SHORTMONTHS", C806 || CT.C806, "STANDALONESHORTMONTHS", C806 || CT.C806, "WEEKDAYS", C807 || CT.C807, "STANDALONEWEEKDAYS", C807 || CT.C807, "SHORTWEEKDAYS", C808 || CT.C808, "STANDALONESHORTWEEKDAYS", C808 || CT.C808, "NARROWWEEKDAYS", C809 || CT.C809, "STANDALONENARROWWEEKDAYS", C809 || CT.C809, "SHORTQUARTERS", C810 || CT.C810, "QUARTERS", C811 || CT.C811, "AMPMS", C812 || CT.C812, "DATEFORMATS", C813 || CT.C813, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 6, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C815() {
      return C815 = dart.constList(["p.K.", "mb.K."], dart.dynamic);
    },
    get C816() {
      return C816 = dart.constList(["para Krishtit", "mbas Krishtit"], dart.dynamic);
    },
    get C817() {
      return C817 = dart.constList(["j", "sh", "m", "p", "m", "q", "k", "g", "sh", "t", "n", "dh"], dart.dynamic);
    },
    get C818() {
      return C818 = dart.constList(["J", "Sh", "M", "P", "M", "Q", "K", "G", "Sh", "T", "N", "Dh"], dart.dynamic);
    },
    get C819() {
      return C819 = dart.constList(["janar", "shkurt", "mars", "prill", "maj", "qershor", "korrik", "gusht", "shtator", "tetor", "nëntor", "dhjetor"], dart.dynamic);
    },
    get C820() {
      return C820 = dart.constList(["Janar", "Shkurt", "Mars", "Prill", "Maj", "Qershor", "Korrik", "Gusht", "Shtator", "Tetor", "Nëntor", "Dhjetor"], dart.dynamic);
    },
    get C821() {
      return C821 = dart.constList(["jan", "shk", "mar", "pri", "maj", "qer", "korr", "gush", "sht", "tet", "nën", "dhj"], dart.dynamic);
    },
    get C822() {
      return C822 = dart.constList(["Jan", "Shk", "Mar", "Pri", "Maj", "Qer", "Korr", "Gush", "Sht", "Tet", "Nën", "Dhj"], dart.dynamic);
    },
    get C823() {
      return C823 = dart.constList(["e diel", "e hënë", "e martë", "e mërkurë", "e enjte", "e premte", "e shtunë"], dart.dynamic);
    },
    get C824() {
      return C824 = dart.constList(["E diel", "E hënë", "E martë", "E mërkurë", "E enjte", "E premte", "E shtunë"], dart.dynamic);
    },
    get C825() {
      return C825 = dart.constList(["Die", "Hën", "Mar", "Mër", "Enj", "Pre", "Sht"], dart.dynamic);
    },
    get C826() {
      return C826 = dart.constList(["D", "H", "M", "M", "E", "P", "Sh"], dart.dynamic);
    },
    get C827() {
      return C827 = dart.constList(["tremujori I", "tremujori II", "tremujori III", "tremujori IV"], dart.dynamic);
    },
    get C828() {
      return C828 = dart.constList(["tremujori i parë", "tremujori i dytë", "tremujori i tretë", "tremujori i katërt"], dart.dynamic);
    },
    get C829() {
      return C829 = dart.constList(["e paradites", "e pasdites"], dart.dynamic);
    },
    get C830() {
      return C830 = dart.constList(["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d.M.yy"], dart.dynamic);
    },
    get C831() {
      return C831 = dart.constList(["h:mm:ss a, zzzz", "h:mm:ss a, z", "h:mm:ss a", "h:mm a"], dart.dynamic);
    },
    get C832() {
      return C832 = dart.constList(["{1} 'në' {0}", "{1} 'në' {0}", "{1}, {0}", "{1}, {0}"], dart.dynamic);
    },
    get C814() {
      return C814 = dart.constMap(core.String, dart.dynamic, ["NAME", "sq", "ERAS", C815 || CT.C815, "ERANAMES", C816 || CT.C816, "NARROWMONTHS", C817 || CT.C817, "STANDALONENARROWMONTHS", C818 || CT.C818, "MONTHS", C819 || CT.C819, "STANDALONEMONTHS", C820 || CT.C820, "SHORTMONTHS", C821 || CT.C821, "STANDALONESHORTMONTHS", C822 || CT.C822, "WEEKDAYS", C823 || CT.C823, "STANDALONEWEEKDAYS", C824 || CT.C824, "SHORTWEEKDAYS", C825 || CT.C825, "STANDALONESHORTWEEKDAYS", C825 || CT.C825, "NARROWWEEKDAYS", C826 || CT.C826, "STANDALONENARROWWEEKDAYS", C826 || CT.C826, "SHORTQUARTERS", C827 || CT.C827, "QUARTERS", C828 || CT.C828, "AMPMS", C829 || CT.C829, "DATEFORMATS", C830 || CT.C830, "TIMEFORMATS", C831 || CT.C831, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 6, "DATETIMEFORMATS", C832 || CT.C832]);
    },
    get C834() {
      return C834 = dart.constList(["п. н. е.", "н. е."], dart.dynamic);
    },
    get C835() {
      return C835 = dart.constList(["пре нове ере", "нове ере"], dart.dynamic);
    },
    get C836() {
      return C836 = dart.constList(["јануар", "фебруар", "март", "април", "мај", "јун", "јул", "август", "септембар", "октобар", "новембар", "децембар"], dart.dynamic);
    },
    get C837() {
      return C837 = dart.constList(["јан", "феб", "мар", "апр", "мај", "јун", "јул", "авг", "сеп", "окт", "нов", "дец"], dart.dynamic);
    },
    get C838() {
      return C838 = dart.constList(["недеља", "понедељак", "уторак", "среда", "четвртак", "петак", "субота"], dart.dynamic);
    },
    get C839() {
      return C839 = dart.constList(["нед", "пон", "уто", "сре", "чет", "пет", "суб"], dart.dynamic);
    },
    get C840() {
      return C840 = dart.constList(["н", "п", "у", "с", "ч", "п", "с"], dart.dynamic);
    },
    get C841() {
      return C841 = dart.constList(["К1", "К2", "К3", "К4"], dart.dynamic);
    },
    get C842() {
      return C842 = dart.constList(["први квартал", "други квартал", "трећи квартал", "четврти квартал"], dart.dynamic);
    },
    get C843() {
      return C843 = dart.constList(["пре подне", "по подне"], dart.dynamic);
    },
    get C844() {
      return C844 = dart.constList(["EEEE, dd. MMMM y.", "dd. MMMM y.", "dd.MM.y.", "d.M.yy."], dart.dynamic);
    },
    get C833() {
      return C833 = dart.constMap(core.String, dart.dynamic, ["NAME", "sr", "ERAS", C834 || CT.C834, "ERANAMES", C835 || CT.C835, "NARROWMONTHS", C596 || CT.C596, "STANDALONENARROWMONTHS", C596 || CT.C596, "MONTHS", C836 || CT.C836, "STANDALONEMONTHS", C836 || CT.C836, "SHORTMONTHS", C837 || CT.C837, "STANDALONESHORTMONTHS", C837 || CT.C837, "WEEKDAYS", C838 || CT.C838, "STANDALONEWEEKDAYS", C838 || CT.C838, "SHORTWEEKDAYS", C839 || CT.C839, "STANDALONESHORTWEEKDAYS", C839 || CT.C839, "NARROWWEEKDAYS", C840 || CT.C840, "STANDALONENARROWWEEKDAYS", C840 || CT.C840, "SHORTQUARTERS", C841 || CT.C841, "QUARTERS", C842 || CT.C842, "AMPMS", C843 || CT.C843, "DATEFORMATS", C844 || CT.C844, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 6, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C846() {
      return C846 = dart.constList(["pre nove ere", "nove ere"], dart.dynamic);
    },
    get C847() {
      return C847 = dart.constList(["januar", "februar", "mart", "april", "maj", "jun", "jul", "avgust", "septembar", "oktobar", "novembar", "decembar"], dart.dynamic);
    },
    get C848() {
      return C848 = dart.constList(["nedelja", "ponedeljak", "utorak", "sreda", "četvrtak", "petak", "subota"], dart.dynamic);
    },
    get C849() {
      return C849 = dart.constList(["ned", "pon", "uto", "sre", "čet", "pet", "sub"], dart.dynamic);
    },
    get C850() {
      return C850 = dart.constList(["prvi kvartal", "drugi kvartal", "treći kvartal", "četvrti kvartal"], dart.dynamic);
    },
    get C851() {
      return C851 = dart.constList(["pre podne", "po podne"], dart.dynamic);
    },
    get C845() {
      return C845 = dart.constMap(core.String, dart.dynamic, ["NAME", "sr_Latn", "ERAS", C118 || CT.C118, "ERANAMES", C846 || CT.C846, "NARROWMONTHS", C120 || CT.C120, "STANDALONENARROWMONTHS", C120 || CT.C120, "MONTHS", C847 || CT.C847, "STANDALONEMONTHS", C847 || CT.C847, "SHORTMONTHS", C122 || CT.C122, "STANDALONESHORTMONTHS", C122 || CT.C122, "WEEKDAYS", C848 || CT.C848, "STANDALONEWEEKDAYS", C848 || CT.C848, "SHORTWEEKDAYS", C849 || CT.C849, "STANDALONESHORTWEEKDAYS", C849 || CT.C849, "NARROWWEEKDAYS", C126 || CT.C126, "STANDALONENARROWWEEKDAYS", C126 || CT.C126, "SHORTQUARTERS", C27 || CT.C27, "QUARTERS", C850 || CT.C850, "AMPMS", C851 || CT.C851, "DATEFORMATS", C844 || CT.C844, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 6, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C853() {
      return C853 = dart.constList(["före Kristus", "efter Kristus"], dart.dynamic);
    },
    get C854() {
      return C854 = dart.constList(["januari", "februari", "mars", "april", "maj", "juni", "juli", "augusti", "september", "oktober", "november", "december"], dart.dynamic);
    },
    get C855() {
      return C855 = dart.constList(["jan.", "feb.", "mars", "apr.", "maj", "juni", "juli", "aug.", "sep.", "okt.", "nov.", "dec."], dart.dynamic);
    },
    get C856() {
      return C856 = dart.constList(["söndag", "måndag", "tisdag", "onsdag", "torsdag", "fredag", "lördag"], dart.dynamic);
    },
    get C857() {
      return C857 = dart.constList(["sön", "mån", "tis", "ons", "tors", "fre", "lör"], dart.dynamic);
    },
    get C858() {
      return C858 = dart.constList(["1:a kvartalet", "2:a kvartalet", "3:e kvartalet", "4:e kvartalet"], dart.dynamic);
    },
    get C859() {
      return C859 = dart.constList(["fm", "em"], dart.dynamic);
    },
    get C860() {
      return C860 = dart.constList(["EEEE d MMMM y", "d MMMM y", "d MMM y", "y-MM-dd"], dart.dynamic);
    },
    get C861() {
      return C861 = dart.constList(["'kl'. HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], dart.dynamic);
    },
    get C852() {
      return C852 = dart.constMap(core.String, dart.dynamic, ["NAME", "sv", "ERAS", C162 || CT.C162, "ERANAMES", C853 || CT.C853, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C854 || CT.C854, "STANDALONEMONTHS", C854 || CT.C854, "SHORTMONTHS", C855 || CT.C855, "STANDALONESHORTMONTHS", C855 || CT.C855, "WEEKDAYS", C856 || CT.C856, "STANDALONEWEEKDAYS", C856 || CT.C856, "SHORTWEEKDAYS", C857 || CT.C857, "STANDALONESHORTWEEKDAYS", C857 || CT.C857, "NARROWWEEKDAYS", C168 || CT.C168, "STANDALONENARROWWEEKDAYS", C168 || CT.C168, "SHORTQUARTERS", C27 || CT.C27, "QUARTERS", C858 || CT.C858, "AMPMS", C859 || CT.C859, "DATEFORMATS", C860 || CT.C860, "TIMEFORMATS", C861 || CT.C861, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 3, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C863() {
      return C863 = dart.constList(["KK", "BK"], dart.dynamic);
    },
    get C864() {
      return C864 = dart.constList(["Kabla ya Kristo", "Baada ya Kristo"], dart.dynamic);
    },
    get C865() {
      return C865 = dart.constList(["Januari", "Februari", "Machi", "Aprili", "Mei", "Juni", "Julai", "Agosti", "Septemba", "Oktoba", "Novemba", "Desemba"], dart.dynamic);
    },
    get C866() {
      return C866 = dart.constList(["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ago", "Sep", "Okt", "Nov", "Des"], dart.dynamic);
    },
    get C867() {
      return C867 = dart.constList(["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], dart.dynamic);
    },
    get C868() {
      return C868 = dart.constList(["Robo ya 1", "Robo ya 2", "Robo ya 3", "Robo ya 4"], dart.dynamic);
    },
    get C862() {
      return C862 = dart.constMap(core.String, dart.dynamic, ["NAME", "sw", "ERAS", C863 || CT.C863, "ERANAMES", C864 || CT.C864, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C865 || CT.C865, "STANDALONEMONTHS", C865 || CT.C865, "SHORTMONTHS", C866 || CT.C866, "STANDALONESHORTMONTHS", C866 || CT.C866, "WEEKDAYS", C867 || CT.C867, "STANDALONEWEEKDAYS", C867 || CT.C867, "SHORTWEEKDAYS", C867 || CT.C867, "STANDALONESHORTWEEKDAYS", C867 || CT.C867, "NARROWWEEKDAYS", C211 || CT.C211, "STANDALONENARROWWEEKDAYS", C211 || CT.C211, "SHORTQUARTERS", C868 || CT.C868, "QUARTERS", C868 || CT.C868, "AMPMS", C71 || CT.C71, "DATEFORMATS", C224 || CT.C224, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 6, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C870() {
      return C870 = dart.constList(["கி.மு.", "கி.பி."], dart.dynamic);
    },
    get C871() {
      return C871 = dart.constList(["கிறிஸ்துவுக்கு முன்", "அன்னோ டோமினி"], dart.dynamic);
    },
    get C872() {
      return C872 = dart.constList(["ஜ", "பி", "மா", "ஏ", "மே", "ஜூ", "ஜூ", "ஆ", "செ", "அ", "ந", "டி"], dart.dynamic);
    },
    get C873() {
      return C873 = dart.constList(["ஜனவரி", "பிப்ரவரி", "மார்ச்", "ஏப்ரல்", "மே", "ஜூன்", "ஜூலை", "ஆகஸ்ட்", "செப்டம்பர்", "அக்டோபர்", "நவம்பர்", "டிசம்பர்"], dart.dynamic);
    },
    get C874() {
      return C874 = dart.constList(["ஜன.", "பிப்.", "மார்.", "ஏப்.", "மே", "ஜூன்", "ஜூலை", "ஆக.", "செப்.", "அக்.", "நவ.", "டிச."], dart.dynamic);
    },
    get C875() {
      return C875 = dart.constList(["ஞாயிறு", "திங்கள்", "செவ்வாய்", "புதன்", "வியாழன்", "வெள்ளி", "சனி"], dart.dynamic);
    },
    get C876() {
      return C876 = dart.constList(["ஞாயி.", "திங்.", "செவ்.", "புத.", "வியா.", "வெள்.", "சனி"], dart.dynamic);
    },
    get C877() {
      return C877 = dart.constList(["ஞா", "தி", "செ", "பு", "வி", "வெ", "ச"], dart.dynamic);
    },
    get C878() {
      return C878 = dart.constList(["காலா.1", "காலா.2", "காலா.3", "காலா.4"], dart.dynamic);
    },
    get C879() {
      return C879 = dart.constList(["ஒன்றாம் காலாண்டு", "இரண்டாம் காலாண்டு", "மூன்றாம் காலாண்டு", "நான்காம் காலாண்டு"], dart.dynamic);
    },
    get C880() {
      return C880 = dart.constList(["முற்பகல்", "பிற்பகல்"], dart.dynamic);
    },
    get C881() {
      return C881 = dart.constList(["a h:mm:ss zzzz", "a h:mm:ss z", "a h:mm:ss", "a h:mm"], dart.dynamic);
    },
    get C882() {
      return C882 = dart.constList(["{1} ’அன்று’ {0}", "{1} ’அன்று’ {0}", "{1}, {0}", "{1}, {0}"], dart.dynamic);
    },
    get C869() {
      return C869 = dart.constMap(core.String, dart.dynamic, ["NAME", "ta", "ERAS", C870 || CT.C870, "ERANAMES", C871 || CT.C871, "NARROWMONTHS", C872 || CT.C872, "STANDALONENARROWMONTHS", C872 || CT.C872, "MONTHS", C873 || CT.C873, "STANDALONEMONTHS", C873 || CT.C873, "SHORTMONTHS", C874 || CT.C874, "STANDALONESHORTMONTHS", C874 || CT.C874, "WEEKDAYS", C875 || CT.C875, "STANDALONEWEEKDAYS", C875 || CT.C875, "SHORTWEEKDAYS", C876 || CT.C876, "STANDALONESHORTWEEKDAYS", C876 || CT.C876, "NARROWWEEKDAYS", C877 || CT.C877, "STANDALONENARROWWEEKDAYS", C877 || CT.C877, "SHORTQUARTERS", C878 || CT.C878, "QUARTERS", C879 || CT.C879, "AMPMS", C880 || CT.C880, "DATEFORMATS", C116 || CT.C116, "TIMEFORMATS", C881 || CT.C881, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C229 || CT.C229, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C882 || CT.C882]);
    },
    get C884() {
      return C884 = dart.constList(["క్రీపూ", "క్రీశ"], dart.dynamic);
    },
    get C885() {
      return C885 = dart.constList(["క్రీస్తు పూర్వం", "క్రీస్తు శకం"], dart.dynamic);
    },
    get C886() {
      return C886 = dart.constList(["జ", "ఫి", "మా", "ఏ", "మే", "జూ", "జు", "ఆ", "సె", "అ", "న", "డి"], dart.dynamic);
    },
    get C887() {
      return C887 = dart.constList(["జనవరి", "ఫిబ్రవరి", "మార్చి", "ఏప్రిల్", "మే", "జూన్", "జులై", "ఆగస్టు", "సెప్టెంబర్", "అక్టోబర్", "నవంబర్", "డిసెంబర్"], dart.dynamic);
    },
    get C888() {
      return C888 = dart.constList(["జన", "ఫిబ్ర", "మార్చి", "ఏప్రి", "మే", "జూన్", "జులై", "ఆగ", "సెప్టెం", "అక్టో", "నవం", "డిసెం"], dart.dynamic);
    },
    get C889() {
      return C889 = dart.constList(["ఆదివారం", "సోమవారం", "మంగళవారం", "బుధవారం", "గురువారం", "శుక్రవారం", "శనివారం"], dart.dynamic);
    },
    get C890() {
      return C890 = dart.constList(["ఆది", "సోమ", "మంగళ", "బుధ", "గురు", "శుక్ర", "శని"], dart.dynamic);
    },
    get C891() {
      return C891 = dart.constList(["ఆ", "సో", "మ", "బు", "గు", "శు", "శ"], dart.dynamic);
    },
    get C892() {
      return C892 = dart.constList(["త్రై1", "త్రై2", "త్రై3", "త్రై4"], dart.dynamic);
    },
    get C893() {
      return C893 = dart.constList(["1వ త్రైమాసికం", "2వ త్రైమాసికం", "3వ త్రైమాసికం", "4వ త్రైమాసికం"], dart.dynamic);
    },
    get C894() {
      return C894 = dart.constList(["d, MMMM y, EEEE", "d MMMM, y", "d MMM, y", "dd-MM-yy"], dart.dynamic);
    },
    get C895() {
      return C895 = dart.constList(["{1} {0}కి", "{1} {0}కి", "{1} {0}", "{1} {0}"], dart.dynamic);
    },
    get C883() {
      return C883 = dart.constMap(core.String, dart.dynamic, ["NAME", "te", "ERAS", C884 || CT.C884, "ERANAMES", C885 || CT.C885, "NARROWMONTHS", C886 || CT.C886, "STANDALONENARROWMONTHS", C886 || CT.C886, "MONTHS", C887 || CT.C887, "STANDALONEMONTHS", C887 || CT.C887, "SHORTMONTHS", C888 || CT.C888, "STANDALONESHORTMONTHS", C888 || CT.C888, "WEEKDAYS", C889 || CT.C889, "STANDALONEWEEKDAYS", C889 || CT.C889, "SHORTWEEKDAYS", C890 || CT.C890, "STANDALONESHORTWEEKDAYS", C890 || CT.C890, "NARROWWEEKDAYS", C891 || CT.C891, "STANDALONENARROWWEEKDAYS", C891 || CT.C891, "SHORTQUARTERS", C892 || CT.C892, "QUARTERS", C893 || CT.C893, "AMPMS", C71 || CT.C71, "DATEFORMATS", C894 || CT.C894, "TIMEFORMATS", C47 || CT.C47, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C229 || CT.C229, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C895 || CT.C895]);
    },
    get C897() {
      return C897 = dart.constList(["ปีก่อน ค.ศ.", "ค.ศ."], dart.dynamic);
    },
    get C898() {
      return C898 = dart.constList(["ปีก่อนคริสต์ศักราช", "คริสต์ศักราช"], dart.dynamic);
    },
    get C899() {
      return C899 = dart.constList(["ม.ค.", "ก.พ.", "มี.ค.", "เม.ย.", "พ.ค.", "มิ.ย.", "ก.ค.", "ส.ค.", "ก.ย.", "ต.ค.", "พ.ย.", "ธ.ค."], dart.dynamic);
    },
    get C900() {
      return C900 = dart.constList(["มกราคม", "กุมภาพันธ์", "มีนาคม", "เมษายน", "พฤษภาคม", "มิถุนายน", "กรกฎาคม", "สิงหาคม", "กันยายน", "ตุลาคม", "พฤศจิกายน", "ธันวาคม"], dart.dynamic);
    },
    get C901() {
      return C901 = dart.constList(["วันอาทิตย์", "วันจันทร์", "วันอังคาร", "วันพุธ", "วันพฤหัสบดี", "วันศุกร์", "วันเสาร์"], dart.dynamic);
    },
    get C902() {
      return C902 = dart.constList(["อา.", "จ.", "อ.", "พ.", "พฤ.", "ศ.", "ส."], dart.dynamic);
    },
    get C903() {
      return C903 = dart.constList(["อา", "จ", "อ", "พ", "พฤ", "ศ", "ส"], dart.dynamic);
    },
    get C904() {
      return C904 = dart.constList(["ไตรมาส 1", "ไตรมาส 2", "ไตรมาส 3", "ไตรมาส 4"], dart.dynamic);
    },
    get C905() {
      return C905 = dart.constList(["ก่อนเที่ยง", "หลังเที่ยง"], dart.dynamic);
    },
    get C906() {
      return C906 = dart.constList(["EEEEที่ d MMMM G y", "d MMMM G y", "d MMM y", "d/M/yy"], dart.dynamic);
    },
    get C907() {
      return C907 = dart.constList(["H นาฬิกา mm นาที ss วินาที zzzz", "H นาฬิกา mm นาที ss วินาที z", "HH:mm:ss", "HH:mm"], dart.dynamic);
    },
    get C896() {
      return C896 = dart.constMap(core.String, dart.dynamic, ["NAME", "th", "ERAS", C897 || CT.C897, "ERANAMES", C898 || CT.C898, "NARROWMONTHS", C899 || CT.C899, "STANDALONENARROWMONTHS", C899 || CT.C899, "MONTHS", C900 || CT.C900, "STANDALONEMONTHS", C900 || CT.C900, "SHORTMONTHS", C899 || CT.C899, "STANDALONESHORTMONTHS", C899 || CT.C899, "WEEKDAYS", C901 || CT.C901, "STANDALONEWEEKDAYS", C901 || CT.C901, "SHORTWEEKDAYS", C902 || CT.C902, "STANDALONESHORTWEEKDAYS", C902 || CT.C902, "NARROWWEEKDAYS", C903 || CT.C903, "STANDALONENARROWWEEKDAYS", C903 || CT.C903, "SHORTQUARTERS", C904 || CT.C904, "QUARTERS", C904 || CT.C904, "AMPMS", C905 || CT.C905, "DATEFORMATS", C906 || CT.C906, "TIMEFORMATS", C907 || CT.C907, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C908() {
      return C908 = dart.constMap(core.String, dart.dynamic, ["NAME", "tl", "ERAS", C205 || CT.C205, "ERANAMES", C206 || CT.C206, "NARROWMONTHS", C317 || CT.C317, "STANDALONENARROWMONTHS", C318 || CT.C318, "MONTHS", C319 || CT.C319, "STANDALONEMONTHS", C319 || CT.C319, "SHORTMONTHS", C317 || CT.C317, "STANDALONESHORTMONTHS", C317 || CT.C317, "WEEKDAYS", C320 || CT.C320, "STANDALONEWEEKDAYS", C320 || CT.C320, "SHORTWEEKDAYS", C321 || CT.C321, "STANDALONESHORTWEEKDAYS", C321 || CT.C321, "NARROWWEEKDAYS", C321 || CT.C321, "STANDALONENARROWWEEKDAYS", C321 || CT.C321, "SHORTQUARTERS", C114 || CT.C114, "QUARTERS", C322 || CT.C322, "AMPMS", C71 || CT.C71, "DATEFORMATS", C213 || CT.C213, "TIMEFORMATS", C47 || CT.C47, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C323 || CT.C323]);
    },
    get C910() {
      return C910 = dart.constList(["MÖ", "MS"], dart.dynamic);
    },
    get C911() {
      return C911 = dart.constList(["Milattan Önce", "Milattan Sonra"], dart.dynamic);
    },
    get C912() {
      return C912 = dart.constList(["O", "Ş", "M", "N", "M", "H", "T", "A", "E", "E", "K", "A"], dart.dynamic);
    },
    get C913() {
      return C913 = dart.constList(["Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"], dart.dynamic);
    },
    get C914() {
      return C914 = dart.constList(["Oca", "Şub", "Mar", "Nis", "May", "Haz", "Tem", "Ağu", "Eyl", "Eki", "Kas", "Ara"], dart.dynamic);
    },
    get C915() {
      return C915 = dart.constList(["Pazar", "Pazartesi", "Salı", "Çarşamba", "Perşembe", "Cuma", "Cumartesi"], dart.dynamic);
    },
    get C916() {
      return C916 = dart.constList(["Paz", "Pzt", "Sal", "Çar", "Per", "Cum", "Cmt"], dart.dynamic);
    },
    get C917() {
      return C917 = dart.constList(["P", "P", "S", "Ç", "P", "C", "C"], dart.dynamic);
    },
    get C918() {
      return C918 = dart.constList(["Ç1", "Ç2", "Ç3", "Ç4"], dart.dynamic);
    },
    get C919() {
      return C919 = dart.constList(["1. çeyrek", "2. çeyrek", "3. çeyrek", "4. çeyrek"], dart.dynamic);
    },
    get C920() {
      return C920 = dart.constList(["ÖÖ", "ÖS"], dart.dynamic);
    },
    get C921() {
      return C921 = dart.constList(["d MMMM y EEEE", "d MMMM y", "d MMM y", "d.MM.y"], dart.dynamic);
    },
    get C909() {
      return C909 = dart.constMap(core.String, dart.dynamic, ["NAME", "tr", "ERAS", C910 || CT.C910, "ERANAMES", C911 || CT.C911, "NARROWMONTHS", C912 || CT.C912, "STANDALONENARROWMONTHS", C912 || CT.C912, "MONTHS", C913 || CT.C913, "STANDALONEMONTHS", C913 || CT.C913, "SHORTMONTHS", C914 || CT.C914, "STANDALONESHORTMONTHS", C914 || CT.C914, "WEEKDAYS", C915 || CT.C915, "STANDALONEWEEKDAYS", C915 || CT.C915, "SHORTWEEKDAYS", C916 || CT.C916, "STANDALONESHORTWEEKDAYS", C916 || CT.C916, "NARROWWEEKDAYS", C917 || CT.C917, "STANDALONENARROWWEEKDAYS", C917 || CT.C917, "SHORTQUARTERS", C918 || CT.C918, "QUARTERS", C919 || CT.C919, "AMPMS", C920 || CT.C920, "DATEFORMATS", C921 || CT.C921, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 6, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C923() {
      return C923 = dart.constList(["до н. е.", "н. е."], dart.dynamic);
    },
    get C924() {
      return C924 = dart.constList(["до нашої ери", "нашої ери"], dart.dynamic);
    },
    get C925() {
      return C925 = dart.constList(["с", "л", "б", "к", "т", "ч", "л", "с", "в", "ж", "л", "г"], dart.dynamic);
    },
    get C926() {
      return C926 = dart.constList(["С", "Л", "Б", "К", "Т", "Ч", "Л", "С", "В", "Ж", "Л", "Г"], dart.dynamic);
    },
    get C927() {
      return C927 = dart.constList(["січня", "лютого", "березня", "квітня", "травня", "червня", "липня", "серпня", "вересня", "жовтня", "листопада", "грудня"], dart.dynamic);
    },
    get C928() {
      return C928 = dart.constList(["січень", "лютий", "березень", "квітень", "травень", "червень", "липень", "серпень", "вересень", "жовтень", "листопад", "грудень"], dart.dynamic);
    },
    get C929() {
      return C929 = dart.constList(["січ.", "лют.", "бер.", "квіт.", "трав.", "черв.", "лип.", "серп.", "вер.", "жовт.", "лист.", "груд."], dart.dynamic);
    },
    get C930() {
      return C930 = dart.constList(["січ", "лют", "бер", "кві", "тра", "чер", "лип", "сер", "вер", "жов", "лис", "гру"], dart.dynamic);
    },
    get C931() {
      return C931 = dart.constList(["неділя", "понеділок", "вівторок", "середа", "четвер", "пʼятниця", "субота"], dart.dynamic);
    },
    get C932() {
      return C932 = dart.constList(["Н", "П", "В", "С", "Ч", "П", "С"], dart.dynamic);
    },
    get C933() {
      return C933 = dart.constList(["дп", "пп"], dart.dynamic);
    },
    get C934() {
      return C934 = dart.constList(["EEEE, d MMMM y 'р'.", "d MMMM y 'р'.", "d MMM y 'р'.", "dd.MM.yy"], dart.dynamic);
    },
    get C935() {
      return C935 = dart.constList(["{1} 'о' {0}", "{1} 'о' {0}", "{1}, {0}", "{1}, {0}"], dart.dynamic);
    },
    get C922() {
      return C922 = dart.constMap(core.String, dart.dynamic, ["NAME", "uk", "ERAS", C923 || CT.C923, "ERANAMES", C924 || CT.C924, "NARROWMONTHS", C925 || CT.C925, "STANDALONENARROWMONTHS", C926 || CT.C926, "MONTHS", C927 || CT.C927, "STANDALONEMONTHS", C928 || CT.C928, "SHORTMONTHS", C929 || CT.C929, "STANDALONESHORTMONTHS", C930 || CT.C930, "WEEKDAYS", C931 || CT.C931, "STANDALONEWEEKDAYS", C931 || CT.C931, "SHORTWEEKDAYS", C96 || CT.C96, "STANDALONESHORTWEEKDAYS", C96 || CT.C96, "NARROWWEEKDAYS", C932 || CT.C932, "STANDALONENARROWWEEKDAYS", C932 || CT.C932, "SHORTQUARTERS", C774 || CT.C774, "QUARTERS", C775 || CT.C775, "AMPMS", C933 || CT.C933, "DATEFORMATS", C934 || CT.C934, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 6, "DATETIMEFORMATS", C935 || CT.C935]);
    },
    get C937() {
      return C937 = dart.constList(["قبل مسیح", "عیسوی"], dart.dynamic);
    },
    get C938() {
      return C938 = dart.constList(["جنوری", "فروری", "مارچ", "اپریل", "مئی", "جون", "جولائی", "اگست", "ستمبر", "اکتوبر", "نومبر", "دسمبر"], dart.dynamic);
    },
    get C939() {
      return C939 = dart.constList(["اتوار", "پیر", "منگل", "بدھ", "جمعرات", "جمعہ", "ہفتہ"], dart.dynamic);
    },
    get C940() {
      return C940 = dart.constList(["پہلی سہ ماہی", "دوسری سہ ماہی", "تیسری سہ ماہی", "چوتهی سہ ماہی"], dart.dynamic);
    },
    get C941() {
      return C941 = dart.constList(["EEEE، d MMMM، y", "d MMMM، y", "d MMM، y", "d/M/yy"], dart.dynamic);
    },
    get C936() {
      return C936 = dart.constMap(core.String, dart.dynamic, ["NAME", "ur", "ERAS", C937 || CT.C937, "ERANAMES", C937 || CT.C937, "NARROWMONTHS", C21 || CT.C21, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C938 || CT.C938, "STANDALONEMONTHS", C938 || CT.C938, "SHORTMONTHS", C938 || CT.C938, "STANDALONESHORTMONTHS", C938 || CT.C938, "WEEKDAYS", C939 || CT.C939, "STANDALONEWEEKDAYS", C939 || CT.C939, "SHORTWEEKDAYS", C939 || CT.C939, "STANDALONESHORTWEEKDAYS", C939 || CT.C939, "NARROWWEEKDAYS", C211 || CT.C211, "STANDALONENARROWWEEKDAYS", C211 || CT.C211, "SHORTQUARTERS", C940 || CT.C940, "QUARTERS", C940 || CT.C940, "AMPMS", C71 || CT.C71, "DATEFORMATS", C941 || CT.C941, "TIMEFORMATS", C47 || CT.C47, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C943() {
      return C943 = dart.constList(["m.a.", "milodiy"], dart.dynamic);
    },
    get C944() {
      return C944 = dart.constList(["miloddan avvalgi", "milodiy"], dart.dynamic);
    },
    get C945() {
      return C945 = dart.constList(["Y", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], dart.dynamic);
    },
    get C946() {
      return C946 = dart.constList(["yanvar", "fevral", "mart", "aprel", "may", "iyun", "iyul", "avgust", "sentabr", "oktabr", "noyabr", "dekabr"], dart.dynamic);
    },
    get C947() {
      return C947 = dart.constList(["Yanvar", "Fevral", "Mart", "Aprel", "May", "Iyun", "Iyul", "Avgust", "Sentabr", "Oktabr", "Noyabr", "Dekabr"], dart.dynamic);
    },
    get C948() {
      return C948 = dart.constList(["yan", "fev", "mar", "apr", "may", "iyn", "iyl", "avg", "sen", "okt", "noy", "dek"], dart.dynamic);
    },
    get C949() {
      return C949 = dart.constList(["Yan", "Fev", "Mar", "Apr", "May", "Iyn", "Iyl", "Avg", "Sen", "Okt", "Noy", "Dek"], dart.dynamic);
    },
    get C950() {
      return C950 = dart.constList(["yakshanba", "dushanba", "seshanba", "chorshanba", "payshanba", "juma", "shanba"], dart.dynamic);
    },
    get C951() {
      return C951 = dart.constList(["Yak", "Dush", "Sesh", "Chor", "Pay", "Jum", "Shan"], dart.dynamic);
    },
    get C952() {
      return C952 = dart.constList(["Y", "D", "S", "C", "P", "J", "S"], dart.dynamic);
    },
    get C953() {
      return C953 = dart.constList(["1-ch", "2-ch", "3-ch", "4-ch"], dart.dynamic);
    },
    get C954() {
      return C954 = dart.constList(["1-chorak", "2-chorak", "3-chorak", "4-chorak"], dart.dynamic);
    },
    get C955() {
      return C955 = dart.constList(["TO", "TK"], dart.dynamic);
    },
    get C956() {
      return C956 = dart.constList(["EEEE, d-MMMM, y", "d-MMMM, y", "d-MMM, y", "dd/MM/yy"], dart.dynamic);
    },
    get C957() {
      return C957 = dart.constList(["H:mm:ss (zzzz)", "H:mm:ss (z)", "HH:mm:ss", "HH:mm"], dart.dynamic);
    },
    get C942() {
      return C942 = dart.constMap(core.String, dart.dynamic, ["NAME", "uz", "ERAS", C943 || CT.C943, "ERANAMES", C944 || CT.C944, "NARROWMONTHS", C945 || CT.C945, "STANDALONENARROWMONTHS", C945 || CT.C945, "MONTHS", C946 || CT.C946, "STANDALONEMONTHS", C947 || CT.C947, "SHORTMONTHS", C948 || CT.C948, "STANDALONESHORTMONTHS", C949 || CT.C949, "WEEKDAYS", C950 || CT.C950, "STANDALONEWEEKDAYS", C950 || CT.C950, "SHORTWEEKDAYS", C951 || CT.C951, "STANDALONESHORTWEEKDAYS", C951 || CT.C951, "NARROWWEEKDAYS", C952 || CT.C952, "STANDALONENARROWWEEKDAYS", C952 || CT.C952, "SHORTQUARTERS", C953 || CT.C953, "QUARTERS", C954 || CT.C954, "AMPMS", C955 || CT.C955, "DATEFORMATS", C956 || CT.C956, "TIMEFORMATS", C957 || CT.C957, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 6, "DATETIMEFORMATS", C103 || CT.C103]);
    },
    get C959() {
      return C959 = dart.constList(["Trước CN", "sau CN"], dart.dynamic);
    },
    get C960() {
      return C960 = dart.constList(["tháng 1", "tháng 2", "tháng 3", "tháng 4", "tháng 5", "tháng 6", "tháng 7", "tháng 8", "tháng 9", "tháng 10", "tháng 11", "tháng 12"], dart.dynamic);
    },
    get C961() {
      return C961 = dart.constList(["Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12"], dart.dynamic);
    },
    get C962() {
      return C962 = dart.constList(["thg 1", "thg 2", "thg 3", "thg 4", "thg 5", "thg 6", "thg 7", "thg 8", "thg 9", "thg 10", "thg 11", "thg 12"], dart.dynamic);
    },
    get C963() {
      return C963 = dart.constList(["Thg 1", "Thg 2", "Thg 3", "Thg 4", "Thg 5", "Thg 6", "Thg 7", "Thg 8", "Thg 9", "Thg 10", "Thg 11", "Thg 12"], dart.dynamic);
    },
    get C964() {
      return C964 = dart.constList(["Chủ Nhật", "Thứ Hai", "Thứ Ba", "Thứ Tư", "Thứ Năm", "Thứ Sáu", "Thứ Bảy"], dart.dynamic);
    },
    get C965() {
      return C965 = dart.constList(["CN", "Th 2", "Th 3", "Th 4", "Th 5", "Th 6", "Th 7"], dart.dynamic);
    },
    get C966() {
      return C966 = dart.constList(["CN", "T2", "T3", "T4", "T5", "T6", "T7"], dart.dynamic);
    },
    get C967() {
      return C967 = dart.constList(["Quý 1", "Quý 2", "Quý 3", "Quý 4"], dart.dynamic);
    },
    get C968() {
      return C968 = dart.constList(["SA", "CH"], dart.dynamic);
    },
    get C969() {
      return C969 = dart.constList(["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "dd/MM/y"], dart.dynamic);
    },
    get C970() {
      return C970 = dart.constList(["{0} {1}", "{0} {1}", "{0}, {1}", "{0}, {1}"], dart.dynamic);
    },
    get C958() {
      return C958 = dart.constMap(core.String, dart.dynamic, ["NAME", "vi", "ERAS", C959 || CT.C959, "ERANAMES", C959 || CT.C959, "NARROWMONTHS", C62 || CT.C62, "STANDALONENARROWMONTHS", C62 || CT.C62, "MONTHS", C960 || CT.C960, "STANDALONEMONTHS", C961 || CT.C961, "SHORTMONTHS", C962 || CT.C962, "STANDALONESHORTMONTHS", C963 || CT.C963, "WEEKDAYS", C964 || CT.C964, "STANDALONEWEEKDAYS", C964 || CT.C964, "SHORTWEEKDAYS", C965 || CT.C965, "STANDALONESHORTWEEKDAYS", C965 || CT.C965, "NARROWWEEKDAYS", C966 || CT.C966, "STANDALONENARROWWEEKDAYS", C966 || CT.C966, "SHORTQUARTERS", C114 || CT.C114, "QUARTERS", C967 || CT.C967, "AMPMS", C968 || CT.C968, "DATEFORMATS", C969 || CT.C969, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 0, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 6, "DATETIMEFORMATS", C970 || CT.C970]);
    },
    get C972() {
      return C972 = dart.constList(["公元前", "公元"], dart.dynamic);
    },
    get C973() {
      return C973 = dart.constList(["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"], dart.dynamic);
    },
    get C974() {
      return C974 = dart.constList(["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"], dart.dynamic);
    },
    get C975() {
      return C975 = dart.constList(["周日", "周一", "周二", "周三", "周四", "周五", "周六"], dart.dynamic);
    },
    get C976() {
      return C976 = dart.constList(["日", "一", "二", "三", "四", "五", "六"], dart.dynamic);
    },
    get C977() {
      return C977 = dart.constList(["1季度", "2季度", "3季度", "4季度"], dart.dynamic);
    },
    get C978() {
      return C978 = dart.constList(["第一季度", "第二季度", "第三季度", "第四季度"], dart.dynamic);
    },
    get C979() {
      return C979 = dart.constList(["上午", "下午"], dart.dynamic);
    },
    get C980() {
      return C980 = dart.constList(["y年M月d日EEEE", "y年M月d日", "y年M月d日", "y/M/d"], dart.dynamic);
    },
    get C981() {
      return C981 = dart.constList(["zzzz ah:mm:ss", "z ah:mm:ss", "ah:mm:ss", "ah:mm"], dart.dynamic);
    },
    get C971() {
      return C971 = dart.constMap(core.String, dart.dynamic, ["NAME", "zh", "ERAS", C972 || CT.C972, "ERANAMES", C972 || CT.C972, "NARROWMONTHS", C62 || CT.C62, "STANDALONENARROWMONTHS", C62 || CT.C62, "MONTHS", C973 || CT.C973, "STANDALONEMONTHS", C973 || CT.C973, "SHORTMONTHS", C469 || CT.C469, "STANDALONESHORTMONTHS", C469 || CT.C469, "WEEKDAYS", C974 || CT.C974, "STANDALONEWEEKDAYS", C974 || CT.C974, "SHORTWEEKDAYS", C975 || CT.C975, "STANDALONESHORTWEEKDAYS", C975 || CT.C975, "NARROWWEEKDAYS", C976 || CT.C976, "STANDALONENARROWWEEKDAYS", C976 || CT.C976, "SHORTQUARTERS", C977 || CT.C977, "QUARTERS", C978 || CT.C978, "AMPMS", C979 || CT.C979, "DATEFORMATS", C980 || CT.C980, "TIMEFORMATS", C981 || CT.C981, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C983() {
      return C983 = dart.constList(["週日", "週一", "週二", "週三", "週四", "週五", "週六"], dart.dynamic);
    },
    get C984() {
      return C984 = dart.constList(["第1季", "第2季", "第3季", "第4季"], dart.dynamic);
    },
    get C985() {
      return C985 = dart.constList(["y年M月d日EEEE", "y年M月d日", "y年M月d日", "d/M/y"], dart.dynamic);
    },
    get C986() {
      return C986 = dart.constList(["ah:mm:ss [zzzz]", "ah:mm:ss [z]", "ah:mm:ss", "ah:mm"], dart.dynamic);
    },
    get C982() {
      return C982 = dart.constMap(core.String, dart.dynamic, ["NAME", "zh_HK", "ERAS", C972 || CT.C972, "ERANAMES", C972 || CT.C972, "NARROWMONTHS", C62 || CT.C62, "STANDALONENARROWMONTHS", C62 || CT.C62, "MONTHS", C469 || CT.C469, "STANDALONEMONTHS", C469 || CT.C469, "SHORTMONTHS", C469 || CT.C469, "STANDALONESHORTMONTHS", C469 || CT.C469, "WEEKDAYS", C974 || CT.C974, "STANDALONEWEEKDAYS", C974 || CT.C974, "SHORTWEEKDAYS", C983 || CT.C983, "STANDALONESHORTWEEKDAYS", C983 || CT.C983, "NARROWWEEKDAYS", C976 || CT.C976, "STANDALONENARROWWEEKDAYS", C976 || CT.C976, "SHORTQUARTERS", C114 || CT.C114, "QUARTERS", C984 || CT.C984, "AMPMS", C979 || CT.C979, "DATEFORMATS", C985 || CT.C985, "TIMEFORMATS", C986 || CT.C986, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C988() {
      return C988 = dart.constList(["西元前", "西元"], dart.dynamic);
    },
    get C989() {
      return C989 = dart.constList(["y年M月d日 EEEE", "y年M月d日", "y年M月d日", "y/M/d"], dart.dynamic);
    },
    get C987() {
      return C987 = dart.constMap(core.String, dart.dynamic, ["NAME", "zh_TW", "ERAS", C988 || CT.C988, "ERANAMES", C988 || CT.C988, "NARROWMONTHS", C62 || CT.C62, "STANDALONENARROWMONTHS", C62 || CT.C62, "MONTHS", C469 || CT.C469, "STANDALONEMONTHS", C469 || CT.C469, "SHORTMONTHS", C469 || CT.C469, "STANDALONESHORTMONTHS", C469 || CT.C469, "WEEKDAYS", C974 || CT.C974, "STANDALONEWEEKDAYS", C974 || CT.C974, "SHORTWEEKDAYS", C983 || CT.C983, "STANDALONESHORTWEEKDAYS", C983 || CT.C983, "NARROWWEEKDAYS", C976 || CT.C976, "STANDALONENARROWWEEKDAYS", C976 || CT.C976, "SHORTQUARTERS", C984 || CT.C984, "QUARTERS", C984 || CT.C984, "AMPMS", C979 || CT.C979, "DATEFORMATS", C989 || CT.C989, "TIMEFORMATS", C986 || CT.C986, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C991() {
      return C991 = dart.constList(["J", "F", "M", "E", "M", "J", "J", "A", "S", "O", "N", "D"], dart.dynamic);
    },
    get C992() {
      return C992 = dart.constList(["Januwari", "Februwari", "Mashi", "Ephreli", "Meyi", "Juni", "Julayi", "Agasti", "Septhemba", "Okthoba", "Novemba", "Disemba"], dart.dynamic);
    },
    get C993() {
      return C993 = dart.constList(["Jan", "Feb", "Mas", "Eph", "Mey", "Jun", "Jul", "Aga", "Sep", "Okt", "Nov", "Dis"], dart.dynamic);
    },
    get C994() {
      return C994 = dart.constList(["ISonto", "UMsombuluko", "ULwesibili", "ULwesithathu", "ULwesine", "ULwesihlanu", "UMgqibelo"], dart.dynamic);
    },
    get C995() {
      return C995 = dart.constList(["Son", "Mso", "Bil", "Tha", "Sin", "Hla", "Mgq"], dart.dynamic);
    },
    get C996() {
      return C996 = dart.constList(["S", "M", "B", "T", "S", "H", "M"], dart.dynamic);
    },
    get C997() {
      return C997 = dart.constList(["ikota yesi-1", "ikota yesi-2", "ikota yesi-3", "ikota yesi-4"], dart.dynamic);
    },
    get C990() {
      return C990 = dart.constMap(core.String, dart.dynamic, ["NAME", "zu", "ERAS", C205 || CT.C205, "ERANAMES", C205 || CT.C205, "NARROWMONTHS", C991 || CT.C991, "STANDALONENARROWMONTHS", C21 || CT.C21, "MONTHS", C992 || CT.C992, "STANDALONEMONTHS", C992 || CT.C992, "SHORTMONTHS", C993 || CT.C993, "STANDALONESHORTMONTHS", C993 || CT.C993, "WEEKDAYS", C994 || CT.C994, "STANDALONEWEEKDAYS", C994 || CT.C994, "SHORTWEEKDAYS", C995 || CT.C995, "STANDALONESHORTWEEKDAYS", C995 || CT.C995, "NARROWWEEKDAYS", C996 || CT.C996, "STANDALONENARROWWEEKDAYS", C996 || CT.C996, "SHORTQUARTERS", C114 || CT.C114, "QUARTERS", C997 || CT.C997, "AMPMS", C71 || CT.C71, "DATEFORMATS", C213 || CT.C213, "TIMEFORMATS", C31 || CT.C31, "AVAILABLEFORMATS", null, "FIRSTDAYOFWEEK", 6, "WEEKENDRANGE", C32 || CT.C32, "FIRSTWEEKCUTOFFDAY", 5, "DATETIMEFORMATS", C33 || CT.C33]);
    },
    get C17() {
      return C17 = dart.constMap(core.String, dart.dynamic, ["af", C18 || CT.C18, "am", C34 || CT.C34, "ar", C48 || CT.C48, "az", C59 || CT.C59, "be", C73 || CT.C73, "bg", C89 || CT.C89, "bn", C104 || CT.C104, "bs", C117 || CT.C117, "ca", C132 || CT.C132, "cs", C149 || CT.C149, "da", C161 || CT.C161, "de", C174 || CT.C174, "de_CH", C187 || CT.C187, "el", C188 || CT.C188, "en", C204 || CT.C204, "en_AU", C215 || CT.C215, "en_CA", C220 || CT.C220, "en_GB", C223 || CT.C223, "en_IE", C225 || CT.C225, "en_IN", C227 || CT.C227, "en_SG", C230 || CT.C230, "en_ZA", C231 || CT.C231, "es", C233 || CT.C233, "es_419", C247 || CT.C247, "es_MX", C252 || CT.C252, "es_US", C257 || CT.C257, "et", C259 || CT.C259, "eu", C268 || CT.C268, "fa", C283 || CT.C283, "fi", C298 || CT.C298, "fil", C316 || CT.C316, "fr", C324 || CT.C324, "fr_CA", C333 || CT.C333, "gl", C338 || CT.C338, "gsw", C355 || CT.C355, "gu", C360 || CT.C360, "he", C372 || CT.C372, "hi", C384 || CT.C384, "hr", C396 || CT.C396, "hu", C406 || CT.C406, "hy", C419 || CT.C419, "id", C433 || CT.C433, "is", C443 || CT.C443, "it", C456 || CT.C456, "ja", C467 || CT.C467, "ka", C476 || CT.C476, "kk", C488 || CT.C488, "km", C503 || CT.C503, "kn", C513 || CT.C513, "ko", C527 || CT.C527, "ky", C537 || CT.C537, "lo", C552 || CT.C552, "lt", C565 || CT.C565, "lv", C579 || CT.C579, "mk", C593 || CT.C593, "ml", C606 || CT.C606, "mn", C619 || CT.C619, "mr", C631 || CT.C631, "ms", C643 || CT.C643, "my", C655 || CT.C655, "nb", C667 || CT.C667, "ne", C674 || CT.C674, "nl", C685 || CT.C685, "or", C695 || CT.C695, "pa", C704 || CT.C704, "pl", C716 || CT.C716, "ps", C731 || CT.C731, "pt", C743 || CT.C743, "pt_PT", C751 || CT.C751, "ro", C755 || CT.C755, "ru", C765 || CT.C765, "si", C777 || CT.C777, "sk", C791 || CT.C791, "sl", C803 || CT.C803, "sq", C814 || CT.C814, "sr", C833 || CT.C833, "sr_Latn", C845 || CT.C845, "sv", C852 || CT.C852, "sw", C862 || CT.C862, "ta", C869 || CT.C869, "te", C883 || CT.C883, "th", C896 || CT.C896, "tl", C908 || CT.C908, "tr", C909 || CT.C909, "uk", C922 || CT.C922, "ur", C936 || CT.C936, "uz", C942 || CT.C942, "vi", C958 || CT.C958, "zh", C971 || CT.C971, "zh_HK", C982 || CT.C982, "zh_TW", C987 || CT.C987, "zu", C990 || CT.C990]);
    },
    get C999() {
      return C999 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "dd-MM", "MEd", "EEE, d/M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE d MMM", "MMMM", "LLLL", "MMMMd", "d MMM", "MMMMEEEEd", "EEEE d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "MM-y", "yMd", "y-MM-dd", "yMEd", "EEE y-MM-dd", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE, d MMM y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE, d MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1000() {
      return C1000 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "M/d", "MEd", "EEE፣ M/d", "MMM", "LLL", "MMMd", "MMM d", "MMMEd", "EEE፣ MMM d", "MMMM", "LLLL", "MMMMd", "MMMM d", "MMMMEEEEd", "EEEE፣ MMMM d", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE፣ d/M/y", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE፣ MMM d y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE ፣d MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "H", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "h a", "jm", "h:mm a", "jms", "h:mm:ss a", "jmv", "h:mm a v", "jmz", "h:mm a z", "jz", "h a z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1001() {
      return C1001 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/‏M", "MEd", "EEE، d/M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE، d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE، d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M‏/y", "yMd", "d‏/M‏/y", "yMEd", "EEE، d/‏M/‏y", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE، d MMM y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE، d MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "h a", "jm", "h:mm a", "jms", "h:mm:ss a", "jmv", "h:mm a v", "jmz", "h:mm a z", "jz", "h a z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1002() {
      return C1002 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "dd.MM", "MEd", "dd.MM, EEE", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "d MMM, EEE", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "d MMMM, EEEE", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "MM.y", "yMd", "dd.MM.y", "yMEd", "dd.MM.y, EEE", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "d MMM y, EEE", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "d MMMM y, EEEE", "yQQQ", "y QQQ", "yQQQQ", "y QQQQ", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1003() {
      return C1003 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d.M", "MEd", "EEE, d.M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M.y", "yMd", "d.M.y", "yMEd", "EEE, d.M.y", "yMMM", "LLL y", "yMMMd", "d MMM y", "yMMMEd", "EEE, d MMM y", "yMMMM", "LLLL y", "yMMMMd", "d MMMM y 'г'.", "yMMMMEEEEd", "EEEE, d MMMM y 'г'.", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm.ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1004() {
      return C1004 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d.MM", "MEd", "EEE, d.MM", "MMM", "MM", "MMMd", "d.MM", "MMMEd", "EEE, d.MM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y 'г'.", "yM", "MM.y 'г'.", "yMd", "d.MM.y 'г'.", "yMEd", "EEE, d.MM.y 'г'.", "yMMM", "MM.y 'г'.", "yMMMd", "d.MM.y 'г'.", "yMMMEd", "EEE, d.MM.y 'г'.", "yMMMM", "MMMM y 'г'.", "yMMMMd", "d MMMM y 'г'.", "yMMMMEEEEd", "EEEE, d MMMM y 'г'.", "yQQQ", "QQQ y 'г'.", "yQQQQ", "QQQQ y 'г'.", "H", "H 'ч'.", "Hm", "H:mm 'ч'.", "Hms", "H:mm:ss 'ч'.", "j", "H 'ч'.", "jm", "H:mm 'ч'.", "jms", "H:mm:ss 'ч'.", "jmv", "HH:mm 'ч'. v", "jmz", "HH:mm 'ч'. z", "jz", "H 'ч'. z", "m", "m", "ms", "m:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1005() {
      return C1005 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "EEE, d-M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE, d/M/y", "yMMM", "MMM y", "yMMMd", "d MMM, y", "yMMMEd", "EEE, d MMM, y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM, y", "yMMMMEEEEd", "EEEE, d MMMM, y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "h a", "jm", "h:mm a", "jms", "h:mm:ss a", "jmv", "h:mm a v", "jmz", "h:mm a z", "jz", "h a z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1006() {
      return C1006 = dart.constMap(core.String, core.String, ["d", "d.", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d.M.", "MEd", "EEE, d.M.", "MMM", "LLL", "MMMd", "d. MMM", "MMMEd", "EEE, d. MMM", "MMMM", "LLLL", "MMMMd", "d. MMMM", "MMMMEEEEd", "EEEE, d. MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y.", "yM", "MM/y", "yMd", "d.M.y.", "yMEd", "EEE, d.M.y.", "yMMM", "MMM y.", "yMMMd", "d. MMM y.", "yMMMEd", "EEE, d. MMM y.", "yMMMM", "LLLL y.", "yMMMMd", "d. MMMM y.", "yMMMMEEEEd", "EEEE, d. MMMM y.", "yQQQ", "QQQ y.", "yQQQQ", "QQQQ y.", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm (v)", "jmz", "HH:mm (z)", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1007() {
      return C1007 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "EEE d/M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE, d/M/y", "yMMM", "LLL 'de' y", "yMMMd", "d MMM 'de' y", "yMMMEd", "EEE, d MMM y", "yMMMM", "LLLL 'de' y", "yMMMMd", "d MMMM 'de' y", "yMMMMEEEEd", "EEEE, d MMMM 'de' y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "H", "Hm", "H:mm", "Hms", "H:mm:ss", "j", "H", "jm", "H:mm", "jms", "H:mm:ss", "jmv", "H:mm v", "jmz", "H:mm z", "jz", "H z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1008() {
      return C1008 = dart.constMap(core.String, core.String, ["d", "d.", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d. M.", "MEd", "EEE d. M.", "MMM", "LLL", "MMMd", "d. M.", "MMMEd", "EEE d. M.", "MMMM", "LLLL", "MMMMd", "d. MMMM", "MMMMEEEEd", "EEEE d. MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d. M. y", "yMEd", "EEE d. M. y", "yMMM", "LLLL y", "yMMMd", "d. M. y", "yMMMEd", "EEE d. M. y", "yMMMM", "LLLL y", "yMMMMd", "d. MMMM y", "yMMMMEEEEd", "EEEE d. MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "H", "Hm", "H:mm", "Hms", "H:mm:ss", "j", "H", "jm", "H:mm", "jms", "H:mm:ss", "jmv", "H:mm v", "jmz", "H:mm z", "jz", "H z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1009() {
      return C1009 = dart.constMap(core.String, core.String, ["d", "d.", "E", "ccc", "EEEE", "cccc", "LLL", "MMM", "LLLL", "MMMM", "M", "M", "Md", "d/M", "MEd", "EEE d/M", "MMM", "MMM", "MMMd", "d. MMM", "MMMEd", "EEE d. MMM", "MMMM", "MMMM", "MMMMd", "d. MMMM", "MMMMEEEEd", "EEEE d. MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE d/M/y", "yMMM", "MMM y", "yMMMd", "d. MMM y", "yMMMEd", "EEE d. MMM y", "yMMMM", "MMMM y", "yMMMMd", "d. MMMM y", "yMMMMEEEEd", "EEEE 'den' d. MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH.mm", "Hms", "HH.mm.ss", "j", "HH", "jm", "HH.mm", "jms", "HH.mm.ss", "jmv", "HH.mm v", "jmz", "HH.mm z", "jz", "HH z", "m", "m", "ms", "mm.ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1010() {
      return C1010 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d.M.", "MEd", "EEE, d.M.", "MMM", "LLL", "MMMd", "d. MMM", "MMMEd", "EEE, d. MMM", "MMMM", "LLLL", "MMMMd", "d. MMMM", "MMMMEEEEd", "EEEE, d. MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M.y", "yMd", "d.M.y", "yMEd", "EEE, d.M.y", "yMMM", "MMM y", "yMMMd", "d. MMM y", "yMMMEd", "EEE, d. MMM y", "yMMMM", "MMMM y", "yMMMMd", "d. MMMM y", "yMMMMEEEEd", "EEEE, d. MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH 'Uhr'", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH 'Uhr'", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH 'Uhr' z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1011() {
      return C1011 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "MMM", "LLLL", "MMMM", "M", "L", "Md", "d/M", "MEd", "EEE, d/M", "MMM", "MMM", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "MMMM", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE, d/M/y", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE, d MMM y", "yMMMM", "LLLL y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE, d MMMM y", "yQQQ", "y QQQ", "yQQQQ", "y QQQQ", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "h a", "jm", "h:mm a", "jms", "h:mm:ss a", "jmv", "h:mm a v", "jmz", "h:mm a z", "jz", "h a z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1012() {
      return C1012 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "M/d", "MEd", "EEE, M/d", "MMM", "LLL", "MMMd", "MMM d", "MMMEd", "EEE, MMM d", "MMMM", "LLLL", "MMMMd", "MMMM d", "MMMMEEEEd", "EEEE, MMMM d", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "M/d/y", "yMEd", "EEE, M/d/y", "yMMM", "MMM y", "yMMMd", "MMM d, y", "yMMMEd", "EEE, MMM d, y", "yMMMM", "MMMM y", "yMMMMd", "MMMM d, y", "yMMMMEEEEd", "EEEE, MMMM d, y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "h a", "jm", "h:mm a", "jms", "h:mm:ss a", "jmv", "h:mm a v", "jmz", "h:mm a z", "jz", "h a z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1013() {
      return C1013 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "EEE, d/M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "MM/y", "yMd", "dd/MM/y", "yMEd", "EEE, dd/MM/y", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE, d MMM y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE, d MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "h a", "jm", "h:mm a", "jms", "h:mm:ss a", "jmv", "h:mm a v", "jmz", "h:mm a z", "jz", "h a z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1014() {
      return C1014 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "MM-dd", "MEd", "EEE, MM-dd", "MMM", "LLL", "MMMd", "MMM d", "MMMEd", "EEE, MMM d", "MMMM", "LLLL", "MMMMd", "MMMM d", "MMMMEEEEd", "EEEE, MMMM d", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "y-MM", "yMd", "y-MM-dd", "yMEd", "EEE, y-MM-dd", "yMMM", "MMM y", "yMMMd", "MMM d, y", "yMMMEd", "EEE, MMM d, y", "yMMMM", "MMMM y", "yMMMMd", "MMMM d, y", "yMMMMEEEEd", "EEEE, MMMM d, y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "h a", "jm", "h:mm a", "jms", "h:mm:ss a", "jmv", "h:mm a v", "jmz", "h:mm a z", "jz", "h a z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1015() {
      return C1015 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "dd/MM", "MEd", "EEE dd/MM", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "MM/y", "yMd", "dd/MM/y", "yMEd", "EEE, dd/MM/y", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE, d MMM y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE, d MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1016() {
      return C1016 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "EEE, d/M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "MM/y", "yMd", "d/M/y", "yMEd", "EEE, d/M/y", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE d MMM y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE d MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1017() {
      return C1017 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "dd/MM", "MEd", "EEE, dd/MM", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "MM/y", "yMd", "d/M/y", "yMEd", "EEE, d/M/y", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE, d MMM, y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE, d MMMM, y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "h a", "jm", "h:mm a", "jms", "h:mm:ss a", "jmv", "h:mm a v", "jmz", "h:mm a z", "jz", "h a z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1018() {
      return C1018 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "dd/MM", "MEd", "EEE, dd/MM", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "MM/y", "yMd", "dd/MM/y", "yMEd", "EEE, dd/MM/y", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE, d MMM y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE, d MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "h a", "jm", "h:mm a", "jms", "h:mm:ss a", "jmv", "h:mm a v", "jmz", "h:mm a z", "jz", "h a z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1019() {
      return C1019 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "MM/dd", "MEd", "EEE, MM/dd", "MMM", "LLL", "MMMd", "dd MMM", "MMMEd", "EEE, dd MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, dd MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "MM/y", "yMd", "y/MM/dd", "yMEd", "EEE, y/MM/dd", "yMMM", "MMM y", "yMMMd", "dd MMM y", "yMMMEd", "EEE, dd MMM y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE, d MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1020() {
      return C1020 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "EEE, d/M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "d 'de' MMMM", "MMMMEEEEd", "EEEE, d 'de' MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE, d/M/y", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE, d MMM y", "yMMMM", "MMMM 'de' y", "yMMMMd", "d 'de' MMMM 'de' y", "yMMMMEEEEd", "EEEE, d 'de' MMMM 'de' y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ 'de' y", "H", "H", "Hm", "H:mm", "Hms", "H:mm:ss", "j", "H", "jm", "H:mm", "jms", "H:mm:ss", "jmv", "H:mm v", "jmz", "H:mm z", "jz", "H z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1021() {
      return C1021 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "EEE, d/M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "d 'de' MMMM", "MMMMEEEEd", "EEEE, d 'de' MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE d/M/y", "yMMM", "MMMM 'de' y", "yMMMd", "d 'de' MMMM 'de' y", "yMMMEd", "EEE, d 'de' MMM 'de' y", "yMMMM", "MMMM 'de' y", "yMMMMd", "d 'de' MMMM 'de' y", "yMMMMEEEEd", "EEEE, d 'de' MMMM 'de' y", "yQQQ", "QQQ 'de' y", "yQQQQ", "QQQQ 'de' y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "H:mm v", "jmz", "H:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1022() {
      return C1022 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "EEE, d/M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE d 'de' MMM", "MMMM", "LLLL", "MMMMd", "d 'de' MMMM", "MMMMEEEEd", "EEEE, d 'de' MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE, d/M/y", "yMMM", "MMMM 'de' y", "yMMMd", "d 'de' MMMM 'de' y", "yMMMEd", "EEE, d 'de' MMMM 'de' y", "yMMMM", "MMMM 'de' y", "yMMMMd", "d 'de' MMMM 'de' y", "yMMMMEEEEd", "EEEE, d 'de' MMMM 'de' y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ 'de' y", "H", "HH", "Hm", "H:mm", "Hms", "H:mm:ss", "j", "HH", "jm", "H:mm", "jms", "H:mm:ss", "jmv", "H:mm v", "jmz", "H:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1023() {
      return C1023 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "EEE, d/M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d 'de' MMM", "MMMM", "LLLL", "MMMMd", "d 'de' MMMM", "MMMMEEEEd", "EEEE, d 'de' MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE, d/M/y", "yMMM", "MMMM 'de' y", "yMMMd", "d 'de' MMMM 'de' y", "yMMMEd", "EEE, d 'de' MMMM 'de' y", "yMMMM", "MMMM 'de' y", "yMMMMd", "d 'de' MMMM 'de' y", "yMMMMEEEEd", "EEEE, d 'de' MMMM 'de' y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ 'de' y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "h a", "jm", "h:mm a", "jms", "h:mm:ss a", "jmv", "h:mm a v", "jmz", "h:mm a z", "jz", "h a z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1024() {
      return C1024 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "MMMM", "LLLL", "MMMM", "M", "M", "Md", "d.M", "MEd", "EEE, d.M", "MMM", "MMMM", "MMMd", "d. MMM", "MMMEd", "EEE, d. MMM", "MMMM", "MMMM", "MMMMd", "d. MMMM", "MMMMEEEEd", "EEEE, d. MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M.y", "yMd", "d.M.y", "yMEd", "EEE, d.M.y", "yMMM", "MMM y", "yMMMd", "d. MMM y", "yMMMEd", "EEE, d. MMMM y", "yMMMM", "MMMM y", "yMMMMd", "d. MMMM y", "yMMMMEEEEd", "EEEE, d. MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1025() {
      return C1025 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "M/d", "MEd", "M/d, EEE", "MMM", "LLL", "MMMd", "MMM d", "MMMEd", "MMM d, EEE", "MMMM", "LLLL", "MMMMd", "MMMM d", "MMMMEEEEd", "MMMM d, EEEE", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "y/M", "yMd", "y/M/d", "yMEd", "y/M/d, EEE", "yMMM", "y MMM", "yMMMd", "y MMM d", "yMMMEd", "y MMM d, EEE", "yMMMM", "y('e')'ko' MMMM", "yMMMMd", "y('e')'ko' MMMM'ren' d", "yMMMMEEEEd", "y('e')'ko' MMMM'ren' d('a'), EEEE", "yQQQ", "y('e')'ko' QQQ", "yQQQQ", "y('e')'ko' QQQQ", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH (z)", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1026() {
      return C1026 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "M/d", "MEd", "EEE M/d", "MMM", "LLL", "MMMd", "d LLL", "MMMEd", "EEE d LLL", "MMMM", "LLLL", "MMMMd", "d LLLL", "MMMMEEEEd", "EEEE d LLLL", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "y/M", "yMd", "y/M/d", "yMEd", "EEE y/M/d", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE d MMM y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE d MMMM y", "yQQQ", "QQQQ y", "yQQQQ", "QQQQ y", "H", "H", "Hm", "H:mm", "Hms", "H:mm:ss", "j", "H", "jm", "H:mm", "jms", "H:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm (z)", "jz", "H (z)", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1027() {
      return C1027 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d.M.", "MEd", "EEE d.M.", "MMM", "LLL", "MMMd", "d. MMM", "MMMEd", "ccc d. MMM", "MMMM", "LLLL", "MMMMd", "d. MMMM", "MMMMEEEEd", "cccc d. MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "L.y", "yMd", "d.M.y", "yMEd", "EEE d.M.y", "yMMM", "LLL y", "yMMMd", "d. MMM y", "yMMMEd", "EEE d. MMM y", "yMMMM", "LLLL y", "yMMMMd", "d. MMMM y", "yMMMMEEEEd", "EEEE d. MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "H", "Hm", "H.mm", "Hms", "H.mm.ss", "j", "H", "jm", "H.mm", "jms", "H.mm.ss", "jmv", "H.mm v", "jmz", "H.mm z", "jz", "H z", "m", "m", "ms", "m.ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1028() {
      return C1028 = dart.constMap(core.String, core.String, ["d", "d", "E", "EEE", "EEEE", "EEEE", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "dd/MM", "MEd", "EEE dd/MM", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "MM/y", "yMd", "dd/MM/y", "yMEd", "EEE dd/MM/y", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE d MMM y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE d MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH 'h'", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH 'h'", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH 'h' z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1029() {
      return C1029 = dart.constMap(core.String, core.String, ["d", "d", "E", "EEE", "EEEE", "EEEE", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "M-d", "MEd", "EEE M-d", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "y-MM", "yMd", "y-MM-dd", "yMEd", "EEE y-MM-dd", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE d MMM y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE d MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH 'h'", "Hm", "HH 'h' mm", "Hms", "HH 'h' mm 'min' ss 's'", "j", "HH 'h'", "jm", "HH 'h' mm", "jms", "HH 'h' mm 'min' ss 's'", "jmv", "HH 'h' mm v", "jmz", "HH 'h' mm z", "jz", "HH 'h' z", "m", "m", "ms", "mm 'min' ss 's'", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1030() {
      return C1030 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "EEE, d/M", "MMM", "LLL", "MMMd", "d 'de' MMM", "MMMEd", "EEE, d 'de' MMM", "MMMM", "LLLL", "MMMMd", "d 'de' MMMM", "MMMMEEEEd", "EEEE, d 'de' MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE, d/M/y", "yMMM", "MMM 'de' y", "yMMMd", "d/MM/y", "yMMMEd", "EEE, d/MM/y", "yMMMM", "MMMM 'de' y", "yMMMMd", "d 'de' MMMM 'de' y", "yMMMMEEEEd", "EEEE, d 'de' MMMM 'de' y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ 'de' y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1031() {
      return C1031 = dart.constMap(core.String, core.String, ["d", "d", "E", "EEE", "EEEE", "EEEE", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d.M.", "MEd", "EEE, d.M.", "MMM", "LLL", "MMMd", "d. MMM", "MMMEd", "EEE d. MMM", "MMMM", "LLLL", "MMMMd", "d. MMMM", "MMMMEEEEd", "EEEE d. MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "y-M", "yMd", "d.M.y", "yMEd", "EEE, y-M-d", "yMMM", "MMM y", "yMMMd", "y MMM d", "yMMMEd", "EEE, d. MMM y", "yMMMM", "MMMM y", "yMMMMd", "d. MMMM y", "yMMMMEEEEd", "EEEE, d. MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "H", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "H", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "H z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1032() {
      return C1032 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "EEE, d/M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE, d/M/y", "yMMM", "MMM y", "yMMMd", "d MMM, y", "yMMMEd", "EEE, d MMM, y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM, y", "yMMMMEEEEd", "EEEE, d MMMM, y", "yQQQ", "y QQQ", "yQQQQ", "y QQQQ", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "h a", "jm", "h:mm a", "jms", "h:mm:ss a", "jmv", "h:mm a v", "jmz", "h:mm a z", "jz", "h a z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1033() {
      return C1033 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d.M", "MEd", "EEE, d.M", "MMM", "LLL", "MMMd", "d בMMM", "MMMEd", "EEE, d בMMM", "MMMM", "LLLL", "MMMMd", "d בMMMM", "MMMMEEEEd", "EEEE, d בMMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M.y", "yMd", "d.M.y", "yMEd", "EEE, d.M.y", "yMMM", "MMM y", "yMMMd", "d בMMM y", "yMMMEd", "EEE, d בMMM y", "yMMMM", "MMMM y", "yMMMMd", "d בMMMM y", "yMMMMEEEEd", "EEEE, d בMMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "H", "Hm", "H:mm", "Hms", "H:mm:ss", "j", "H", "jm", "H:mm", "jms", "H:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "H z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1034() {
      return C1034 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "EEE, d/M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE, d/M/y", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE, d MMM y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE, d MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "h a", "jm", "h:mm a", "jms", "h:mm:ss a", "jmv", "h:mm a v", "jmz", "h:mm a z", "jz", "h a z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1035() {
      return C1035 = dart.constMap(core.String, core.String, ["d", "d.", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L.", "Md", "dd. MM.", "MEd", "EEE, dd. MM.", "MMM", "LLL", "MMMd", "d. MMM", "MMMEd", "EEE, d. MMM", "MMMM", "LLLL", "MMMMd", "d. MMMM", "MMMMEEEEd", "EEEE, d. MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y.", "yM", "MM. y.", "yMd", "dd. MM. y.", "yMEd", "EEE, dd. MM. y.", "yMMM", "LLL y.", "yMMMd", "d. MMM y.", "yMMMEd", "EEE, d. MMM y.", "yMMMM", "LLLL y.", "yMMMMd", "d. MMMM y.", "yMMMMEEEEd", "EEEE, d. MMMM y.", "yQQQ", "QQQ y.", "yQQQQ", "QQQQ y.", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH (z)", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1036() {
      return C1036 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "M. d.", "MEd", "M. d., EEE", "MMM", "LLL", "MMMd", "MMM d.", "MMMEd", "MMM d., EEE", "MMMM", "LLLL", "MMMMd", "MMMM d.", "MMMMEEEEd", "MMMM d., EEEE", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y.", "yM", "y. M.", "yMd", "y. MM. dd.", "yMEd", "y. MM. dd., EEE", "yMMM", "y. MMM", "yMMMd", "y. MMM d.", "yMMMEd", "y. MMM d., EEE", "yMMMM", "y. MMMM", "yMMMMd", "y. MMMM d.", "yMMMMEEEEd", "y. MMMM d., EEEE", "yQQQ", "y. QQQ", "yQQQQ", "y. QQQQ", "H", "H", "Hm", "H:mm", "Hms", "H:mm:ss", "j", "H", "jm", "H:mm", "jms", "H:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "H z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1037() {
      return C1037 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "dd.MM", "MEd", "dd.MM, EEE", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "d MMM, EEE", "MMMM", "LLLL", "MMMMd", "MMMM d", "MMMMEEEEd", "d MMMM, EEEE", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "MM.y", "yMd", "dd.MM.y", "yMEd", "d.MM.y թ., EEE", "yMMM", "y թ. LLL", "yMMMd", "d MMM, y թ.", "yMMMEd", "y թ. MMM d, EEE", "yMMMM", "y թ․ LLLL", "yMMMMd", "d MMMM, y թ.", "yMMMMEEEEd", "y թ. MMMM d, EEEE", "yQQQ", "y թ. QQQ", "yQQQQ", "y թ. QQQQ", "H", "H", "Hm", "H:mm", "Hms", "H:mm:ss", "j", "H", "jm", "H:mm", "jms", "H:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "H z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1038() {
      return C1038 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "EEE, d/M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE, d/M/y", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE, d MMM y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE, d MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH.mm", "Hms", "HH.mm.ss", "j", "HH", "jm", "HH.mm", "jms", "HH.mm.ss", "jmv", "HH.mm v", "jmz", "HH.mm z", "jz", "HH z", "m", "m", "ms", "mm.ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1039() {
      return C1039 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d.M.", "MEd", "EEE, d.M.", "MMM", "LLL", "MMMd", "d. MMM", "MMMEd", "EEE, d. MMM", "MMMM", "LLLL", "MMMMd", "d. MMMM", "MMMMEEEEd", "EEEE, d. MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M. y", "yMd", "d.M.y", "yMEd", "EEE, d.M.y", "yMMM", "MMM y", "yMMMd", "d. MMM y", "yMMMEd", "EEE, d. MMM y", "yMMMM", "MMMM y", "yMMMMd", "d. MMMM y", "yMMMMEEEEd", "EEEE, d. MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "v – HH:mm", "jmz", "z – HH:mm", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1040() {
      return C1040 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "EEE d/M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE d/M/y", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE d MMM y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE d MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1041() {
      return C1041 = dart.constMap(core.String, core.String, ["d", "d日", "E", "ccc", "EEEE", "cccc", "LLL", "M月", "LLLL", "M月", "M", "M月", "Md", "M/d", "MEd", "M/d(EEE)", "MMM", "M月", "MMMd", "M月d日", "MMMEd", "M月d日(EEE)", "MMMM", "M月", "MMMMd", "M月d日", "MMMMEEEEd", "M月d日EEEE", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y年", "yM", "y/M", "yMd", "y/M/d", "yMEd", "y/M/d(EEE)", "yMMM", "y年M月", "yMMMd", "y年M月d日", "yMMMEd", "y年M月d日(EEE)", "yMMMM", "y年M月", "yMMMMd", "y年M月d日", "yMMMMEEEEd", "y年M月d日EEEE", "yQQQ", "y/QQQ", "yQQQQ", "y年QQQQ", "H", "H時", "Hm", "H:mm", "Hms", "H:mm:ss", "j", "H時", "jm", "H:mm", "jms", "H:mm:ss", "jmv", "H:mm v", "jmz", "H:mm z", "jz", "H時 z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1042() {
      return C1042 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d.M", "MEd", "EEE, d.M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M.y", "yMd", "d.M.y", "yMEd", "EEE, d.M.y", "yMMM", "MMM. y", "yMMMd", "d MMM. y", "yMMMEd", "EEE, d MMM. y", "yMMMM", "MMMM, y", "yMMMMd", "d MMMM, y", "yMMMMEEEEd", "EEEE, d MMMM, y", "yQQQ", "QQQ, y", "yQQQQ", "QQQQ, y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1043() {
      return C1043 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "dd.MM", "MEd", "dd.MM, EEE", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "d MMM, EEE", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "d MMMM, EEEE", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "MM.y", "yMd", "dd.MM.y", "yMEd", "dd.MM.y, EEE", "yMMM", "y 'ж'. MMM", "yMMMd", "y 'ж'. d MMM", "yMMMEd", "y 'ж'. d MMM, EEE", "yMMMM", "y 'ж'. MMMM", "yMMMMd", "y 'ж'. d MMMM", "yMMMMEEEEd", "y 'ж'. d MMMM, EEEE", "yQQQ", "y 'ж'. QQQ", "yQQQQ", "y 'ж'. QQQQ", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1044() {
      return C1044 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "EEE d/M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE d MMM", "MMMM", "LLLL", "MMMMd", "MMMM d", "MMMMEEEEd", "EEEE d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE d/M/y", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE d MMM y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE d MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "h a", "jm", "h:mm a", "jms", "h:mm:ss a", "jmv", "h:mm a v", "jmz", "h:mm a z", "jz", "h a z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1045() {
      return C1045 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "d/M, EEE", "MMM", "LLL", "MMMd", "MMM d", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE, M/d/y", "yMMM", "MMM y", "yMMMd", "MMM d,y", "yMMMEd", "EEE, MMM d, y", "yMMMM", "MMMM y", "yMMMMd", "MMMM d, y", "yMMMMEEEEd", "EEEE, MMMM d, y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "h a", "jm", "h:mm a", "jms", "h:mm:ss a", "jmv", "h:mm a v", "jmz", "h:mm a z", "jz", "h a z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1046() {
      return C1046 = dart.constMap(core.String, core.String, ["d", "d일", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "M월", "Md", "M. d.", "MEd", "M. d. (EEE)", "MMM", "LLL", "MMMd", "MMM d일", "MMMEd", "MMM d일 (EEE)", "MMMM", "LLLL", "MMMMd", "MMMM d일", "MMMMEEEEd", "MMMM d일 EEEE", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y년", "yM", "y. M.", "yMd", "y. M. d.", "yMEd", "y. M. d. (EEE)", "yMMM", "y년 MMM", "yMMMd", "y년 MMM d일", "yMMMEd", "y년 MMM d일 (EEE)", "yMMMM", "y년 MMMM", "yMMMMd", "y년 MMMM d일", "yMMMMEEEEd", "y년 MMMM d일 EEEE", "yQQQ", "y년 QQQ", "yQQQQ", "y년 QQQQ", "H", "H시", "Hm", "HH:mm", "Hms", "H시 m분 s초", "j", "a h시", "jm", "a h:mm", "jms", "a h:mm:ss", "jmv", "a h:mm v", "jmz", "a h:mm z", "jz", "a h시 z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1047() {
      return C1047 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "dd-MM", "MEd", "dd-MM, EEE", "MMM", "LLL", "MMMd", "d-MMM", "MMMEd", "d-MMM, EEE", "MMMM", "LLLL", "MMMMd", "d-MMMM", "MMMMEEEEd", "d-MMMM, EEEE", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "y-MM", "yMd", "y-dd-MM", "yMEd", "y-dd-MM, EEE", "yMMM", "y-'ж'. MMM", "yMMMd", "y-'ж'. d-MMM", "yMMMEd", "y-'ж'. d-MMM, EEE", "yMMMM", "y-'ж'., MMMM", "yMMMMd", "y-'ж'., d-MMMM", "yMMMMEEEEd", "y-'ж'., d-MMMM, EEEE", "yQQQ", "y-'ж'., QQQ", "yQQQQ", "y-'ж'., QQQQ", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1048() {
      return C1048 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "EEE, d/M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE d MMM", "MMMM", "LLLL", "MMMMd", "MMMM d", "MMMMEEEEd", "EEEE d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE, d/M/y", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE, d MMM y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE, d MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1049() {
      return C1049 = dart.constMap(core.String, core.String, ["d", "dd", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "MM", "Md", "MM-d", "MEd", "MM-dd, EEE", "MMM", "MM", "MMMd", "MM-dd", "MMMEd", "MM-dd, EEE", "MMMM", "LLLL", "MMMMd", "MMMM d 'd'.", "MMMMEEEEd", "MMMM d 'd'., EEEE", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "y-MM", "yMd", "y-MM-dd", "yMEd", "y-MM-dd, EEE", "yMMM", "y-MM", "yMMMd", "y-MM-dd", "yMMMEd", "y-MM-dd, EEE", "yMMMM", "y 'm'. LLLL", "yMMMMd", "y 'm'. MMMM d 'd'.", "yMMMMEEEEd", "y 'm'. MMMM d 'd'., EEEE", "yQQQ", "y QQQ", "yQQQQ", "y QQQQ", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm; v", "jmz", "HH:mm; z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1050() {
      return C1050 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "dd.MM.", "MEd", "EEE, dd.MM.", "MMM", "LLL", "MMMd", "d. MMM", "MMMEd", "EEE, d. MMM", "MMMM", "LLLL", "MMMMd", "d. MMMM", "MMMMEEEEd", "EEEE, d. MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y. 'g'.", "yM", "MM.y.", "yMd", "y.MM.d.", "yMEd", "EEE, d.M.y.", "yMMM", "y. 'g'. MMM", "yMMMd", "y. 'g'. d. MMM", "yMMMEd", "EEE, y. 'g'. d. MMM", "yMMMM", "y. 'g'. MMMM", "yMMMMd", "y. 'gada' d. MMMM", "yMMMMEEEEd", "EEEE, y. 'gada' d. MMMM", "yQQQ", "y. 'g'. QQQ", "yQQQQ", "y. 'g'. QQQQ", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1051() {
      return C1051 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d.M", "MEd", "EEE, d.M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M.y", "yMd", "d.M.y", "yMEd", "EEE, d.M.y", "yMMM", "MMM y 'г'.", "yMMMd", "d MMM y 'г'.", "yMMMEd", "EEE, d MMM y 'г'.", "yMMMM", "MMMM y 'г'.", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE, d MMMM y", "yQQQ", "QQQ y 'г'.", "yQQQQ", "QQQQ y 'г'.", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1052() {
      return C1052 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "d/M, EEE", "MMM", "LLL", "MMMd", "MMM d", "MMMEd", "MMM d, EEE", "MMMM", "LLLL", "MMMMd", "MMMM d", "MMMMEEEEd", "MMMM d, EEEE", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "y-MM", "yMd", "d/M/y", "yMEd", "d-M-y, EEE", "yMMM", "y MMM", "yMMMd", "y MMM d", "yMMMEd", "y MMM d, EEE", "yMMMM", "y MMMM", "yMMMMd", "y, MMMM d", "yMMMMEEEEd", "y, MMMM d, EEEE", "yQQQ", "y QQQ", "yQQQQ", "y QQQQ", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "h a", "jm", "h:mm a", "jms", "h:mm:ss a", "jmv", "h:mm a v", "jmz", "h:mm a z", "jz", "h a z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1053() {
      return C1053 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "MM/dd", "MEd", "MM/dd, EEE", "MMM", "LLL", "MMMd", "MMM'ын' d", "MMMEd", "MMM'ын' d, EEE", "MMMM", "LLLL", "MMMMd", "MMM'ын' d", "MMMMEEEEd", "MMMM'ын' d, EEEE", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "y M", "yMd", "y.MM.dd", "yMEd", "y.MM.dd, EEE", "yMMM", "y 'оны' MMM", "yMMMd", "y.MM.dd", "yMMMEd", "y.MM.dd, EEE", "yMMMM", "y 'оны' MMM", "yMMMMd", "y.MM.dd", "yMMMMEEEEd", "y.MM.dd, EEEE", "yQQQ", "y QQQ", "yQQQQ", "y 'оны' QQQQ", "H", "HH 'ц'", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH 'ц'", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH 'ц' z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1054() {
      return C1054 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "EEE, d/M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE, d/M/y", "yMMM", "MMM y", "yMMMd", "d MMM, y", "yMMMEd", "EEE, d, MMM y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM, y", "yMMMMEEEEd", "EEEE, d MMMM, y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "H:mm", "Hms", "H:mm:ss", "j", "h a", "jm", "h:mm a", "jms", "h:mm:ss a", "jmv", "h:mm a v", "jmz", "h:mm a z", "jz", "h a z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1055() {
      return C1055 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d-M", "MEd", "EEE, d-M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M-y", "yMd", "d/M/y", "yMEd", "EEE, d/M/y", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE, d MMM y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE, d MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "h a", "jm", "h:mm a", "jms", "h:mm:ss a", "jmv", "h:mm a v", "jmz", "h:mm a z", "jz", "h a z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1056() {
      return C1056 = dart.constMap(core.String, core.String, ["d", "d", "E", "cccနေ့", "EEEE", "ccccနေ့", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "d/M၊ EEE", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "MMM d၊ EEE", "MMMM", "LLLL", "MMMMd", "MMMM d", "MMMMEEEEd", "MMMM d ရက် EEEEနေ့", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "dd-MM-y", "yMEd", "d/M/y၊ EEE", "yMMM", "MMM y", "yMMMd", "y၊ MMM d", "yMMMEd", "y၊ MMM d၊ EEE", "yMMMM", "y MMMM", "yMMMMd", "y၊ d MMMM", "yMMMMEEEEd", "y၊ MMMM d၊ EEEE", "yQQQ", "y QQQ", "yQQQQ", "y QQQQ", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "v HH:mm", "jmz", "z HH:mm", "jz", "z HH", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1057() {
      return C1057 = dart.constMap(core.String, core.String, ["d", "d.", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L.", "Md", "d.M.", "MEd", "EEE d.M.", "MMM", "LLL", "MMMd", "d. MMM", "MMMEd", "EEE d. MMM", "MMMM", "LLLL", "MMMMd", "d. MMMM", "MMMMEEEEd", "EEEE d. MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M.y", "yMd", "d.M.y", "yMEd", "EEE d.MM.y", "yMMM", "MMM y", "yMMMd", "d. MMM y", "yMMMEd", "EEE d. MMM y", "yMMMM", "MMMM y", "yMMMMd", "d. MMMM y", "yMMMMEEEEd", "EEEE d. MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1058() {
      return C1058 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "MM-dd", "MEd", "MM-dd, EEE", "MMM", "LLL", "MMMd", "MMM d", "MMMEd", "MMM d, EEE", "MMMM", "LLLL", "MMMMd", "MMMM d", "MMMMEEEEd", "MMMM d, EEEE", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "y-MM", "yMd", "y-MM-dd", "yMEd", "y-MM-dd, EEE", "yMMM", "y MMM", "yMMMd", "y MMM d", "yMMMEd", "y MMM d, EEE", "yMMMM", "y MMMM", "yMMMMd", "y MMMM d", "yMMMMEEEEd", "y MMMM d, EEEE", "yQQQ", "y QQQ", "yQQQQ", "y QQQQ", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1059() {
      return C1059 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d-M", "MEd", "EEE d-M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M-y", "yMd", "d-M-y", "yMEd", "EEE d-M-y", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE d MMM y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE d MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1060() {
      return C1060 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "EEE, dd-MM.", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "MMMM d", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE, d/M/y", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE, d MMM y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE, d MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "h a", "jm", "h:mm a", "jms", "h:mm:ss a", "jmv", "h:mm a v", "jmz", "h:mm a z", "jz", "h a z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1061() {
      return C1061 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d.MM", "MEd", "EEE, d.MM", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "MM.y", "yMd", "d.MM.y", "yMEd", "EEE, d.MM.y", "yMMM", "LLL y", "yMMMd", "d MMM y", "yMMMEd", "EEE, d MMM y", "yMMMM", "LLLL y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE, d MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1062() {
      return C1062 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "MM-dd", "MEd", "MM-dd, EEE", "MMM", "LLL", "MMMd", "MMM d", "MMMEd", "MMM d, EEE", "MMMM", "LLLL", "MMMMd", "MMMM d", "MMMMEEEEd", "MMMM d, EEEE", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "y-MM", "yMd", "y-MM-dd", "yMEd", "y-MM-dd, EEE", "yMMM", "y MMM", "yMMMd", "y MMM d", "yMMMEd", "y MMM d, EEE", "yMMMM", "y MMMM", "yMMMMd", "د y د MMMM d", "yMMMMEEEEd", "EEEE د y د MMMM d", "yQQQ", "y QQQ", "yQQQQ", "y QQQQ", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH (z)", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1063() {
      return C1063 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "EEE, dd/MM", "MMM", "LLL", "MMMd", "d 'de' MMM", "MMMEd", "EEE, d 'de' MMM", "MMMM", "LLLL", "MMMMd", "d 'de' MMMM", "MMMMEEEEd", "EEEE, d 'de' MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "MM/y", "yMd", "dd/MM/y", "yMEd", "EEE, dd/MM/y", "yMMM", "MMM 'de' y", "yMMMd", "d 'de' MMM 'de' y", "yMMMEd", "EEE, d 'de' MMM 'de' y", "yMMMM", "MMMM 'de' y", "yMMMMd", "d 'de' MMMM 'de' y", "yMMMMEEEEd", "EEEE, d 'de' MMMM 'de' y", "yQQQ", "QQQ 'de' y", "yQQQQ", "QQQQ 'de' y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1064() {
      return C1064 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "dd/MM", "MEd", "EEE, dd/MM", "MMM", "LLL", "MMMd", "d/MM", "MMMEd", "EEE, d/MM", "MMMM", "LLLL", "MMMMd", "d 'de' MMMM", "MMMMEEEEd", "cccc, d 'de' MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "MM/y", "yMd", "dd/MM/y", "yMEd", "EEE, dd/MM/y", "yMMM", "MM/y", "yMMMd", "d/MM/y", "yMMMEd", "EEE, d/MM/y", "yMMMM", "MMMM 'de' y", "yMMMMd", "d 'de' MMMM 'de' y", "yMMMMEEEEd", "EEEE, d 'de' MMMM 'de' y", "yQQQ", "QQQQ 'de' y", "yQQQQ", "QQQQ 'de' y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1065() {
      return C1065 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "dd.MM", "MEd", "EEE, dd.MM", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "MM.y", "yMd", "dd.MM.y", "yMEd", "EEE, dd.MM.y", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE, d MMM y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE, d MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1066() {
      return C1066 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "dd.MM", "MEd", "EEE, dd.MM", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "ccc, d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "cccc, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "MM.y", "yMd", "dd.MM.y", "yMEd", "ccc, dd.MM.y 'г'.", "yMMM", "LLL y 'г'.", "yMMMd", "d MMM y 'г'.", "yMMMEd", "EEE, d MMM y 'г'.", "yMMMM", "LLLL y 'г'.", "yMMMMd", "d MMMM y 'г'.", "yMMMMEEEEd", "EEEE, d MMMM y 'г'.", "yQQQ", "QQQ y 'г'.", "yQQQQ", "QQQQ y 'г'.", "H", "H", "Hm", "H:mm", "Hms", "H:mm:ss", "j", "H", "jm", "H:mm", "jms", "H:mm:ss", "jmv", "H:mm v", "jmz", "H:mm z", "jz", "H z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1067() {
      return C1067 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "M-d", "MEd", "M-d, EEE", "MMM", "LLL", "MMMd", "MMM d", "MMMEd", "MMM d EEE", "MMMM", "LLLL", "MMMMd", "MMMM d", "MMMMEEEEd", "MMMM d EEEE", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "y-M", "yMd", "y-M-d", "yMEd", "y-M-d, EEE", "yMMM", "y MMM", "yMMMd", "y MMM d", "yMMMEd", "y MMM d, EEE", "yMMMM", "y MMMM", "yMMMMd", "y MMMM d", "yMMMMEEEEd", "y MMMM d, EEEE", "yQQQ", "y QQQ", "yQQQQ", "y QQQQ", "H", "HH", "Hm", "HH.mm", "Hms", "HH.mm.ss", "j", "HH", "jm", "HH.mm", "jms", "HH.mm.ss", "jmv", "HH.mm v", "jmz", "HH.mm z", "jz", "HH z", "m", "m", "ms", "mm.ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1068() {
      return C1068 = dart.constMap(core.String, core.String, ["d", "d.", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L.", "Md", "d. M.", "MEd", "EEE d. M.", "MMM", "LLL", "MMMd", "d. M.", "MMMEd", "EEE d. M.", "MMMM", "LLLL", "MMMMd", "d. MMMM", "MMMMEEEEd", "EEEE d. MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d. M. y", "yMEd", "EEE d. M. y", "yMMM", "M/y", "yMMMd", "d. M. y", "yMMMEd", "EEE d. M. y", "yMMMM", "LLLL y", "yMMMMd", "d. MMMM y", "yMMMMEEEEd", "EEEE d. MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "H", "Hm", "H:mm", "Hms", "H:mm:ss", "j", "H", "jm", "H:mm", "jms", "H:mm:ss", "jmv", "H:mm v", "jmz", "H:mm z", "jz", "H z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1069() {
      return C1069 = dart.constMap(core.String, core.String, ["d", "d.", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d. M.", "MEd", "EEE, d. M.", "MMM", "LLL", "MMMd", "d. MMM", "MMMEd", "EEE, d. MMM", "MMMM", "LLLL", "MMMMd", "d. MMMM", "MMMMEEEEd", "EEEE, d. MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d. M. y", "yMEd", "EEE, d. M. y", "yMMM", "MMM y", "yMMMd", "d. MMM y", "yMMMEd", "EEE, d. MMM y", "yMMMM", "MMMM y", "yMMMMd", "d. MMMM y", "yMMMMEEEEd", "EEEE, d. MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH'h'", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH'h'", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH'h' z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1070() {
      return C1070 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d.M", "MEd", "EEE, d.M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M.y", "yMd", "d.M.y", "yMEd", "EEE, d.M.y", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE, d MMM y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE, d MMMM y", "yQQQ", "QQQ, y", "yQQQQ", "QQQQ, y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "h a", "jm", "h:mm a", "jms", "h:mm:ss a", "jmv", "h:mm a, v", "jmz", "h:mm a, z", "jz", "h a, z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1071() {
      return C1071 = dart.constMap(core.String, core.String, ["d", "d", "E", "EEE", "EEEE", "EEEE", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d.M.", "MEd", "EEE, d.M.", "MMM", "LLL", "MMMd", "d. MMM", "MMMEd", "EEE d. MMM", "MMMM", "LLLL", "MMMMd", "d. MMMM", "MMMMEEEEd", "EEEE, d. MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y.", "yM", "M.y.", "yMd", "d.M.y.", "yMEd", "EEE, d.M.y.", "yMMM", "MMM y.", "yMMMd", "d. MMM y.", "yMMMEd", "EEE, d. MMM y.", "yMMMM", "MMMM y.", "yMMMMd", "d. MMMM y.", "yMMMMEEEEd", "EEEE, d. MMMM y.", "yQQQ", "QQQ y.", "yQQQQ", "QQQQ y.", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1072() {
      return C1072 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "EEE d/M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "y-MM", "yMd", "y-MM-dd", "yMEd", "EEE, y-MM-dd", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE d MMM y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE d MMMM y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1073() {
      return C1073 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "EEE, d/M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE, d/M/y", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE, MMM d, y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "EEEE, d MMMM y", "yQQQ", "y QQQ", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1074() {
      return C1074 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "dd-MM, EEE", "MMM", "LLL", "MMMd", "MMM d", "MMMEd", "MMM d, EEE", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "MMMM d, EEEE", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE, d/M/y", "yMMM", "MMM y", "yMMMd", "d MMM, y", "yMMMEd", "EEE, d MMM, y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM, y", "yMMMMEEEEd", "EEEE, d MMMM, y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "a h", "jm", "a h:mm", "jms", "a h:mm:ss", "jmv", "a h:mm v", "jmz", "a h:mm z", "jz", "a h z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1075() {
      return C1075 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "d/M, EEE", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "d MMM, EEE", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "d MMMM, EEEE", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "d/M/y, EEE", "yMMM", "MMM y", "yMMMd", "d, MMM y", "yMMMEd", "d MMM, y, EEE", "yMMMM", "MMMM y", "yMMMMd", "d MMMM, y", "yMMMMEEEEd", "d, MMMM y, EEEE", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "h a", "jm", "h:mm a", "jms", "h:mm:ss a", "jmv", "h:mm a v", "jmz", "h:mm a z", "jz", "h a z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1076() {
      return C1076 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "EEE d/M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEEที่ d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE d/M/y", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "EEE d MMM y", "yMMMM", "MMMM G y", "yMMMMd", "d MMMM G y", "yMMMMEEEEd", "EEEEที่ d MMMM G y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ G y", "H", "HH", "Hm", "HH:mm น.", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm น.", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1077() {
      return C1077 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "d/MM EEE", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "d MMMM EEE", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "d MMMM EEEE", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "MM/y", "yMd", "dd.MM.y", "yMEd", "d.M.y EEE", "yMMM", "MMM y", "yMMMd", "d MMM y", "yMMMEd", "d MMM y EEE", "yMMMM", "MMMM y", "yMMMMd", "d MMMM y", "yMMMMEEEEd", "d MMMM y EEEE", "yQQQ", "y QQQ", "yQQQQ", "y QQQQ", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1078() {
      return C1078 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "LL", "Md", "dd.MM", "MEd", "EEE, dd.MM", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "MM.y", "yMd", "dd.MM.y", "yMEd", "EEE, dd.MM.y", "yMMM", "LLL y", "yMMMd", "d MMM y", "yMMMEd", "EEE, d MMM y", "yMMMM", "LLLL y", "yMMMMd", "d MMMM y 'р'.", "yMMMMEEEEd", "EEEE, d MMMM y 'р'.", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y 'р'.", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1079() {
      return C1079 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "d/M", "MEd", "EEE، d/M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE، d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE، d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE، d/M/y", "yMMM", "MMM y", "yMMMd", "d MMM، y", "yMMMEd", "EEE، d MMM، y", "yMMMM", "MMMM y", "yMMMMd", "d MMMM، y", "yMMMMEEEEd", "EEEE، d MMMM، y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "h a", "jm", "h:mm a", "jms", "h:mm:ss a", "jmv", "h:mm a v", "jmz", "h:mm a z", "jz", "h a z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1080() {
      return C1080 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "LL", "Md", "dd/MM", "MEd", "EEE, dd/MM", "MMM", "LLL", "MMMd", "d-MMM", "MMMEd", "EEE, d-MMM", "MMMM", "LLLL", "MMMMd", "d-MMMM", "MMMMEEEEd", "EEEE, d-MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "MM.y", "yMd", "dd/MM/y", "yMEd", "EEE, dd/MM/y", "yMMM", "MMM, y", "yMMMd", "d-MMM, y", "yMMMEd", "EEE, d-MMM, y", "yMMMM", "MMMM, y", "yMMMMd", "d-MMMM, y", "yMMMMEEEEd", "EEEE, d-MMMM, y", "yQQQ", "y, QQQ", "yQQQQ", "y, QQQQ", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm (v)", "jmz", "HH:mm (z)", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1081() {
      return C1081 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "dd/M", "MEd", "EEE, dd/M", "MMM", "LLL", "MMMd", "d MMM", "MMMEd", "EEE, d MMM", "MMMM", "LLLL", "MMMMd", "d MMMM", "MMMMEEEEd", "EEEE, d MMMM", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "M/y", "yMd", "d/M/y", "yMEd", "EEE, dd/M/y", "yMMM", "MMM y", "yMMMd", "d MMM, y", "yMMMEd", "EEE, d MMM, y", "yMMMM", "MMMM 'năm' y", "yMMMMd", "d MMMM, y", "yMMMMEEEEd", "EEEE, d MMMM, y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ 'năm' y", "H", "HH", "Hm", "H:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "H:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1082() {
      return C1082 = dart.constMap(core.String, core.String, ["d", "d日", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "M月", "Md", "M/d", "MEd", "M/dEEE", "MMM", "LLL", "MMMd", "M月d日", "MMMEd", "M月d日EEE", "MMMM", "LLLL", "MMMMd", "M月d日", "MMMMEEEEd", "M月d日EEEE", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y年", "yM", "y年M月", "yMd", "y/M/d", "yMEd", "y/M/dEEE", "yMMM", "y年M月", "yMMMd", "y年M月d日", "yMMMEd", "y年M月d日EEE", "yMMMM", "y年M月", "yMMMMd", "y年M月d日", "yMMMMEEEEd", "y年M月d日EEEE", "yQQQ", "y年第Q季度", "yQQQQ", "y年第Q季度", "H", "H时", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "ah时", "jm", "ah:mm", "jms", "ah:mm:ss", "jmv", "v ah:mm", "jmz", "z ah:mm", "jz", "zah时", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1083() {
      return C1083 = dart.constMap(core.String, core.String, ["d", "d日", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "M月", "Md", "d/M", "MEd", "d/M（EEE）", "MMM", "LLL", "MMMd", "M月d日", "MMMEd", "M月d日EEE", "MMMM", "LLLL", "MMMMd", "M月d日", "MMMMEEEEd", "M月d日EEEE", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y年", "yM", "M/y", "yMd", "d/M/y", "yMEd", "d/M/y（EEE）", "yMMM", "y年M月", "yMMMd", "y年M月d日", "yMMMEd", "y年M月d日EEE", "yMMMM", "y年M月", "yMMMMd", "y年M月d日", "yMMMMEEEEd", "y年M月d日EEEE", "yQQQ", "y年QQQ", "yQQQQ", "y年QQQQ", "H", "H時", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "ah時", "jm", "ah:mm", "jms", "ah:mm:ss", "jmv", "ah:mm [v]", "jmz", "ah:mm [z]", "jz", "ah時 z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1084() {
      return C1084 = dart.constMap(core.String, core.String, ["d", "d日", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "M月", "Md", "M/d", "MEd", "M/d（EEE）", "MMM", "LLL", "MMMd", "M月d日", "MMMEd", "M月d日 EEE", "MMMM", "LLLL", "MMMMd", "M月d日", "MMMMEEEEd", "M月d日 EEEE", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y年", "yM", "y/M", "yMd", "y/M/d", "yMEd", "y/M/d（EEE）", "yMMM", "y年M月", "yMMMd", "y年M月d日", "yMMMEd", "y年M月d日 EEE", "yMMMM", "y年M月", "yMMMMd", "y年M月d日", "yMMMMEEEEd", "y年M月d日 EEEE", "yQQQ", "y年QQQ", "yQQQQ", "y年QQQQ", "H", "H時", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "ah時", "jm", "ah:mm", "jms", "ah:mm:ss", "jmv", "ah:mm [v]", "jmz", "ah:mm [z]", "jz", "ah時 z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C1085() {
      return C1085 = dart.constMap(core.String, core.String, ["d", "d", "E", "ccc", "EEEE", "cccc", "LLL", "LLL", "LLLL", "LLLL", "M", "L", "Md", "MM-dd", "MEd", "MM-dd, EEE", "MMM", "LLL", "MMMd", "MMM d", "MMMEd", "EEE, MMM d", "MMMM", "LLLL", "MMMMd", "MMMM d", "MMMMEEEEd", "EEEE, MMMM d", "QQQ", "QQQ", "QQQQ", "QQQQ", "y", "y", "yM", "y-MM", "yMd", "y-MM-dd", "yMEd", "y-MM-dd, EEE", "yMMM", "MMM y", "yMMMd", "MMM d, y", "yMMMEd", "EEE, MMM d, y", "yMMMM", "MMMM y", "yMMMMd", "MMMM d, y", "yMMMMEEEEd", "EEEE, MMMM d, y", "yQQQ", "QQQ y", "yQQQQ", "QQQQ y", "H", "HH", "Hm", "HH:mm", "Hms", "HH:mm:ss", "j", "HH", "jm", "HH:mm", "jms", "HH:mm:ss", "jmv", "HH:mm v", "jmz", "HH:mm z", "jz", "HH z", "m", "m", "ms", "mm:ss", "s", "s", "v", "v", "z", "z", "zzzz", "zzzz", "ZZZZ", "ZZZZ"]);
    },
    get C998() {
      return C998 = dart.constMap(core.String, MapOfString$String(), ["af", C999 || CT.C999, "am", C1000 || CT.C1000, "ar", C1001 || CT.C1001, "az", C1002 || CT.C1002, "be", C1003 || CT.C1003, "bg", C1004 || CT.C1004, "bn", C1005 || CT.C1005, "bs", C1006 || CT.C1006, "ca", C1007 || CT.C1007, "cs", C1008 || CT.C1008, "da", C1009 || CT.C1009, "de", C1010 || CT.C1010, "de_CH", C1010 || CT.C1010, "el", C1011 || CT.C1011, "en", C1012 || CT.C1012, "en_AU", C1013 || CT.C1013, "en_CA", C1014 || CT.C1014, "en_GB", C1015 || CT.C1015, "en_IE", C1016 || CT.C1016, "en_IN", C1017 || CT.C1017, "en_SG", C1018 || CT.C1018, "en_ZA", C1019 || CT.C1019, "es", C1020 || CT.C1020, "es_419", C1021 || CT.C1021, "es_MX", C1022 || CT.C1022, "es_US", C1023 || CT.C1023, "et", C1024 || CT.C1024, "eu", C1025 || CT.C1025, "fa", C1026 || CT.C1026, "fi", C1027 || CT.C1027, "fil", C1012 || CT.C1012, "fr", C1028 || CT.C1028, "fr_CA", C1029 || CT.C1029, "gl", C1030 || CT.C1030, "gsw", C1031 || CT.C1031, "gu", C1032 || CT.C1032, "he", C1033 || CT.C1033, "hi", C1034 || CT.C1034, "hr", C1035 || CT.C1035, "hu", C1036 || CT.C1036, "hy", C1037 || CT.C1037, "id", C1038 || CT.C1038, "is", C1039 || CT.C1039, "it", C1040 || CT.C1040, "ja", C1041 || CT.C1041, "ka", C1042 || CT.C1042, "kk", C1043 || CT.C1043, "km", C1044 || CT.C1044, "kn", C1045 || CT.C1045, "ko", C1046 || CT.C1046, "ky", C1047 || CT.C1047, "lo", C1048 || CT.C1048, "lt", C1049 || CT.C1049, "lv", C1050 || CT.C1050, "mk", C1051 || CT.C1051, "ml", C1052 || CT.C1052, "mn", C1053 || CT.C1053, "mr", C1054 || CT.C1054, "ms", C1055 || CT.C1055, "my", C1056 || CT.C1056, "nb", C1057 || CT.C1057, "ne", C1058 || CT.C1058, "nl", C1059 || CT.C1059, "or", C1012 || CT.C1012, "pa", C1060 || CT.C1060, "pl", C1061 || CT.C1061, "ps", C1062 || CT.C1062, "pt", C1063 || CT.C1063, "pt_PT", C1064 || CT.C1064, "ro", C1065 || CT.C1065, "ru", C1066 || CT.C1066, "si", C1067 || CT.C1067, "sk", C1068 || CT.C1068, "sl", C1069 || CT.C1069, "sq", C1070 || CT.C1070, "sr", C1071 || CT.C1071, "sr_Latn", C1071 || CT.C1071, "sv", C1072 || CT.C1072, "sw", C1073 || CT.C1073, "ta", C1074 || CT.C1074, "te", C1075 || CT.C1075, "th", C1076 || CT.C1076, "tl", C1012 || CT.C1012, "tr", C1077 || CT.C1077, "uk", C1078 || CT.C1078, "ur", C1079 || CT.C1079, "uz", C1080 || CT.C1080, "vi", C1081 || CT.C1081, "zh", C1082 || CT.C1082, "zh_HK", C1083 || CT.C1083, "zh_TW", C1084 || CT.C1084, "zu", C1085 || CT.C1085]);
    },
    get C1086() {
      return C1086 = dart.constList([C13 || CT.C13, C14 || CT.C14], localizations.LocalizationsDelegate);
    },
    get C1087() {
      return C1087 = dart.constList(["af", "am", "ar", "as", "az", "be", "bg", "bn", "bs", "ca", "cs", "da", "de", "el", "en", "es", "et", "eu", "fa", "fi", "fil", "fr", "gl", "gsw", "gu", "he", "hi", "hr", "hu", "hy", "id", "is", "it", "ja", "ka", "kk", "km", "kn", "ko", "ky", "lo", "lt", "lv", "mk", "ml", "mn", "mr", "ms", "my", "nb", "ne", "nl", "or", "pa", "pl", "pt", "ro", "ru", "si", "sk", "sl", "sq", "sr", "sv", "sw", "ta", "te", "th", "tl", "tr", "uk", "ur", "uz", "vi", "zh", "zu"], core.String);
    }
  });
  const _localeName = dart.privateName(material_localizations$, "_localeName");
  const _fullYearFormat = dart.privateName(material_localizations$, "_fullYearFormat");
  const _mediumDateFormat = dart.privateName(material_localizations$, "_mediumDateFormat");
  const _longDateFormat = dart.privateName(material_localizations$, "_longDateFormat");
  const _yearMonthFormat = dart.privateName(material_localizations$, "_yearMonthFormat");
  const _decimalFormat = dart.privateName(material_localizations$, "_decimalFormat");
  const _twoDigitZeroPaddedFormat = dart.privateName(material_localizations$, "_twoDigitZeroPaddedFormat");
  const _name = dart.privateName(time, "_name");
  let C0;
  let C1;
  let C2;
  const _formatDayPeriod = dart.privateName(material_localizations$, "_formatDayPeriod");
  let C3;
  let C4;
  let C5;
  let C6;
  let C7;
  let C8;
  let C9;
  let C10;
  const GlobalMaterialLocalizations__localeName = dart.privateName(material_localizations$, "GlobalMaterialLocalizations._localeName");
  const GlobalMaterialLocalizations__fullYearFormat = dart.privateName(material_localizations$, "GlobalMaterialLocalizations._fullYearFormat");
  const GlobalMaterialLocalizations__mediumDateFormat = dart.privateName(material_localizations$, "GlobalMaterialLocalizations._mediumDateFormat");
  const GlobalMaterialLocalizations__longDateFormat = dart.privateName(material_localizations$, "GlobalMaterialLocalizations._longDateFormat");
  const GlobalMaterialLocalizations__yearMonthFormat = dart.privateName(material_localizations$, "GlobalMaterialLocalizations._yearMonthFormat");
  const GlobalMaterialLocalizations__decimalFormat = dart.privateName(material_localizations$, "GlobalMaterialLocalizations._decimalFormat");
  const GlobalMaterialLocalizations__twoDigitZeroPaddedFormat = dart.privateName(material_localizations$, "GlobalMaterialLocalizations._twoDigitZeroPaddedFormat");
  let C11;
  let C13;
  let C14;
  let C12;
  material_localizations$.GlobalMaterialLocalizations = class GlobalMaterialLocalizations extends core.Object {
    get [_localeName]() {
      return this[_localeName$];
    }
    set [_localeName](value) {
      super[_localeName] = value;
    }
    get [_fullYearFormat]() {
      return this[_fullYearFormat$];
    }
    set [_fullYearFormat](value) {
      super[_fullYearFormat] = value;
    }
    get [_mediumDateFormat]() {
      return this[_mediumDateFormat$];
    }
    set [_mediumDateFormat](value) {
      super[_mediumDateFormat] = value;
    }
    get [_longDateFormat]() {
      return this[_longDateFormat$];
    }
    set [_longDateFormat](value) {
      super[_longDateFormat] = value;
    }
    get [_yearMonthFormat]() {
      return this[_yearMonthFormat$];
    }
    set [_yearMonthFormat](value) {
      super[_yearMonthFormat] = value;
    }
    get [_decimalFormat]() {
      return this[_decimalFormat$];
    }
    set [_decimalFormat](value) {
      super[_decimalFormat] = value;
    }
    get [_twoDigitZeroPaddedFormat]() {
      return this[_twoDigitZeroPaddedFormat$];
    }
    set [_twoDigitZeroPaddedFormat](value) {
      super[_twoDigitZeroPaddedFormat] = value;
    }
    formatHour(timeOfDay, opts) {
      let alwaysUse24HourFormat = opts && 'alwaysUse24HourFormat' in opts ? opts.alwaysUse24HourFormat : false;
      switch (time.hourFormat({of: this.timeOfDayFormat({alwaysUse24HourFormat: alwaysUse24HourFormat})})) {
        case C0 || CT.C0:
        {
          return this[_twoDigitZeroPaddedFormat].format(timeOfDay.hour);
        }
        case C1 || CT.C1:
        {
          return this.formatDecimal(timeOfDay.hour);
        }
        case C2 || CT.C2:
        {
          let hour = timeOfDay.hourOfPeriod;
          return this.formatDecimal(hour === 0 ? 12 : hour);
        }
      }
      return null;
    }
    formatMinute(timeOfDay) {
      return this[_twoDigitZeroPaddedFormat].format(timeOfDay.minute);
    }
    formatYear(date) {
      return this[_fullYearFormat].format(date);
    }
    formatMediumDate(date) {
      return this[_mediumDateFormat].format(date);
    }
    formatFullDate(date) {
      return this[_longDateFormat].format(date);
    }
    formatMonthYear(date) {
      return this[_yearMonthFormat].format(date);
    }
    get narrowWeekdays() {
      return this[_longDateFormat].dateSymbols.NARROWWEEKDAYS;
    }
    get firstDayOfWeekIndex() {
      return (dart.notNull(this[_longDateFormat].dateSymbols.FIRSTDAYOFWEEK) + 1)[$modulo](7);
    }
    formatDecimal(number) {
      return this[_decimalFormat].format(number);
    }
    formatTimeOfDay(timeOfDay, opts) {
      let alwaysUse24HourFormat = opts && 'alwaysUse24HourFormat' in opts ? opts.alwaysUse24HourFormat : false;
      let hour = this.formatHour(timeOfDay, {alwaysUse24HourFormat: alwaysUse24HourFormat});
      let minute = this.formatMinute(timeOfDay);
      switch (this.timeOfDayFormat({alwaysUse24HourFormat: alwaysUse24HourFormat})) {
        case C3 || CT.C3:
        {
          return dart.str(hour) + ":" + dart.str(minute) + " " + dart.str(this[_formatDayPeriod](timeOfDay));
        }
        case C4 || CT.C4:
        case C5 || CT.C5:
        {
          return dart.str(hour) + ":" + dart.str(minute);
        }
        case C6 || CT.C6:
        {
          return dart.str(hour) + "." + dart.str(minute);
        }
        case C7 || CT.C7:
        {
          return dart.str(this[_formatDayPeriod](timeOfDay)) + " " + dart.str(hour) + ":" + dart.str(minute);
        }
        case C8 || CT.C8:
        {
          return dart.str(hour) + " h " + dart.str(minute);
        }
      }
      return null;
    }
    [_formatDayPeriod](timeOfDay) {
      switch (timeOfDay.period) {
        case C9 || CT.C9:
        {
          return this.anteMeridiemAbbreviation;
        }
        case C10 || CT.C10:
        {
          return this.postMeridiemAbbreviation;
        }
      }
      return null;
    }
    aboutListTileTitle(applicationName) {
      let text = this.aboutListTileTitleRaw;
      return text[$replaceFirst]("$applicationName", applicationName);
    }
    pageRowsInfoTitle(firstRow, lastRow, rowCount, rowCountIsApproximate) {
      let text = dart.test(rowCountIsApproximate) ? this.pageRowsInfoTitleApproximateRaw : null;
      text == null ? text = this.pageRowsInfoTitleRaw : null;
      if (!(text != null)) dart.assertFailed("A " + dart.str(this[_localeName]) + " localization was not found for pageRowsInfoTitle or pageRowsInfoTitleApproximate", "org-dartlang-app:///packages/flutter_localizations/src/material_localizations.dart", 238, 12, "text != null");
      return text[$replaceFirst]("$firstRow", this.formatDecimal(firstRow))[$replaceFirst]("$lastRow", this.formatDecimal(lastRow))[$replaceFirst]("$rowCount", this.formatDecimal(rowCount));
    }
    tabLabel(opts) {
      let tabIndex = opts && 'tabIndex' in opts ? opts.tabIndex : null;
      let tabCount = opts && 'tabCount' in opts ? opts.tabCount : null;
      if (!(dart.notNull(tabIndex) >= 1)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter_localizations/src/material_localizations.dart", 252, 12, "tabIndex >= 1");
      if (!(dart.notNull(tabCount) >= 1)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter_localizations/src/material_localizations.dart", 253, 12, "tabCount >= 1");
      let template = this.tabLabelRaw;
      return template[$replaceFirst]("$tabIndex", this.formatDecimal(tabIndex))[$replaceFirst]("$tabCount", this.formatDecimal(tabCount));
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return null;
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    selectedRowCountTitle(selectedRowCount) {
      return intl.Intl.pluralLogic(core.String, selectedRowCount, {zero: this.selectedRowCountTitleZero, one: this.selectedRowCountTitleOne, two: this.selectedRowCountTitleTwo, few: this.selectedRowCountTitleFew, many: this.selectedRowCountTitleMany, other: this.selectedRowCountTitleOther, locale: this[_localeName]})[$replaceFirst]("$selectedRowCount", this.formatDecimal(selectedRowCount));
    }
    timeOfDayFormat(opts) {
      let alwaysUse24HourFormat = opts && 'alwaysUse24HourFormat' in opts ? opts.alwaysUse24HourFormat : false;
      if (!(alwaysUse24HourFormat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter_localizations/src/material_localizations.dart", 386, 12, "t(alwaysUse24HourFormat != nu");
      if (dart.test(alwaysUse24HourFormat)) return material_localizations$._get24HourVersionOf(this.timeOfDayFormatRaw);
      return this.timeOfDayFormatRaw;
    }
    get remainingTextFieldCharacterCountOne() {
      return null;
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    remainingTextFieldCharacterCount(remainingCount) {
      return intl.Intl.pluralLogic(core.String, remainingCount, {zero: this.remainingTextFieldCharacterCountZero, one: this.remainingTextFieldCharacterCountOne, two: this.remainingTextFieldCharacterCountTwo, many: this.remainingTextFieldCharacterCountMany, few: this.remainingTextFieldCharacterCountFew, other: this.remainingTextFieldCharacterCountOther, locale: this[_localeName]})[$replaceFirst]("$remainingCount", this.formatDecimal(remainingCount));
    }
  };
  (material_localizations$.GlobalMaterialLocalizations.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : null;
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    if (!(localeName != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter_localizations/src/material_localizations.dart", 98, 15, "localeName != null");
    this[_localeName$] = localeName;
    if (!(fullYearFormat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter_localizations/src/material_localizations.dart", 100, 15, "fullYearFormat != null");
    this[_fullYearFormat$] = fullYearFormat;
    if (!(mediumDateFormat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter_localizations/src/material_localizations.dart", 102, 15, "mediumDateFormat != null");
    this[_mediumDateFormat$] = mediumDateFormat;
    if (!(longDateFormat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter_localizations/src/material_localizations.dart", 104, 15, "longDateFormat != null");
    this[_longDateFormat$] = longDateFormat;
    if (!(yearMonthFormat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter_localizations/src/material_localizations.dart", 106, 15, "yearMonthFormat != null");
    this[_yearMonthFormat$] = yearMonthFormat;
    if (!(decimalFormat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter_localizations/src/material_localizations.dart", 108, 15, "decimalFormat != null");
    this[_decimalFormat$] = decimalFormat;
    if (!(twoDigitZeroPaddedFormat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter_localizations/src/material_localizations.dart", 110, 15, "twoDigitZeroPaddedFormat != null");
    this[_twoDigitZeroPaddedFormat$] = twoDigitZeroPaddedFormat;
    ;
  }).prototype = material_localizations$.GlobalMaterialLocalizations.prototype;
  dart.addTypeTests(material_localizations$.GlobalMaterialLocalizations);
  const _localeName$ = GlobalMaterialLocalizations__localeName;
  const _fullYearFormat$ = GlobalMaterialLocalizations__fullYearFormat;
  const _mediumDateFormat$ = GlobalMaterialLocalizations__mediumDateFormat;
  const _longDateFormat$ = GlobalMaterialLocalizations__longDateFormat;
  const _yearMonthFormat$ = GlobalMaterialLocalizations__yearMonthFormat;
  const _decimalFormat$ = GlobalMaterialLocalizations__decimalFormat;
  const _twoDigitZeroPaddedFormat$ = GlobalMaterialLocalizations__twoDigitZeroPaddedFormat;
  material_localizations$.GlobalMaterialLocalizations[dart.implements] = () => [material_localizations.MaterialLocalizations];
  dart.setMethodSignature(material_localizations$.GlobalMaterialLocalizations, () => ({
    __proto__: dart.getMethods(material_localizations$.GlobalMaterialLocalizations.__proto__),
    formatHour: dart.fnType(core.String, [time.TimeOfDay], {alwaysUse24HourFormat: core.bool}),
    formatMinute: dart.fnType(core.String, [time.TimeOfDay]),
    formatYear: dart.fnType(core.String, [core.DateTime]),
    formatMediumDate: dart.fnType(core.String, [core.DateTime]),
    formatFullDate: dart.fnType(core.String, [core.DateTime]),
    formatMonthYear: dart.fnType(core.String, [core.DateTime]),
    formatDecimal: dart.fnType(core.String, [core.int]),
    formatTimeOfDay: dart.fnType(core.String, [time.TimeOfDay], {alwaysUse24HourFormat: core.bool}),
    [_formatDayPeriod]: dart.fnType(core.String, [time.TimeOfDay]),
    aboutListTileTitle: dart.fnType(core.String, [core.String]),
    pageRowsInfoTitle: dart.fnType(core.String, [core.int, core.int, core.int, core.bool]),
    tabLabel: dart.fnType(core.String, [], {tabCount: core.int, tabIndex: core.int}),
    selectedRowCountTitle: dart.fnType(core.String, [core.int]),
    timeOfDayFormat: dart.fnType(time.TimeOfDayFormat, [], {alwaysUse24HourFormat: core.bool}),
    remainingTextFieldCharacterCount: dart.fnType(core.String, [core.int])
  }));
  dart.setGetterSignature(material_localizations$.GlobalMaterialLocalizations, () => ({
    __proto__: dart.getGetters(material_localizations$.GlobalMaterialLocalizations.__proto__),
    narrowWeekdays: core.List$(core.String),
    firstDayOfWeekIndex: core.int,
    selectedRowCountTitleZero: core.String,
    selectedRowCountTitleOne: core.String,
    selectedRowCountTitleTwo: core.String,
    selectedRowCountTitleFew: core.String,
    selectedRowCountTitleMany: core.String,
    remainingTextFieldCharacterCountOne: core.String,
    remainingTextFieldCharacterCountTwo: core.String,
    remainingTextFieldCharacterCountMany: core.String,
    remainingTextFieldCharacterCountFew: core.String
  }));
  dart.setLibraryUri(material_localizations$.GlobalMaterialLocalizations, "package:flutter_localizations/src/material_localizations.dart");
  dart.setFieldSignature(material_localizations$.GlobalMaterialLocalizations, () => ({
    __proto__: dart.getFields(material_localizations$.GlobalMaterialLocalizations.__proto__),
    [_localeName]: dart.finalFieldType(core.String),
    [_fullYearFormat]: dart.finalFieldType(intl.DateFormat),
    [_mediumDateFormat]: dart.finalFieldType(intl.DateFormat),
    [_longDateFormat]: dart.finalFieldType(intl.DateFormat),
    [_yearMonthFormat]: dart.finalFieldType(intl.DateFormat),
    [_decimalFormat]: dart.finalFieldType(intl.NumberFormat),
    [_twoDigitZeroPaddedFormat]: dart.finalFieldType(intl.NumberFormat)
  }));
  dart.defineLazy(material_localizations$.GlobalMaterialLocalizations, {
    /*material_localizations$.GlobalMaterialLocalizations.delegate*/get delegate() {
      return C11 || CT.C11;
    },
    /*material_localizations$.GlobalMaterialLocalizations.delegates*/get delegates() {
      return C12 || CT.C12;
    }
  });
  generated_material_localizations.MaterialLocalizationAf = class MaterialLocalizationAf extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Meer oor $applicationName";
    }
    get alertDialogLabel() {
      return "Opletberig";
    }
    get anteMeridiemAbbreviation() {
      return "vm.";
    }
    get backButtonTooltip() {
      return "Terug";
    }
    get cancelButtonLabel() {
      return "KANSELLEER";
    }
    get closeButtonLabel() {
      return "MAAK TOE";
    }
    get closeButtonTooltip() {
      return "Maak toe";
    }
    get collapsedIconTapHint() {
      return "Vou uit";
    }
    get continueButtonLabel() {
      return "GAAN VOORT";
    }
    get copyButtonLabel() {
      return "KOPIEER";
    }
    get cutButtonLabel() {
      return "KNIP";
    }
    get deleteButtonTooltip() {
      return "Vee uit";
    }
    get dialogLabel() {
      return "Dialoog";
    }
    get drawerLabel() {
      return "Navigasiekieslys";
    }
    get expandedIconTapHint() {
      return "Vou in";
    }
    get hideAccountsLabel() {
      return "Versteek rekeninge";
    }
    get licensesPageTitle() {
      return "Lisensies";
    }
    get modalBarrierDismissLabel() {
      return "Maak toe";
    }
    get nextMonthTooltip() {
      return "Volgende maand";
    }
    get nextPageTooltip() {
      return "Volgende bladsy";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Maak navigasiekieslys oop";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow van $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow van ongeveer $rowCount";
    }
    get pasteButtonLabel() {
      return "PLAK";
    }
    get popupMenuLabel() {
      return "Opspringkieslys";
    }
    get postMeridiemAbbreviation() {
      return "nm.";
    }
    get previousMonthTooltip() {
      return "Vorige maand";
    }
    get previousPageTooltip() {
      return "Vorige bladsy";
    }
    get refreshIndicatorSemanticLabel() {
      return "Herlaai";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 karakter oor";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount karakters oor";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "Skuif af";
    }
    get reorderItemLeft() {
      return "Skuif na links";
    }
    get reorderItemRight() {
      return "Skuif na regs";
    }
    get reorderItemToEnd() {
      return "Skuif na die einde";
    }
    get reorderItemToStart() {
      return "Skuif na die begin";
    }
    get reorderItemUp() {
      return "Skuif op";
    }
    get rowsPerPageTitle() {
      return "Rye per bladsy:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Soek";
    }
    get selectAllButtonLabel() {
      return "KIES ALLES";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 item is gekies";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount items is gekies";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Wys rekeninge";
    }
    get showMenuTooltip() {
      return "Wys kieslys";
    }
    get signedInLabel() {
      return "Aangemeld";
    }
    get tabLabelRaw() {
      return "Oortjie $tabIndex van $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Kies ure";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Kies minute";
    }
    get viewLicensesButtonLabel() {
      return "BEKYK LISENSIES";
    }
  };
  (generated_material_localizations.MaterialLocalizationAf.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "af";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationAf.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationAf.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationAf);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationAf, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationAf.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationAf, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationAm = class MaterialLocalizationAm extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "ስለ $applicationName";
    }
    get alertDialogLabel() {
      return "ማንቂያ";
    }
    get anteMeridiemAbbreviation() {
      return "ጥዋት";
    }
    get backButtonTooltip() {
      return "ተመለስ";
    }
    get cancelButtonLabel() {
      return "ይቅር";
    }
    get closeButtonLabel() {
      return "ዝጋ";
    }
    get closeButtonTooltip() {
      return "ዝጋ";
    }
    get collapsedIconTapHint() {
      return "ዘርጋ";
    }
    get continueButtonLabel() {
      return "ቀጥል";
    }
    get copyButtonLabel() {
      return "ቅዳ";
    }
    get cutButtonLabel() {
      return "ቁረጥ";
    }
    get deleteButtonTooltip() {
      return "ሰርዝ";
    }
    get dialogLabel() {
      return "መገናኛ";
    }
    get drawerLabel() {
      return "የዳሰሳ ምናሌ";
    }
    get expandedIconTapHint() {
      return "ሰብስብ";
    }
    get hideAccountsLabel() {
      return "መለያዎችን ደብቅ";
    }
    get licensesPageTitle() {
      return "ፈቃዶች";
    }
    get modalBarrierDismissLabel() {
      return "አሰናብት";
    }
    get nextMonthTooltip() {
      return "ቀጣይ ወር";
    }
    get nextPageTooltip() {
      return "ቀጣይ ገጽ";
    }
    get okButtonLabel() {
      return "እሺ";
    }
    get openAppDrawerTooltip() {
      return "የዳሰሳ ምናሌን ክፈት";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow ከ$rowCount ውስጥ";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow ከ$rowCount ያህል ውስጥ";
    }
    get pasteButtonLabel() {
      return "ለጥፍ";
    }
    get popupMenuLabel() {
      return "የብቅ-ባይ ምናሌ";
    }
    get postMeridiemAbbreviation() {
      return "ከሰዓት";
    }
    get previousMonthTooltip() {
      return "ቀዳሚ ወር";
    }
    get previousPageTooltip() {
      return "ቀዳሚ ገጽ";
    }
    get refreshIndicatorSemanticLabel() {
      return "አድስ";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 ቁምፊ ይቀራል";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount ቁምፊዎች ይቀራሉ";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "ወደ ታች ውሰድ";
    }
    get reorderItemLeft() {
      return "ወደ ግራ ውሰድ";
    }
    get reorderItemRight() {
      return "ወደ ቀኝ ውሰድ";
    }
    get reorderItemToEnd() {
      return "ወደ መጨረሻ ውሰድ";
    }
    get reorderItemToStart() {
      return "ወደ መጀመሪያ ውሰድ";
    }
    get reorderItemUp() {
      return "ወደ ላይ ውሰድ";
    }
    get rowsPerPageTitle() {
      return "ረድፎች በገጽ፦";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "ይፈልጉ";
    }
    get selectAllButtonLabel() {
      return "ሁሉንም ምረጥ";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 ንጥል ተመርጧል";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount ንጥሎች ተመርጠዋል";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "መለያዎችን አሳይ";
    }
    get showMenuTooltip() {
      return "ምናሌን አሳይ";
    }
    get signedInLabel() {
      return "በመለያ ገብቷል";
    }
    get tabLabelRaw() {
      return "ትር $tabIndex ከ$tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "ሰዓታትን ምረጥ";
    }
    get timePickerMinuteModeAnnouncement() {
      return "ደቂቃዎችን ይምረጡ";
    }
    get viewLicensesButtonLabel() {
      return "ፈቃዶችን ይመልከቱ";
    }
  };
  (generated_material_localizations.MaterialLocalizationAm.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "am";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationAm.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationAm.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationAm);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationAm, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationAm.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationAm, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationAr = class MaterialLocalizationAr extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "حول \"$applicationName\"";
    }
    get alertDialogLabel() {
      return "تنبيه";
    }
    get anteMeridiemAbbreviation() {
      return "ص";
    }
    get backButtonTooltip() {
      return "رجوع";
    }
    get cancelButtonLabel() {
      return "إلغاء";
    }
    get closeButtonLabel() {
      return "إغلاق";
    }
    get closeButtonTooltip() {
      return "إغلاق";
    }
    get collapsedIconTapHint() {
      return "توسيع";
    }
    get continueButtonLabel() {
      return "متابعة";
    }
    get copyButtonLabel() {
      return "نسخ";
    }
    get cutButtonLabel() {
      return "قص";
    }
    get deleteButtonTooltip() {
      return "حذف";
    }
    get dialogLabel() {
      return "مربع حوار";
    }
    get drawerLabel() {
      return "قائمة تنقل";
    }
    get expandedIconTapHint() {
      return "تصغير";
    }
    get hideAccountsLabel() {
      return "إخفاء الحسابات";
    }
    get licensesPageTitle() {
      return "التراخيص";
    }
    get modalBarrierDismissLabel() {
      return "رفض";
    }
    get nextMonthTooltip() {
      return "الشهر التالي";
    }
    get nextPageTooltip() {
      return "الصفحة التالية";
    }
    get okButtonLabel() {
      return "حسنًا";
    }
    get openAppDrawerTooltip() {
      return "فتح قائمة التنقل";
    }
    get pageRowsInfoTitleRaw() {
      return "من $firstRow إلى $lastRow من إجمالي $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "من $firstRow إلى $lastRow من إجمالي $rowCount تقريبًا";
    }
    get pasteButtonLabel() {
      return "لصق";
    }
    get popupMenuLabel() {
      return "قائمة منبثقة";
    }
    get postMeridiemAbbreviation() {
      return "م";
    }
    get previousMonthTooltip() {
      return "الشهر السابق";
    }
    get previousPageTooltip() {
      return "الصفحة السابقة";
    }
    get refreshIndicatorSemanticLabel() {
      return "إعادة تحميل";
    }
    get remainingTextFieldCharacterCountFew() {
      return "$remainingCount أحرف متبقية";
    }
    get remainingTextFieldCharacterCountMany() {
      return "$remainingCount حرفًا متبقيًا";
    }
    get remainingTextFieldCharacterCountOne() {
      return "حرف واحد متبقٍ";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount حرف متبقٍ";
    }
    get remainingTextFieldCharacterCountTwo() {
      return "حرفان ($remainingCount) متبقيان";
    }
    get remainingTextFieldCharacterCountZero() {
      return "لا أحرف متبقية";
    }
    get reorderItemDown() {
      return "نقل لأسفل";
    }
    get reorderItemLeft() {
      return "نقل لليمين";
    }
    get reorderItemRight() {
      return "نقل لليسار";
    }
    get reorderItemToEnd() {
      return "نقل إلى نهاية القائمة";
    }
    get reorderItemToStart() {
      return "نقل إلى بداية القائمة";
    }
    get reorderItemUp() {
      return "نقل لأعلى";
    }
    get rowsPerPageTitle() {
      return "عدد الصفوف في الصفحة:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.tall;
    }
    get searchFieldLabel() {
      return "بحث";
    }
    get selectAllButtonLabel() {
      return "اختيار الكل";
    }
    get selectedRowCountTitleFew() {
      return "تم اختيار $selectedRowCount عنصر";
    }
    get selectedRowCountTitleMany() {
      return "تم اختيار $selectedRowCount عنصرًا";
    }
    get selectedRowCountTitleOne() {
      return "تم اختيار عنصر واحد";
    }
    get selectedRowCountTitleOther() {
      return "تم اختيار $selectedRowCount عنصر";
    }
    get selectedRowCountTitleTwo() {
      return "تم اختيار عنصرين ($selectedRowCount)";
    }
    get selectedRowCountTitleZero() {
      return "لم يتم اختيار أي عنصر";
    }
    get showAccountsLabel() {
      return "إظهار الحسابات";
    }
    get showMenuTooltip() {
      return "عرض القائمة";
    }
    get signedInLabel() {
      return "تم تسجيل الدخول";
    }
    get tabLabelRaw() {
      return "علامة التبويب $tabIndex من $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.h_colon_mm_space_a;
    }
    get timePickerHourModeAnnouncement() {
      return "اختيار الساعات";
    }
    get timePickerMinuteModeAnnouncement() {
      return "اختيار الدقائق";
    }
    get viewLicensesButtonLabel() {
      return "الاطّلاع على التراخيص";
    }
  };
  (generated_material_localizations.MaterialLocalizationAr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ar";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationAr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationAr.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationAr);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationAr, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationAr.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationAr, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationAs = class MaterialLocalizationAs extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationNameৰ বিষয়ে";
    }
    get alertDialogLabel() {
      return "সতৰ্কবাৰ্তা";
    }
    get anteMeridiemAbbreviation() {
      return "পূৰ্বাহ্ন";
    }
    get backButtonTooltip() {
      return "উভতি যাওক";
    }
    get cancelButtonLabel() {
      return "বাতিল কৰক";
    }
    get closeButtonLabel() {
      return "বন্ধ কৰক";
    }
    get closeButtonTooltip() {
      return "বন্ধ কৰক";
    }
    get collapsedIconTapHint() {
      return "বিস্তাৰ কৰক";
    }
    get continueButtonLabel() {
      return "অব্যাহত ৰাখক";
    }
    get copyButtonLabel() {
      return "প্ৰতিলিপি কৰক";
    }
    get cutButtonLabel() {
      return "কাট কৰক";
    }
    get deleteButtonTooltip() {
      return "মচক";
    }
    get dialogLabel() {
      return "ডায়ল" + "'" + "গ";
    }
    get drawerLabel() {
      return "নেভিগেশ্বন মেনু";
    }
    get expandedIconTapHint() {
      return "সংকোচন কৰক";
    }
    get hideAccountsLabel() {
      return "একাউণ্টসমূহ লুকুৱাওক";
    }
    get licensesPageTitle() {
      return "অনুজ্ঞাপত্ৰসমূহ";
    }
    get modalBarrierDismissLabel() {
      return "অগ্ৰাহ্য কৰক";
    }
    get nextMonthTooltip() {
      return "পৰৱৰ্তী মাহ";
    }
    get nextPageTooltip() {
      return "পৰৱৰ্তী পৃষ্ঠা";
    }
    get okButtonLabel() {
      return "ঠিক আছে";
    }
    get openAppDrawerTooltip() {
      return "নেভিগেশ্বন মেনু খোলক";
    }
    get pageRowsInfoTitleRaw() {
      return "$rowCountৰ $firstRow–$lastRow";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$rowCountৰ $firstRow–$lastRow";
    }
    get pasteButtonLabel() {
      return "পে" + "'" + "ষ্ট কৰক";
    }
    get popupMenuLabel() {
      return "প" + "'" + "পআপ মেনু";
    }
    get postMeridiemAbbreviation() {
      return "অপৰাহ্ন";
    }
    get previousMonthTooltip() {
      return "পূৰ্বৱৰ্তী মাহ";
    }
    get previousPageTooltip() {
      return "পূৰ্বৱৰ্তী পৃষ্ঠা";
    }
    get refreshIndicatorSemanticLabel() {
      return "ৰিফ্ৰেশ্ব কৰক";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "১টা বর্ণ বাকী আছে";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCountটা বর্ণ বাকী আছে";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "তললৈ স্থানান্তৰ কৰক";
    }
    get reorderItemLeft() {
      return "বাওঁফাললৈ স্থানান্তৰ কৰক";
    }
    get reorderItemRight() {
      return "সোঁফাললৈ স্থানান্তৰ কৰক";
    }
    get reorderItemToEnd() {
      return "শেষলৈ স্থানান্তৰ কৰক";
    }
    get reorderItemToStart() {
      return "আৰম্ভণিলৈ স্থানান্তৰ কৰক";
    }
    get reorderItemUp() {
      return "ওপৰলৈ নিয়ক";
    }
    get rowsPerPageTitle() {
      return "প্ৰতিটো পৃষ্ঠাত থকা শাৰী:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "সন্ধান কৰক";
    }
    get selectAllButtonLabel() {
      return "সকলো বাছনি কৰক";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "১টা বস্তু বাছনি কৰা হ" + "'" + "ল";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCountটা বস্তু বাছনি কৰা হ’ল";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "একাউণ্টসমূহ দেখুৱাওক";
    }
    get showMenuTooltip() {
      return "মেনুখন দেখুৱাওক";
    }
    get signedInLabel() {
      return "ছাইন ইন কৰা হ’ল";
    }
    get tabLabelRaw() {
      return "$tabCountৰ $tabIndexটা টেব";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "সময় বাছনি কৰক";
    }
    get timePickerMinuteModeAnnouncement() {
      return "মিনিট বাছনি কৰক";
    }
    get viewLicensesButtonLabel() {
      return "অনুজ্ঞাপত্ৰসমূহ চাওক";
    }
  };
  (generated_material_localizations.MaterialLocalizationAs.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "as";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationAs.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationAs.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationAs);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationAs, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationAs.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationAs, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationAz = class MaterialLocalizationAz extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName haqqında";
    }
    get alertDialogLabel() {
      return "Bildiriş";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Geri";
    }
    get cancelButtonLabel() {
      return "LƏĞV EDİN";
    }
    get closeButtonLabel() {
      return "BAĞLAYIN";
    }
    get closeButtonTooltip() {
      return "Bağlayın";
    }
    get collapsedIconTapHint() {
      return "Genişləndirin";
    }
    get continueButtonLabel() {
      return "DAVAM EDİN";
    }
    get copyButtonLabel() {
      return "KOPYALAYIN";
    }
    get cutButtonLabel() {
      return "KƏSİN";
    }
    get deleteButtonTooltip() {
      return "Silin";
    }
    get dialogLabel() {
      return "Dialoq";
    }
    get drawerLabel() {
      return "Naviqasiya menyusu";
    }
    get expandedIconTapHint() {
      return "Yığcamlaşdırın";
    }
    get hideAccountsLabel() {
      return "Hesabları gizlədin";
    }
    get licensesPageTitle() {
      return "Lisenziyalar";
    }
    get modalBarrierDismissLabel() {
      return "İmtina edin";
    }
    get nextMonthTooltip() {
      return "Növbəti ay";
    }
    get nextPageTooltip() {
      return "Növbəti səhifə";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Naviqasiya menyusunu açın";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow/$rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow/ təxminən $rowCount";
    }
    get pasteButtonLabel() {
      return "YERLƏŞDİRİN";
    }
    get popupMenuLabel() {
      return "Popap menyusu";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Keçən ay";
    }
    get previousPageTooltip() {
      return "Əvvəlki səhifə";
    }
    get refreshIndicatorSemanticLabel() {
      return "Yeniləyin";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 simvol qalır";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount simvol qalır";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "Aşağı köçürün";
    }
    get reorderItemLeft() {
      return "Sola köçürün";
    }
    get reorderItemRight() {
      return "Sağa köçürün";
    }
    get reorderItemToEnd() {
      return "Sona köçürün";
    }
    get reorderItemToStart() {
      return "Əvvələ köçürün";
    }
    get reorderItemUp() {
      return "Yuxarı köçürün";
    }
    get rowsPerPageTitle() {
      return "Hər səhifə üzrə sıra:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Axtarın";
    }
    get selectAllButtonLabel() {
      return "HAMISINI SEÇİN";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 element seçildi";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount element seçildi";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Hesabları göstərin";
    }
    get showMenuTooltip() {
      return "Menyunu göstərin";
    }
    get signedInLabel() {
      return "Daxil olundu";
    }
    get tabLabelRaw() {
      return "$tabIndex/$tabCount tab";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Saat seçin";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Dəqiqə seçin";
    }
    get viewLicensesButtonLabel() {
      return "LİSENZİYALARA BAXIN";
    }
  };
  (generated_material_localizations.MaterialLocalizationAz.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "az";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationAz.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationAz.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationAz);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationAz, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationAz.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationAz, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationBe = class MaterialLocalizationBe extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Інфармацыя пра праграму \"$applicationName\"";
    }
    get alertDialogLabel() {
      return "Абвестка";
    }
    get anteMeridiemAbbreviation() {
      return "раніцы";
    }
    get backButtonTooltip() {
      return "Назад";
    }
    get cancelButtonLabel() {
      return "СКАСАВАЦЬ";
    }
    get closeButtonLabel() {
      return "ЗАКРЫЦЬ";
    }
    get closeButtonTooltip() {
      return "Закрыць";
    }
    get collapsedIconTapHint() {
      return "Разгарнуць";
    }
    get continueButtonLabel() {
      return "ПРАЦЯГНУЦЬ";
    }
    get copyButtonLabel() {
      return "КАПІРАВАЦЬ";
    }
    get cutButtonLabel() {
      return "ВЫРАЗАЦЬ";
    }
    get deleteButtonTooltip() {
      return "Выдаліць";
    }
    get dialogLabel() {
      return "Дыялогавае акно";
    }
    get drawerLabel() {
      return "Меню навігацыі";
    }
    get expandedIconTapHint() {
      return "Згарнуць";
    }
    get hideAccountsLabel() {
      return "Схаваць уліковыя запісы";
    }
    get licensesPageTitle() {
      return "Ліцэнзіі";
    }
    get modalBarrierDismissLabel() {
      return "Адхіліць";
    }
    get nextMonthTooltip() {
      return "Наступны месяц";
    }
    get nextPageTooltip() {
      return "Наступная старонка";
    }
    get okButtonLabel() {
      return "ОК";
    }
    get openAppDrawerTooltip() {
      return "Адкрыць меню навігацыі";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow з $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow з прыблізна $rowCount";
    }
    get pasteButtonLabel() {
      return "УСТАВІЦЬ";
    }
    get popupMenuLabel() {
      return "Меню ўсплывальнага акна";
    }
    get postMeridiemAbbreviation() {
      return "вечара";
    }
    get previousMonthTooltip() {
      return "Папярэдні месяц";
    }
    get previousPageTooltip() {
      return "Папярэдняя старонка";
    }
    get refreshIndicatorSemanticLabel() {
      return "Абнавіць";
    }
    get remainingTextFieldCharacterCountFew() {
      return "Засталося $remainingCount сімвалы";
    }
    get remainingTextFieldCharacterCountMany() {
      return "Засталося $remainingCount сімвалаў";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Застаўся 1 сімвал";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Засталося $remainingCount сімвала";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "Перамясціць уніз";
    }
    get reorderItemLeft() {
      return "Перамясціць улева";
    }
    get reorderItemRight() {
      return "Перамясціць управа";
    }
    get reorderItemToEnd() {
      return "Перамясціць у канец";
    }
    get reorderItemToStart() {
      return "Перамясціць у пачатак";
    }
    get reorderItemUp() {
      return "Перамясціць уверх";
    }
    get rowsPerPageTitle() {
      return "Радкоў на старонку:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Пошук";
    }
    get selectAllButtonLabel() {
      return "ВЫБРАЦЬ УСЕ";
    }
    get selectedRowCountTitleFew() {
      return "Выбрана $selectedRowCount элементы";
    }
    get selectedRowCountTitleMany() {
      return "Выбрана $selectedRowCount элементаў";
    }
    get selectedRowCountTitleOne() {
      return "Выбраны 1 элемент";
    }
    get selectedRowCountTitleOther() {
      return "Выбрана $selectedRowCount элемента";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Паказаць уліковыя запісы";
    }
    get showMenuTooltip() {
      return "Паказаць меню";
    }
    get signedInLabel() {
      return "Уваход выкананы";
    }
    get tabLabelRaw() {
      return "Укладка $tabIndex з $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Выберыце гадзіны";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Выберыце хвіліны";
    }
    get viewLicensesButtonLabel() {
      return "ПАКАЗАЦЬ ЛІЦЭНЗІІ";
    }
  };
  (generated_material_localizations.MaterialLocalizationBe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "be";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationBe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationBe.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationBe);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationBe, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationBe.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationBe, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationBg = class MaterialLocalizationBg extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Всичко за $applicationName";
    }
    get alertDialogLabel() {
      return "Сигнал";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Назад";
    }
    get cancelButtonLabel() {
      return "ОТКАЗ";
    }
    get closeButtonLabel() {
      return "ЗАТВАРЯНЕ";
    }
    get closeButtonTooltip() {
      return "Затваряне";
    }
    get collapsedIconTapHint() {
      return "Разгъване";
    }
    get continueButtonLabel() {
      return "НАПРЕД";
    }
    get copyButtonLabel() {
      return "КОПИРАНЕ";
    }
    get cutButtonLabel() {
      return "ИЗРЯЗВАНЕ";
    }
    get deleteButtonTooltip() {
      return "Изтриване";
    }
    get dialogLabel() {
      return "Диалогов прозорец";
    }
    get drawerLabel() {
      return "Меню за навигация";
    }
    get expandedIconTapHint() {
      return "Свиване";
    }
    get hideAccountsLabel() {
      return "Скриване на профилите";
    }
    get licensesPageTitle() {
      return "Лицензи";
    }
    get modalBarrierDismissLabel() {
      return "Отхвърляне";
    }
    get nextMonthTooltip() {
      return "Следващият месец";
    }
    get nextPageTooltip() {
      return "Следващата страница";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Отваряне на менюто за навигация";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow – $lastRow от $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow – $lastRow от около $rowCount";
    }
    get pasteButtonLabel() {
      return "ПОСТАВЯНЕ";
    }
    get popupMenuLabel() {
      return "Изскачащо меню";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Предишният месец";
    }
    get previousPageTooltip() {
      return "Предишната страница";
    }
    get refreshIndicatorSemanticLabel() {
      return "Опресняване";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "Остава 1 знак";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Остават $remainingCount знака";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Преместване надолу";
    }
    get reorderItemLeft() {
      return "Преместване наляво";
    }
    get reorderItemRight() {
      return "Преместване надясно";
    }
    get reorderItemToEnd() {
      return "Преместване в края";
    }
    get reorderItemToStart() {
      return "Преместване в началото";
    }
    get reorderItemUp() {
      return "Преместване нагоре";
    }
    get rowsPerPageTitle() {
      return "Редове на страница:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Търсене";
    }
    get selectAllButtonLabel() {
      return "ИЗБИРАНЕ НА ВСИЧКО";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "Избран е 1 елемент";
    }
    get selectedRowCountTitleOther() {
      return "Избрани са $selectedRowCount елемента";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Показване на профилите";
    }
    get showMenuTooltip() {
      return "Показване на менюто";
    }
    get signedInLabel() {
      return "В профила си сте";
    }
    get tabLabelRaw() {
      return "Раздел $tabIndex от $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Избиране на часове";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Избиране на минути";
    }
    get viewLicensesButtonLabel() {
      return "ПРЕГЛЕД НА ЛИЦЕНЗИТЕ";
    }
  };
  (generated_material_localizations.MaterialLocalizationBg.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "bg";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationBg.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationBg.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationBg);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationBg, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationBg.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationBg, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationBn = class MaterialLocalizationBn extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName সম্পর্কে";
    }
    get alertDialogLabel() {
      return "সতর্কতা";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "ফিরে যান";
    }
    get cancelButtonLabel() {
      return "বাতিল করুন";
    }
    get closeButtonLabel() {
      return "বন্ধ করুন";
    }
    get closeButtonTooltip() {
      return "বন্ধ করুন";
    }
    get collapsedIconTapHint() {
      return "বড় করুন";
    }
    get continueButtonLabel() {
      return "চালিয়ে যান";
    }
    get copyButtonLabel() {
      return "কপি করুন";
    }
    get cutButtonLabel() {
      return "কাট করুন";
    }
    get deleteButtonTooltip() {
      return "মুছে দিন";
    }
    get dialogLabel() {
      return "ডায়ালগ";
    }
    get drawerLabel() {
      return "নেভিগেশান মেনু";
    }
    get expandedIconTapHint() {
      return "আড়াল করুন";
    }
    get hideAccountsLabel() {
      return "অ্যাকাউন্টগুলি লুকান";
    }
    get licensesPageTitle() {
      return "লাইসেন্স";
    }
    get modalBarrierDismissLabel() {
      return "খারিজ করুন";
    }
    get nextMonthTooltip() {
      return "পরের মাস";
    }
    get nextPageTooltip() {
      return "পরের পৃষ্ঠা";
    }
    get okButtonLabel() {
      return "ঠিক আছে";
    }
    get openAppDrawerTooltip() {
      return "নেভিগেশন মেনু খুলুন";
    }
    get pageRowsInfoTitleRaw() {
      return "$rowCountটির মধ্যে $firstRow-$lastRow";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "প্রায় $rowCountটির মধ্যে $firstRow-$lastRow নম্বর";
    }
    get pasteButtonLabel() {
      return "পেস্ট করুন";
    }
    get popupMenuLabel() {
      return "পপ-আপ মেনু";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "আগের মাস";
    }
    get previousPageTooltip() {
      return "আগের পৃষ্ঠা";
    }
    get refreshIndicatorSemanticLabel() {
      return "রিফ্রেশ করুন";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "আর ১টি অক্ষর লেখা যাবে";
    }
    get remainingTextFieldCharacterCountOther() {
      return "আর $remainingCountটি অক্ষর লেখা যাবে";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "নিচের দিকে সরান";
    }
    get reorderItemLeft() {
      return "বাঁদিকে সরান";
    }
    get reorderItemRight() {
      return "ডানদিকে সরান";
    }
    get reorderItemToEnd() {
      return "একদম শেষের দিকে যান";
    }
    get reorderItemToStart() {
      return "চালু করতে সরান";
    }
    get reorderItemUp() {
      return "উপরের দিকে সরান";
    }
    get rowsPerPageTitle() {
      return "প্রতি পৃষ্ঠায় সারির সংখ্যা:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.tall;
    }
    get searchFieldLabel() {
      return "সার্চ";
    }
    get selectAllButtonLabel() {
      return "সব বেছে নিন";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "১টি আইটেম বেছে নেওয়া হয়েছে";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCountটি আইটেম বেছে নেওয়া হয়েছে";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "অ্যাকাউন্টগুলি দেখান";
    }
    get showMenuTooltip() {
      return "মেনু দেখান";
    }
    get signedInLabel() {
      return "সাইন-ইন করা হয়েছে";
    }
    get tabLabelRaw() {
      return "$tabCount-এর মধ্যে $tabIndexটি ট্যাব";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "ঘণ্টা বেছে নিন";
    }
    get timePickerMinuteModeAnnouncement() {
      return "মিনিট বেছে নিন";
    }
    get viewLicensesButtonLabel() {
      return "লাইসেন্স দেখুন";
    }
  };
  (generated_material_localizations.MaterialLocalizationBn.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "bn";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationBn.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationBn.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationBn);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationBn, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationBn.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationBn, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationBs = class MaterialLocalizationBs extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "O aplikaciji $applicationName";
    }
    get alertDialogLabel() {
      return "Upozorenje";
    }
    get anteMeridiemAbbreviation() {
      return "prijepodne";
    }
    get backButtonTooltip() {
      return "Natrag";
    }
    get cancelButtonLabel() {
      return "ODUSTANI";
    }
    get closeButtonLabel() {
      return "ZATVORI";
    }
    get closeButtonTooltip() {
      return "Zatvaranje";
    }
    get collapsedIconTapHint() {
      return "Proširi";
    }
    get continueButtonLabel() {
      return "NASTAVI";
    }
    get copyButtonLabel() {
      return "KOPIRAJ";
    }
    get cutButtonLabel() {
      return "IZREŽI";
    }
    get deleteButtonTooltip() {
      return "Brisanje";
    }
    get dialogLabel() {
      return "Dijalog";
    }
    get drawerLabel() {
      return "Navigacijski izbornik";
    }
    get expandedIconTapHint() {
      return "Sažmi";
    }
    get hideAccountsLabel() {
      return "Sakrijte račune";
    }
    get licensesPageTitle() {
      return "Licence";
    }
    get modalBarrierDismissLabel() {
      return "Odbaci";
    }
    get nextMonthTooltip() {
      return "Sljedeći mjesec";
    }
    get nextPageTooltip() {
      return "Sljedeća stranica";
    }
    get okButtonLabel() {
      return "U REDU";
    }
    get openAppDrawerTooltip() {
      return "Otvaranje izbornika za navigaciju";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow – $lastRow od $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow – $lastRow od otprilike $rowCount";
    }
    get pasteButtonLabel() {
      return "ZALIJEPI";
    }
    get popupMenuLabel() {
      return "Skočni izbornik";
    }
    get postMeridiemAbbreviation() {
      return "popodne";
    }
    get previousMonthTooltip() {
      return "Prethodni mjesec";
    }
    get previousPageTooltip() {
      return "Prethodna stranica";
    }
    get refreshIndicatorSemanticLabel() {
      return "Osvježi";
    }
    get remainingTextFieldCharacterCountFew() {
      return "Preostala su $remainingCount znaka";
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "Preostao je 1 znak";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Preostalo je $remainingCount znakova";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Pomakni prema dolje";
    }
    get reorderItemLeft() {
      return "Pomakni ulijevo";
    }
    get reorderItemRight() {
      return "Pomakni udesno";
    }
    get reorderItemToEnd() {
      return "Premjesti na kraj";
    }
    get reorderItemToStart() {
      return "Premjesti na početak";
    }
    get reorderItemUp() {
      return "Pomakni prema gore";
    }
    get rowsPerPageTitle() {
      return "Redaka po stranici:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Pretražite";
    }
    get selectAllButtonLabel() {
      return "ODABERI SVE";
    }
    get selectedRowCountTitleFew() {
      return "Odabrane su $selectedRowCount stavke";
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "Odabrana je jedna stavka";
    }
    get selectedRowCountTitleOther() {
      return "Odabrano je $selectedRowCount stavki";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Prikažite račune";
    }
    get showMenuTooltip() {
      return "Prikaz izbornika";
    }
    get signedInLabel() {
      return "Prijavljeni korisnik";
    }
    get tabLabelRaw() {
      return "Kartica $tabIndex od $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Odaberite sate";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Odaberite minute";
    }
    get viewLicensesButtonLabel() {
      return "PRIKAŽI LICENCE";
    }
  };
  (generated_material_localizations.MaterialLocalizationBs.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "bs";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationBs.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationBs.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationBs);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationBs, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationBs.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationBs, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationCa = class MaterialLocalizationCa extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Sobre $applicationName";
    }
    get alertDialogLabel() {
      return "Alerta";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Enrere";
    }
    get cancelButtonLabel() {
      return "CANCEL·LA";
    }
    get closeButtonLabel() {
      return "TANCA";
    }
    get closeButtonTooltip() {
      return "Tanca";
    }
    get collapsedIconTapHint() {
      return "Desplega";
    }
    get continueButtonLabel() {
      return "CONTINUA";
    }
    get copyButtonLabel() {
      return "COPIA";
    }
    get cutButtonLabel() {
      return "RETALLA";
    }
    get deleteButtonTooltip() {
      return "Suprimeix";
    }
    get dialogLabel() {
      return "Diàleg";
    }
    get drawerLabel() {
      return "Menú de navegació";
    }
    get expandedIconTapHint() {
      return "Replega";
    }
    get hideAccountsLabel() {
      return "Amaga els comptes";
    }
    get licensesPageTitle() {
      return "Llicències";
    }
    get modalBarrierDismissLabel() {
      return "Ignora";
    }
    get nextMonthTooltip() {
      return "Mes següent";
    }
    get nextPageTooltip() {
      return "Pàgina següent";
    }
    get okButtonLabel() {
      return "D" + "'" + "ACORD";
    }
    get openAppDrawerTooltip() {
      return "Obre el menú de navegació";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow-$lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow-$lastRow d" + "'" + "aproximadament $rowCount";
    }
    get pasteButtonLabel() {
      return "ENGANXA";
    }
    get popupMenuLabel() {
      return "Menú emergent";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Mes anterior";
    }
    get previousPageTooltip() {
      return "Pàgina anterior";
    }
    get refreshIndicatorSemanticLabel() {
      return "Actualitza";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "Queda 1 caràcter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Queden $remainingCount caràcters";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Mou avall";
    }
    get reorderItemLeft() {
      return "Mou cap a l" + "'" + "esquerra";
    }
    get reorderItemRight() {
      return "Mou cap a la dreta";
    }
    get reorderItemToEnd() {
      return "Mou al final";
    }
    get reorderItemToStart() {
      return "Mou al principi";
    }
    get reorderItemUp() {
      return "Mou amunt";
    }
    get rowsPerPageTitle() {
      return "Files per pàgina:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Cerca";
    }
    get selectAllButtonLabel() {
      return "SELECCIONA-HO TOT";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "S" + "'" + "ha seleccionat 1 element";
    }
    get selectedRowCountTitleOther() {
      return "S" + "'" + "han seleccionat $selectedRowCount elements";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Mostra els comptes";
    }
    get showMenuTooltip() {
      return "Mostra el menú";
    }
    get signedInLabel() {
      return "Sessió iniciada";
    }
    get tabLabelRaw() {
      return "Pestanya $tabIndex de $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Selecciona les hores";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Selecciona els minuts";
    }
    get viewLicensesButtonLabel() {
      return "MOSTRA LES LLICÈNCIES";
    }
  };
  (generated_material_localizations.MaterialLocalizationCa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ca";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationCa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationCa.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationCa);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationCa, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationCa.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationCa, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationCs = class MaterialLocalizationCs extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "O aplikaci $applicationName";
    }
    get alertDialogLabel() {
      return "Upozornění";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Zpět";
    }
    get cancelButtonLabel() {
      return "ZRUŠIT";
    }
    get closeButtonLabel() {
      return "ZAVŘÍT";
    }
    get closeButtonTooltip() {
      return "Zavřít";
    }
    get collapsedIconTapHint() {
      return "Rozbalit";
    }
    get continueButtonLabel() {
      return "POKRAČOVAT";
    }
    get copyButtonLabel() {
      return "KOPÍROVAT";
    }
    get cutButtonLabel() {
      return "VYJMOUT";
    }
    get deleteButtonTooltip() {
      return "Smazat";
    }
    get dialogLabel() {
      return "Dialogové okno";
    }
    get drawerLabel() {
      return "Navigační nabídka";
    }
    get expandedIconTapHint() {
      return "Sbalit";
    }
    get hideAccountsLabel() {
      return "Skrýt účty";
    }
    get licensesPageTitle() {
      return "Licence";
    }
    get modalBarrierDismissLabel() {
      return "Zavřít";
    }
    get nextMonthTooltip() {
      return "Další měsíc";
    }
    get nextPageTooltip() {
      return "Další stránka";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Otevřít navigační nabídku";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow z $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow z asi $rowCount";
    }
    get pasteButtonLabel() {
      return "VLOŽIT";
    }
    get popupMenuLabel() {
      return "Vyskakovací nabídka";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Předchozí měsíc";
    }
    get previousPageTooltip() {
      return "Předchozí stránka";
    }
    get refreshIndicatorSemanticLabel() {
      return "Obnovit";
    }
    get remainingTextFieldCharacterCountFew() {
      return "Zbývají $remainingCount znaky";
    }
    get remainingTextFieldCharacterCountMany() {
      return "Zbývá $remainingCount znaku";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Zbývá 1 znak";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Zbývá $remainingCount znaků";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Přesunout dolů";
    }
    get reorderItemLeft() {
      return "Přesunout doleva";
    }
    get reorderItemRight() {
      return "Přesunout doprava";
    }
    get reorderItemToEnd() {
      return "Přesunout na konec";
    }
    get reorderItemToStart() {
      return "Přesunout na začátek";
    }
    get reorderItemUp() {
      return "Přesunout nahoru";
    }
    get rowsPerPageTitle() {
      return "Počet řádků na stránku:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Hledat";
    }
    get selectAllButtonLabel() {
      return "VYBRAT VŠE";
    }
    get selectedRowCountTitleFew() {
      return "Jsou vybrány $selectedRowCount položky";
    }
    get selectedRowCountTitleMany() {
      return "Je vybráno $selectedRowCount položky";
    }
    get selectedRowCountTitleOne() {
      return "Je vybrána 1 položka";
    }
    get selectedRowCountTitleOther() {
      return "Je vybráno $selectedRowCount položek";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Zobrazit účty";
    }
    get showMenuTooltip() {
      return "Zobrazit nabídku";
    }
    get signedInLabel() {
      return "Uživatel přihlášen";
    }
    get tabLabelRaw() {
      return "Karta $tabIndex z $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Vyberte hodiny";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Vyberte minuty";
    }
    get viewLicensesButtonLabel() {
      return "ZOBRAZIT LICENCE";
    }
  };
  (generated_material_localizations.MaterialLocalizationCs.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "cs";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationCs.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationCs.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationCs);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationCs, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationCs.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationCs, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationDa = class MaterialLocalizationDa extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Om $applicationName";
    }
    get alertDialogLabel() {
      return "Underretning";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Tilbage";
    }
    get cancelButtonLabel() {
      return "ANNULLER";
    }
    get closeButtonLabel() {
      return "LUK";
    }
    get closeButtonTooltip() {
      return "Luk";
    }
    get collapsedIconTapHint() {
      return "Udvid";
    }
    get continueButtonLabel() {
      return "FORTSÆT";
    }
    get copyButtonLabel() {
      return "KOPIÉR";
    }
    get cutButtonLabel() {
      return "KLIP";
    }
    get deleteButtonTooltip() {
      return "Slet";
    }
    get dialogLabel() {
      return "Dialogboks";
    }
    get drawerLabel() {
      return "Navigationsmenu";
    }
    get expandedIconTapHint() {
      return "Skjul";
    }
    get hideAccountsLabel() {
      return "Skjul konti";
    }
    get licensesPageTitle() {
      return "Licenser";
    }
    get modalBarrierDismissLabel() {
      return "Afvis";
    }
    get nextMonthTooltip() {
      return "Næste måned";
    }
    get nextPageTooltip() {
      return "Næste side";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Åbn navigationsmenuen";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow-$lastRow af $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow-$lastRow af ca. $rowCount";
    }
    get pasteButtonLabel() {
      return "SÆT IND";
    }
    get popupMenuLabel() {
      return "Pop op-menu";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Forrige måned";
    }
    get previousPageTooltip() {
      return "Forrige side";
    }
    get refreshIndicatorSemanticLabel() {
      return "Opdater";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "Ét tegn tilbage";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount tegn tilbage";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Flyt ned";
    }
    get reorderItemLeft() {
      return "Flyt til venstre";
    }
    get reorderItemRight() {
      return "Flyt til højre";
    }
    get reorderItemToEnd() {
      return "Flyt til sidst på listen";
    }
    get reorderItemToStart() {
      return "Flyt til først på listen";
    }
    get reorderItemUp() {
      return "Flyt op";
    }
    get rowsPerPageTitle() {
      return "Rækker pr. side:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Søg";
    }
    get selectAllButtonLabel() {
      return "VÆLG ALLE";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 element er valgt";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount elementer er valgt";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Vis konti";
    }
    get showMenuTooltip() {
      return "Vis menu";
    }
    get signedInLabel() {
      return "Logget ind";
    }
    get tabLabelRaw() {
      return "Fane $tabIndex af $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Vælg timer";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Vælg minutter";
    }
    get viewLicensesButtonLabel() {
      return "SE LICENSER";
    }
  };
  (generated_material_localizations.MaterialLocalizationDa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "da";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationDa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationDa.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationDa);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationDa, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationDa.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationDa, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationDe = class MaterialLocalizationDe extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Über $applicationName";
    }
    get alertDialogLabel() {
      return "Benachrichtigung";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Zurück";
    }
    get cancelButtonLabel() {
      return "ABBRECHEN";
    }
    get closeButtonLabel() {
      return "SCHLIEẞEN";
    }
    get closeButtonTooltip() {
      return "Schließen";
    }
    get collapsedIconTapHint() {
      return "Maximieren";
    }
    get continueButtonLabel() {
      return "WEITER";
    }
    get copyButtonLabel() {
      return "KOPIEREN";
    }
    get cutButtonLabel() {
      return "AUSSCHNEIDEN";
    }
    get deleteButtonTooltip() {
      return "Löschen";
    }
    get dialogLabel() {
      return "Dialogfeld";
    }
    get drawerLabel() {
      return "Navigationsmenü";
    }
    get expandedIconTapHint() {
      return "Minimieren";
    }
    get hideAccountsLabel() {
      return "Konten ausblenden";
    }
    get licensesPageTitle() {
      return "Lizenzen";
    }
    get modalBarrierDismissLabel() {
      return "Schließen";
    }
    get nextMonthTooltip() {
      return "Nächster Monat";
    }
    get nextPageTooltip() {
      return "Nächste Seite";
    }
    get okButtonLabel() {
      return "Ok";
    }
    get openAppDrawerTooltip() {
      return "Navigationsmenü öffnen";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow von $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow von etwa $rowCount";
    }
    get pasteButtonLabel() {
      return "EINFÜGEN";
    }
    get popupMenuLabel() {
      return "Pop-up-Menü";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Vorheriger Monat";
    }
    get previousPageTooltip() {
      return "Vorherige Seite";
    }
    get refreshIndicatorSemanticLabel() {
      return "Aktualisieren";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "Noch 1 Zeichen";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Noch $remainingCount Zeichen";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Nach unten verschieben";
    }
    get reorderItemLeft() {
      return "Nach links verschieben";
    }
    get reorderItemRight() {
      return "Nach rechts verschieben";
    }
    get reorderItemToEnd() {
      return "An das Ende verschieben";
    }
    get reorderItemToStart() {
      return "An den Anfang verschieben";
    }
    get reorderItemUp() {
      return "Nach oben verschieben";
    }
    get rowsPerPageTitle() {
      return "Zeilen pro Seite:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Suchen";
    }
    get selectAllButtonLabel() {
      return "ALLE AUSWÄHLEN";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 Element ausgewählt";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount Elemente ausgewählt";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return "Keine Objekte ausgewählt";
    }
    get showAccountsLabel() {
      return "Konten anzeigen";
    }
    get showMenuTooltip() {
      return "Menü anzeigen";
    }
    get signedInLabel() {
      return "Angemeldet";
    }
    get tabLabelRaw() {
      return "Tab $tabIndex von $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Stunden auswählen";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Minuten auswählen";
    }
    get viewLicensesButtonLabel() {
      return "LIZENZEN ANZEIGEN";
    }
  };
  (generated_material_localizations.MaterialLocalizationDe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "de";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationDe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationDe.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationDe);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationDe, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationDe.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationDe, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationDeCh = class MaterialLocalizationDeCh extends generated_material_localizations.MaterialLocalizationDe {
    get closeButtonTooltip() {
      return "Schliessen";
    }
    get modalBarrierDismissLabel() {
      return "Schliessen";
    }
  };
  (generated_material_localizations.MaterialLocalizationDeCh.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "de_CH";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationDeCh.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationDeCh.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationDeCh);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationDeCh, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEl = class MaterialLocalizationEl extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Σχετικά με την εφαρμογή $applicationName";
    }
    get alertDialogLabel() {
      return "Ειδοποίηση";
    }
    get anteMeridiemAbbreviation() {
      return "π.μ.";
    }
    get backButtonTooltip() {
      return "Πίσω";
    }
    get cancelButtonLabel() {
      return "ΑΚΥΡΩΣΗ";
    }
    get closeButtonLabel() {
      return "ΚΛΕΙΣΙΜΟ";
    }
    get closeButtonTooltip() {
      return "Κλείσιμο";
    }
    get collapsedIconTapHint() {
      return "Ανάπτυξη";
    }
    get continueButtonLabel() {
      return "ΣΥΝΕΧΕΙΑ";
    }
    get copyButtonLabel() {
      return "ΑΝΤΙΓΡΑΦΗ";
    }
    get cutButtonLabel() {
      return "ΑΠΟΚΟΠΗ";
    }
    get deleteButtonTooltip() {
      return "Διαγραφή";
    }
    get dialogLabel() {
      return "Παράθυρο διαλόγου";
    }
    get drawerLabel() {
      return "Μενού πλοήγησης";
    }
    get expandedIconTapHint() {
      return "Σύμπτυξη";
    }
    get hideAccountsLabel() {
      return "Απόκρυψη λογαριασμών";
    }
    get licensesPageTitle() {
      return "Άδειες";
    }
    get modalBarrierDismissLabel() {
      return "Παράβλεψη";
    }
    get nextMonthTooltip() {
      return "Επόμενος μήνας";
    }
    get nextPageTooltip() {
      return "Επόμενη σελίδα";
    }
    get okButtonLabel() {
      return "ΟΚ";
    }
    get openAppDrawerTooltip() {
      return "Άνοιγμα μενού πλοήγησης";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow-$lastRow από $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow-$lastRow από περίπου $rowCount";
    }
    get pasteButtonLabel() {
      return "ΕΠΙΚΟΛΛΗΣΗ";
    }
    get popupMenuLabel() {
      return "Αναδυόμενο μενού";
    }
    get postMeridiemAbbreviation() {
      return "μ.μ.";
    }
    get previousMonthTooltip() {
      return "Προηγούμενος μήνας";
    }
    get previousPageTooltip() {
      return "Προηγούμενη σελίδα";
    }
    get refreshIndicatorSemanticLabel() {
      return "Ανανέωση";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "απομένει 1 χαρακτήρας";
    }
    get remainingTextFieldCharacterCountOther() {
      return "απομένουν $remainingCount χαρακτήρες";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Μετακίνηση προς τα κάτω";
    }
    get reorderItemLeft() {
      return "Μετακίνηση αριστερά";
    }
    get reorderItemRight() {
      return "Μετακίνηση δεξιά";
    }
    get reorderItemToEnd() {
      return "Μετακίνηση στο τέλος";
    }
    get reorderItemToStart() {
      return "Μετακίνηση στην αρχή";
    }
    get reorderItemUp() {
      return "Μετακίνηση προς τα πάνω";
    }
    get rowsPerPageTitle() {
      return "Σειρές ανά σελίδα:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Αναζήτηση";
    }
    get selectAllButtonLabel() {
      return "ΕΠΙΛΟΓΗ ΟΛΩΝ";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "Επιλέχθηκε 1 στοιχείο";
    }
    get selectedRowCountTitleOther() {
      return "Επιλέχθηκαν $selectedRowCount στοιχεία";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Εμφάνιση λογαριασμών";
    }
    get showMenuTooltip() {
      return "Εμφάνιση μενού";
    }
    get signedInLabel() {
      return "Σε σύνδεση";
    }
    get tabLabelRaw() {
      return "Καρτέλα $tabIndex από $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Επιλογή ωρών";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Επιλογή λεπτών";
    }
    get viewLicensesButtonLabel() {
      return "ΠΡΟΒΟΛΗ ΑΔΕΙΩΝ";
    }
  };
  (generated_material_localizations.MaterialLocalizationEl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "el";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEl.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEl);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationEl, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationEl.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEl, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEn = class MaterialLocalizationEn extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "About $applicationName";
    }
    get alertDialogLabel() {
      return "Alert";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Back";
    }
    get cancelButtonLabel() {
      return "CANCEL";
    }
    get closeButtonLabel() {
      return "CLOSE";
    }
    get closeButtonTooltip() {
      return "Close";
    }
    get collapsedIconTapHint() {
      return "Expand";
    }
    get continueButtonLabel() {
      return "CONTINUE";
    }
    get copyButtonLabel() {
      return "COPY";
    }
    get cutButtonLabel() {
      return "CUT";
    }
    get deleteButtonTooltip() {
      return "Delete";
    }
    get dialogLabel() {
      return "Dialog";
    }
    get drawerLabel() {
      return "Navigation menu";
    }
    get expandedIconTapHint() {
      return "Collapse";
    }
    get hideAccountsLabel() {
      return "Hide accounts";
    }
    get licensesPageTitle() {
      return "Licenses";
    }
    get modalBarrierDismissLabel() {
      return "Dismiss";
    }
    get nextMonthTooltip() {
      return "Next month";
    }
    get nextPageTooltip() {
      return "Next page";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Open navigation menu";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow of $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow of about $rowCount";
    }
    get pasteButtonLabel() {
      return "PASTE";
    }
    get popupMenuLabel() {
      return "Popup menu";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Previous month";
    }
    get previousPageTooltip() {
      return "Previous page";
    }
    get refreshIndicatorSemanticLabel() {
      return "Refresh";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 character remaining";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount characters remaining";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "No characters remaining";
    }
    get reorderItemDown() {
      return "Move down";
    }
    get reorderItemLeft() {
      return "Move left";
    }
    get reorderItemRight() {
      return "Move right";
    }
    get reorderItemToEnd() {
      return "Move to the end";
    }
    get reorderItemToStart() {
      return "Move to the start";
    }
    get reorderItemUp() {
      return "Move up";
    }
    get rowsPerPageTitle() {
      return "Rows per page:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Search";
    }
    get selectAllButtonLabel() {
      return "SELECT ALL";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 item selected";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount items selected";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return "No items selected";
    }
    get showAccountsLabel() {
      return "Show accounts";
    }
    get showMenuTooltip() {
      return "Show menu";
    }
    get signedInLabel() {
      return "Signed in";
    }
    get tabLabelRaw() {
      return "Tab $tabIndex of $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.h_colon_mm_space_a;
    }
    get timePickerHourModeAnnouncement() {
      return "Select hours";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Select minutes";
    }
    get viewLicensesButtonLabel() {
      return "VIEW LICENSES";
    }
  };
  (generated_material_localizations.MaterialLocalizationEn.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEn.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEn.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEn);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationEn, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationEn.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEn, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEnAu = class MaterialLocalizationEnAu extends generated_material_localizations.MaterialLocalizationEn {
    get licensesPageTitle() {
      return "Licences";
    }
    get viewLicensesButtonLabel() {
      return "VIEW LICENCES";
    }
    get popupMenuLabel() {
      return "Pop-up menu";
    }
    get dialogLabel() {
      return "Dialogue";
    }
    get reorderItemLeft() {
      return "Move to the left";
    }
    get reorderItemRight() {
      return "Move to the right";
    }
  };
  (generated_material_localizations.MaterialLocalizationEnAu.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en_AU";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEnAu.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEnAu.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEnAu);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEnAu, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEnCa = class MaterialLocalizationEnCa extends generated_material_localizations.MaterialLocalizationEn {
    get licensesPageTitle() {
      return "Licences";
    }
    get viewLicensesButtonLabel() {
      return "VIEW LICENCES";
    }
    get popupMenuLabel() {
      return "Pop-up menu";
    }
    get dialogLabel() {
      return "Dialogue";
    }
    get reorderItemLeft() {
      return "Move to the left";
    }
    get reorderItemRight() {
      return "Move to the right";
    }
  };
  (generated_material_localizations.MaterialLocalizationEnCa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en_CA";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEnCa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEnCa.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEnCa);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEnCa, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEnGb = class MaterialLocalizationEnGb extends generated_material_localizations.MaterialLocalizationEn {
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get viewLicensesButtonLabel() {
      return "VIEW LICENCES";
    }
    get licensesPageTitle() {
      return "Licences";
    }
    get popupMenuLabel() {
      return "Pop-up menu";
    }
    get dialogLabel() {
      return "Dialogue";
    }
    get reorderItemLeft() {
      return "Move to the left";
    }
    get reorderItemRight() {
      return "Move to the right";
    }
  };
  (generated_material_localizations.MaterialLocalizationEnGb.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en_GB";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEnGb.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEnGb.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEnGb);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEnGb, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEnIe = class MaterialLocalizationEnIe extends generated_material_localizations.MaterialLocalizationEn {
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get viewLicensesButtonLabel() {
      return "VIEW LICENCES";
    }
    get licensesPageTitle() {
      return "Licences";
    }
    get popupMenuLabel() {
      return "Pop-up menu";
    }
    get dialogLabel() {
      return "Dialogue";
    }
    get reorderItemLeft() {
      return "Move to the left";
    }
    get reorderItemRight() {
      return "Move to the right";
    }
  };
  (generated_material_localizations.MaterialLocalizationEnIe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en_IE";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEnIe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEnIe.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEnIe);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEnIe, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEnIn = class MaterialLocalizationEnIn extends generated_material_localizations.MaterialLocalizationEn {
    get licensesPageTitle() {
      return "Licences";
    }
    get viewLicensesButtonLabel() {
      return "VIEW LICENCES";
    }
    get popupMenuLabel() {
      return "Pop-up menu";
    }
    get dialogLabel() {
      return "Dialogue";
    }
    get reorderItemLeft() {
      return "Move to the left";
    }
    get reorderItemRight() {
      return "Move to the right";
    }
  };
  (generated_material_localizations.MaterialLocalizationEnIn.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en_IN";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEnIn.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEnIn.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEnIn);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEnIn, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEnSg = class MaterialLocalizationEnSg extends generated_material_localizations.MaterialLocalizationEn {
    get licensesPageTitle() {
      return "Licences";
    }
    get viewLicensesButtonLabel() {
      return "VIEW LICENCES";
    }
    get popupMenuLabel() {
      return "Pop-up menu";
    }
    get dialogLabel() {
      return "Dialogue";
    }
    get reorderItemLeft() {
      return "Move to the left";
    }
    get reorderItemRight() {
      return "Move to the right";
    }
  };
  (generated_material_localizations.MaterialLocalizationEnSg.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en_SG";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEnSg.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEnSg.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEnSg);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEnSg, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEnZa = class MaterialLocalizationEnZa extends generated_material_localizations.MaterialLocalizationEn {
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get viewLicensesButtonLabel() {
      return "VIEW LICENCES";
    }
    get licensesPageTitle() {
      return "Licences";
    }
    get popupMenuLabel() {
      return "Pop-up menu";
    }
    get dialogLabel() {
      return "Dialogue";
    }
    get reorderItemLeft() {
      return "Move to the left";
    }
    get reorderItemRight() {
      return "Move to the right";
    }
  };
  (generated_material_localizations.MaterialLocalizationEnZa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en_ZA";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEnZa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEnZa.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEnZa);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEnZa, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEs = class MaterialLocalizationEs extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Sobre $applicationName";
    }
    get alertDialogLabel() {
      return "Alerta";
    }
    get anteMeridiemAbbreviation() {
      return "A.M.";
    }
    get backButtonTooltip() {
      return "Atrás";
    }
    get cancelButtonLabel() {
      return "CANCELAR";
    }
    get closeButtonLabel() {
      return "CERRAR";
    }
    get closeButtonTooltip() {
      return "Cerrar";
    }
    get collapsedIconTapHint() {
      return "Mostrar";
    }
    get continueButtonLabel() {
      return "CONTINUAR";
    }
    get copyButtonLabel() {
      return "COPIAR";
    }
    get cutButtonLabel() {
      return "CORTAR";
    }
    get deleteButtonTooltip() {
      return "Eliminar";
    }
    get dialogLabel() {
      return "Cuadro de diálogo";
    }
    get drawerLabel() {
      return "Menú de navegación";
    }
    get expandedIconTapHint() {
      return "Ocultar";
    }
    get hideAccountsLabel() {
      return "Ocultar cuentas";
    }
    get licensesPageTitle() {
      return "Licencias";
    }
    get modalBarrierDismissLabel() {
      return "Cerrar";
    }
    get nextMonthTooltip() {
      return "Mes siguiente";
    }
    get nextPageTooltip() {
      return "Página siguiente";
    }
    get okButtonLabel() {
      return "ACEPTAR";
    }
    get openAppDrawerTooltip() {
      return "Abrir el menú de navegación";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow‑$lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow‑$lastRow de aproximadamente $rowCount";
    }
    get pasteButtonLabel() {
      return "PEGAR";
    }
    get popupMenuLabel() {
      return "Menú emergente";
    }
    get postMeridiemAbbreviation() {
      return "P.M.";
    }
    get previousMonthTooltip() {
      return "Mes anterior";
    }
    get previousPageTooltip() {
      return "Página anterior";
    }
    get refreshIndicatorSemanticLabel() {
      return "Actualizar";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "Queda 1 carácter.";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Quedan $remainingCount caracteres";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Mover hacia abajo";
    }
    get reorderItemLeft() {
      return "Mover hacia la izquierda";
    }
    get reorderItemRight() {
      return "Mover hacia la derecha";
    }
    get reorderItemToEnd() {
      return "Mover al final";
    }
    get reorderItemToStart() {
      return "Mover al principio";
    }
    get reorderItemUp() {
      return "Mover hacia arriba";
    }
    get rowsPerPageTitle() {
      return "Filas por página:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Buscar";
    }
    get selectAllButtonLabel() {
      return "SELECCIONAR TODO";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 elemento seleccionado";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount elementos seleccionados";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return "No se han seleccionado elementos";
    }
    get showAccountsLabel() {
      return "Mostrar cuentas";
    }
    get showMenuTooltip() {
      return "Mostrar menú";
    }
    get signedInLabel() {
      return "Sesión iniciada";
    }
    get tabLabelRaw() {
      return "Pestaña $tabIndex de $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Seleccionar horas";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Seleccionar minutos";
    }
    get viewLicensesButtonLabel() {
      return "VER LICENCIAS";
    }
  };
  (generated_material_localizations.MaterialLocalizationEs.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEs.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEs.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEs);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationEs, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationEs.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEs, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEs419 = class MaterialLocalizationEs419 extends generated_material_localizations.MaterialLocalizationEs {
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
    get signedInLabel() {
      return "Cuenta con la que accediste";
    }
    get openAppDrawerTooltip() {
      return "Abrir menú de navegación";
    }
    get deleteButtonTooltip() {
      return "Borrar";
    }
    get nextMonthTooltip() {
      return "Próximo mes";
    }
    get nextPageTooltip() {
      return "Próxima página";
    }
    get aboutListTileTitleRaw() {
      return "Acerca de $applicationName";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow de aproximadamente $rowCount";
    }
    get selectedRowCountTitleOne() {
      return "Se seleccionó 1 elemento";
    }
    get selectedRowCountTitleOther() {
      return "Se seleccionaron $selectedRowCount elementos";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get dialogLabel() {
      return "Diálogo";
    }
    get reorderItemToStart() {
      return "Mover al inicio";
    }
    get expandedIconTapHint() {
      return "Contraer";
    }
    get collapsedIconTapHint() {
      return "Expandir";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Queda 1 carácter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Quedan $remainingCount caracteres";
    }
  };
  (generated_material_localizations.MaterialLocalizationEs419.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_419";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEs419.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEs419.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEs419);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEs419, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEsAr = class MaterialLocalizationEsAr extends generated_material_localizations.MaterialLocalizationEs {
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
    get signedInLabel() {
      return "Cuenta con la que accediste";
    }
    get openAppDrawerTooltip() {
      return "Abrir menú de navegación";
    }
    get deleteButtonTooltip() {
      return "Borrar";
    }
    get nextMonthTooltip() {
      return "Próximo mes";
    }
    get nextPageTooltip() {
      return "Próxima página";
    }
    get aboutListTileTitleRaw() {
      return "Acerca de $applicationName";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow de aproximadamente $rowCount";
    }
    get selectedRowCountTitleOne() {
      return "Se seleccionó 1 elemento";
    }
    get selectedRowCountTitleOther() {
      return "Se seleccionaron $selectedRowCount elementos";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get dialogLabel() {
      return "Diálogo";
    }
    get reorderItemToStart() {
      return "Mover al inicio";
    }
    get expandedIconTapHint() {
      return "Contraer";
    }
    get collapsedIconTapHint() {
      return "Expandir";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Queda 1 carácter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Quedan $remainingCount caracteres";
    }
  };
  (generated_material_localizations.MaterialLocalizationEsAr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_AR";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEsAr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEsAr.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEsAr);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEsAr, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEsBo = class MaterialLocalizationEsBo extends generated_material_localizations.MaterialLocalizationEs {
    get reorderItemToStart() {
      return "Mover al inicio";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
    get signedInLabel() {
      return "Cuenta con la que accediste";
    }
    get openAppDrawerTooltip() {
      return "Abrir menú de navegación";
    }
    get deleteButtonTooltip() {
      return "Borrar";
    }
    get nextMonthTooltip() {
      return "Próximo mes";
    }
    get nextPageTooltip() {
      return "Próxima página";
    }
    get aboutListTileTitleRaw() {
      return "Acerca de $applicationName";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow de aproximadamente $rowCount";
    }
    get selectedRowCountTitleOne() {
      return "Se seleccionó 1 elemento";
    }
    get selectedRowCountTitleOther() {
      return "Se seleccionaron $selectedRowCount elementos";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get dialogLabel() {
      return "Diálogo";
    }
    get expandedIconTapHint() {
      return "Contraer";
    }
    get collapsedIconTapHint() {
      return "Expandir";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Queda 1 carácter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Quedan $remainingCount caracteres";
    }
  };
  (generated_material_localizations.MaterialLocalizationEsBo.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_BO";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEsBo.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEsBo.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEsBo);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEsBo, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEsCl = class MaterialLocalizationEsCl extends generated_material_localizations.MaterialLocalizationEs {
    get reorderItemToStart() {
      return "Mover al inicio";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
    get signedInLabel() {
      return "Cuenta con la que accediste";
    }
    get openAppDrawerTooltip() {
      return "Abrir menú de navegación";
    }
    get deleteButtonTooltip() {
      return "Borrar";
    }
    get nextMonthTooltip() {
      return "Próximo mes";
    }
    get nextPageTooltip() {
      return "Próxima página";
    }
    get aboutListTileTitleRaw() {
      return "Acerca de $applicationName";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow de aproximadamente $rowCount";
    }
    get selectedRowCountTitleOne() {
      return "Se seleccionó 1 elemento";
    }
    get selectedRowCountTitleOther() {
      return "Se seleccionaron $selectedRowCount elementos";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get dialogLabel() {
      return "Diálogo";
    }
    get expandedIconTapHint() {
      return "Contraer";
    }
    get collapsedIconTapHint() {
      return "Expandir";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Queda 1 carácter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Quedan $remainingCount caracteres";
    }
  };
  (generated_material_localizations.MaterialLocalizationEsCl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_CL";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEsCl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEsCl.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEsCl);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEsCl, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEsCo = class MaterialLocalizationEsCo extends generated_material_localizations.MaterialLocalizationEs {
    get reorderItemToStart() {
      return "Mover al inicio";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
    get signedInLabel() {
      return "Cuenta con la que accediste";
    }
    get openAppDrawerTooltip() {
      return "Abrir menú de navegación";
    }
    get deleteButtonTooltip() {
      return "Borrar";
    }
    get nextMonthTooltip() {
      return "Próximo mes";
    }
    get nextPageTooltip() {
      return "Próxima página";
    }
    get aboutListTileTitleRaw() {
      return "Acerca de $applicationName";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow de aproximadamente $rowCount";
    }
    get selectedRowCountTitleOne() {
      return "Se seleccionó 1 elemento";
    }
    get selectedRowCountTitleOther() {
      return "Se seleccionaron $selectedRowCount elementos";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get dialogLabel() {
      return "Diálogo";
    }
    get expandedIconTapHint() {
      return "Contraer";
    }
    get collapsedIconTapHint() {
      return "Expandir";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Queda 1 carácter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Quedan $remainingCount caracteres";
    }
  };
  (generated_material_localizations.MaterialLocalizationEsCo.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_CO";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEsCo.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEsCo.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEsCo);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEsCo, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEsCr = class MaterialLocalizationEsCr extends generated_material_localizations.MaterialLocalizationEs {
    get reorderItemToStart() {
      return "Mover al inicio";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
    get signedInLabel() {
      return "Cuenta con la que accediste";
    }
    get openAppDrawerTooltip() {
      return "Abrir menú de navegación";
    }
    get deleteButtonTooltip() {
      return "Borrar";
    }
    get nextMonthTooltip() {
      return "Próximo mes";
    }
    get nextPageTooltip() {
      return "Próxima página";
    }
    get aboutListTileTitleRaw() {
      return "Acerca de $applicationName";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow de aproximadamente $rowCount";
    }
    get selectedRowCountTitleOne() {
      return "Se seleccionó 1 elemento";
    }
    get selectedRowCountTitleOther() {
      return "Se seleccionaron $selectedRowCount elementos";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get dialogLabel() {
      return "Diálogo";
    }
    get expandedIconTapHint() {
      return "Contraer";
    }
    get collapsedIconTapHint() {
      return "Expandir";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Queda 1 carácter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Quedan $remainingCount caracteres";
    }
  };
  (generated_material_localizations.MaterialLocalizationEsCr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_CR";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEsCr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEsCr.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEsCr);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEsCr, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEsDo = class MaterialLocalizationEsDo extends generated_material_localizations.MaterialLocalizationEs {
    get reorderItemToStart() {
      return "Mover al inicio";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
    get signedInLabel() {
      return "Cuenta con la que accediste";
    }
    get openAppDrawerTooltip() {
      return "Abrir menú de navegación";
    }
    get deleteButtonTooltip() {
      return "Borrar";
    }
    get nextMonthTooltip() {
      return "Próximo mes";
    }
    get nextPageTooltip() {
      return "Próxima página";
    }
    get aboutListTileTitleRaw() {
      return "Acerca de $applicationName";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow de aproximadamente $rowCount";
    }
    get selectedRowCountTitleOne() {
      return "Se seleccionó 1 elemento";
    }
    get selectedRowCountTitleOther() {
      return "Se seleccionaron $selectedRowCount elementos";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get dialogLabel() {
      return "Diálogo";
    }
    get expandedIconTapHint() {
      return "Contraer";
    }
    get collapsedIconTapHint() {
      return "Expandir";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Queda 1 carácter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Quedan $remainingCount caracteres";
    }
  };
  (generated_material_localizations.MaterialLocalizationEsDo.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_DO";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEsDo.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEsDo.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEsDo);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEsDo, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEsEc = class MaterialLocalizationEsEc extends generated_material_localizations.MaterialLocalizationEs {
    get reorderItemToStart() {
      return "Mover al inicio";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
    get signedInLabel() {
      return "Cuenta con la que accediste";
    }
    get openAppDrawerTooltip() {
      return "Abrir menú de navegación";
    }
    get deleteButtonTooltip() {
      return "Borrar";
    }
    get nextMonthTooltip() {
      return "Próximo mes";
    }
    get nextPageTooltip() {
      return "Próxima página";
    }
    get aboutListTileTitleRaw() {
      return "Acerca de $applicationName";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow de aproximadamente $rowCount";
    }
    get selectedRowCountTitleOne() {
      return "Se seleccionó 1 elemento";
    }
    get selectedRowCountTitleOther() {
      return "Se seleccionaron $selectedRowCount elementos";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get dialogLabel() {
      return "Diálogo";
    }
    get expandedIconTapHint() {
      return "Contraer";
    }
    get collapsedIconTapHint() {
      return "Expandir";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Queda 1 carácter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Quedan $remainingCount caracteres";
    }
  };
  (generated_material_localizations.MaterialLocalizationEsEc.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_EC";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEsEc.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEsEc.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEsEc);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEsEc, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEsGt = class MaterialLocalizationEsGt extends generated_material_localizations.MaterialLocalizationEs {
    get reorderItemToStart() {
      return "Mover al inicio";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
    get signedInLabel() {
      return "Cuenta con la que accediste";
    }
    get openAppDrawerTooltip() {
      return "Abrir menú de navegación";
    }
    get deleteButtonTooltip() {
      return "Borrar";
    }
    get nextMonthTooltip() {
      return "Próximo mes";
    }
    get nextPageTooltip() {
      return "Próxima página";
    }
    get aboutListTileTitleRaw() {
      return "Acerca de $applicationName";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow de aproximadamente $rowCount";
    }
    get selectedRowCountTitleOne() {
      return "Se seleccionó 1 elemento";
    }
    get selectedRowCountTitleOther() {
      return "Se seleccionaron $selectedRowCount elementos";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get dialogLabel() {
      return "Diálogo";
    }
    get expandedIconTapHint() {
      return "Contraer";
    }
    get collapsedIconTapHint() {
      return "Expandir";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Queda 1 carácter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Quedan $remainingCount caracteres";
    }
  };
  (generated_material_localizations.MaterialLocalizationEsGt.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_GT";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEsGt.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEsGt.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEsGt);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEsGt, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEsHn = class MaterialLocalizationEsHn extends generated_material_localizations.MaterialLocalizationEs {
    get reorderItemToStart() {
      return "Mover al inicio";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
    get signedInLabel() {
      return "Cuenta con la que accediste";
    }
    get openAppDrawerTooltip() {
      return "Abrir menú de navegación";
    }
    get deleteButtonTooltip() {
      return "Borrar";
    }
    get nextMonthTooltip() {
      return "Próximo mes";
    }
    get nextPageTooltip() {
      return "Próxima página";
    }
    get aboutListTileTitleRaw() {
      return "Acerca de $applicationName";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow de aproximadamente $rowCount";
    }
    get selectedRowCountTitleOne() {
      return "Se seleccionó 1 elemento";
    }
    get selectedRowCountTitleOther() {
      return "Se seleccionaron $selectedRowCount elementos";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get dialogLabel() {
      return "Diálogo";
    }
    get expandedIconTapHint() {
      return "Contraer";
    }
    get collapsedIconTapHint() {
      return "Expandir";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Queda 1 carácter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Quedan $remainingCount caracteres";
    }
  };
  (generated_material_localizations.MaterialLocalizationEsHn.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_HN";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEsHn.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEsHn.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEsHn);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEsHn, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEsMx = class MaterialLocalizationEsMx extends generated_material_localizations.MaterialLocalizationEs {
    get reorderItemToStart() {
      return "Mover al inicio";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
    get signedInLabel() {
      return "Cuenta con la que accediste";
    }
    get openAppDrawerTooltip() {
      return "Abrir menú de navegación";
    }
    get deleteButtonTooltip() {
      return "Borrar";
    }
    get nextMonthTooltip() {
      return "Próximo mes";
    }
    get nextPageTooltip() {
      return "Próxima página";
    }
    get aboutListTileTitleRaw() {
      return "Acerca de $applicationName";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow de aproximadamente $rowCount";
    }
    get selectedRowCountTitleOne() {
      return "Se seleccionó 1 elemento";
    }
    get selectedRowCountTitleOther() {
      return "Se seleccionaron $selectedRowCount elementos";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get dialogLabel() {
      return "Diálogo";
    }
    get expandedIconTapHint() {
      return "Contraer";
    }
    get collapsedIconTapHint() {
      return "Expandir";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Queda 1 carácter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Quedan $remainingCount caracteres";
    }
  };
  (generated_material_localizations.MaterialLocalizationEsMx.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_MX";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEsMx.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEsMx.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEsMx);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEsMx, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEsNi = class MaterialLocalizationEsNi extends generated_material_localizations.MaterialLocalizationEs {
    get reorderItemToStart() {
      return "Mover al inicio";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
    get signedInLabel() {
      return "Cuenta con la que accediste";
    }
    get openAppDrawerTooltip() {
      return "Abrir menú de navegación";
    }
    get deleteButtonTooltip() {
      return "Borrar";
    }
    get nextMonthTooltip() {
      return "Próximo mes";
    }
    get nextPageTooltip() {
      return "Próxima página";
    }
    get aboutListTileTitleRaw() {
      return "Acerca de $applicationName";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow de aproximadamente $rowCount";
    }
    get selectedRowCountTitleOne() {
      return "Se seleccionó 1 elemento";
    }
    get selectedRowCountTitleOther() {
      return "Se seleccionaron $selectedRowCount elementos";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get dialogLabel() {
      return "Diálogo";
    }
    get expandedIconTapHint() {
      return "Contraer";
    }
    get collapsedIconTapHint() {
      return "Expandir";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Queda 1 carácter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Quedan $remainingCount caracteres";
    }
  };
  (generated_material_localizations.MaterialLocalizationEsNi.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_NI";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEsNi.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEsNi.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEsNi);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEsNi, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEsPa = class MaterialLocalizationEsPa extends generated_material_localizations.MaterialLocalizationEs {
    get reorderItemToStart() {
      return "Mover al inicio";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
    get signedInLabel() {
      return "Cuenta con la que accediste";
    }
    get openAppDrawerTooltip() {
      return "Abrir menú de navegación";
    }
    get deleteButtonTooltip() {
      return "Borrar";
    }
    get nextMonthTooltip() {
      return "Próximo mes";
    }
    get nextPageTooltip() {
      return "Próxima página";
    }
    get aboutListTileTitleRaw() {
      return "Acerca de $applicationName";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow de aproximadamente $rowCount";
    }
    get selectedRowCountTitleOne() {
      return "Se seleccionó 1 elemento";
    }
    get selectedRowCountTitleOther() {
      return "Se seleccionaron $selectedRowCount elementos";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get dialogLabel() {
      return "Diálogo";
    }
    get expandedIconTapHint() {
      return "Contraer";
    }
    get collapsedIconTapHint() {
      return "Expandir";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Queda 1 carácter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Quedan $remainingCount caracteres";
    }
  };
  (generated_material_localizations.MaterialLocalizationEsPa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_PA";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEsPa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEsPa.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEsPa);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEsPa, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEsPe = class MaterialLocalizationEsPe extends generated_material_localizations.MaterialLocalizationEs {
    get reorderItemToStart() {
      return "Mover al inicio";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
    get signedInLabel() {
      return "Cuenta con la que accediste";
    }
    get openAppDrawerTooltip() {
      return "Abrir menú de navegación";
    }
    get deleteButtonTooltip() {
      return "Borrar";
    }
    get nextMonthTooltip() {
      return "Próximo mes";
    }
    get nextPageTooltip() {
      return "Próxima página";
    }
    get aboutListTileTitleRaw() {
      return "Acerca de $applicationName";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow de aproximadamente $rowCount";
    }
    get selectedRowCountTitleOne() {
      return "Se seleccionó 1 elemento";
    }
    get selectedRowCountTitleOther() {
      return "Se seleccionaron $selectedRowCount elementos";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get dialogLabel() {
      return "Diálogo";
    }
    get expandedIconTapHint() {
      return "Contraer";
    }
    get collapsedIconTapHint() {
      return "Expandir";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Queda 1 carácter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Quedan $remainingCount caracteres";
    }
  };
  (generated_material_localizations.MaterialLocalizationEsPe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_PE";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEsPe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEsPe.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEsPe);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEsPe, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEsPr = class MaterialLocalizationEsPr extends generated_material_localizations.MaterialLocalizationEs {
    get reorderItemToStart() {
      return "Mover al inicio";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
    get signedInLabel() {
      return "Cuenta con la que accediste";
    }
    get openAppDrawerTooltip() {
      return "Abrir menú de navegación";
    }
    get deleteButtonTooltip() {
      return "Borrar";
    }
    get nextMonthTooltip() {
      return "Próximo mes";
    }
    get nextPageTooltip() {
      return "Próxima página";
    }
    get aboutListTileTitleRaw() {
      return "Acerca de $applicationName";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow de aproximadamente $rowCount";
    }
    get selectedRowCountTitleOne() {
      return "Se seleccionó 1 elemento";
    }
    get selectedRowCountTitleOther() {
      return "Se seleccionaron $selectedRowCount elementos";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get dialogLabel() {
      return "Diálogo";
    }
    get expandedIconTapHint() {
      return "Contraer";
    }
    get collapsedIconTapHint() {
      return "Expandir";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Queda 1 carácter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Quedan $remainingCount caracteres";
    }
  };
  (generated_material_localizations.MaterialLocalizationEsPr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_PR";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEsPr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEsPr.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEsPr);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEsPr, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEsPy = class MaterialLocalizationEsPy extends generated_material_localizations.MaterialLocalizationEs {
    get reorderItemToStart() {
      return "Mover al inicio";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
    get signedInLabel() {
      return "Cuenta con la que accediste";
    }
    get openAppDrawerTooltip() {
      return "Abrir menú de navegación";
    }
    get deleteButtonTooltip() {
      return "Borrar";
    }
    get nextMonthTooltip() {
      return "Próximo mes";
    }
    get nextPageTooltip() {
      return "Próxima página";
    }
    get aboutListTileTitleRaw() {
      return "Acerca de $applicationName";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow de aproximadamente $rowCount";
    }
    get selectedRowCountTitleOne() {
      return "Se seleccionó 1 elemento";
    }
    get selectedRowCountTitleOther() {
      return "Se seleccionaron $selectedRowCount elementos";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get dialogLabel() {
      return "Diálogo";
    }
    get expandedIconTapHint() {
      return "Contraer";
    }
    get collapsedIconTapHint() {
      return "Expandir";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Queda 1 carácter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Quedan $remainingCount caracteres";
    }
  };
  (generated_material_localizations.MaterialLocalizationEsPy.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_PY";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEsPy.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEsPy.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEsPy);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEsPy, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEsSv = class MaterialLocalizationEsSv extends generated_material_localizations.MaterialLocalizationEs {
    get reorderItemToStart() {
      return "Mover al inicio";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
    get signedInLabel() {
      return "Cuenta con la que accediste";
    }
    get openAppDrawerTooltip() {
      return "Abrir menú de navegación";
    }
    get deleteButtonTooltip() {
      return "Borrar";
    }
    get nextMonthTooltip() {
      return "Próximo mes";
    }
    get nextPageTooltip() {
      return "Próxima página";
    }
    get aboutListTileTitleRaw() {
      return "Acerca de $applicationName";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow de aproximadamente $rowCount";
    }
    get selectedRowCountTitleOne() {
      return "Se seleccionó 1 elemento";
    }
    get selectedRowCountTitleOther() {
      return "Se seleccionaron $selectedRowCount elementos";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get dialogLabel() {
      return "Diálogo";
    }
    get expandedIconTapHint() {
      return "Contraer";
    }
    get collapsedIconTapHint() {
      return "Expandir";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Queda 1 carácter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Quedan $remainingCount caracteres";
    }
  };
  (generated_material_localizations.MaterialLocalizationEsSv.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_SV";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEsSv.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEsSv.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEsSv);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEsSv, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEsUs = class MaterialLocalizationEsUs extends generated_material_localizations.MaterialLocalizationEs {
    get reorderItemToStart() {
      return "Mover al inicio";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
    get signedInLabel() {
      return "Cuenta con la que accediste";
    }
    get deleteButtonTooltip() {
      return "Borrar";
    }
    get nextMonthTooltip() {
      return "Próximo mes";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow de aproximadamente $rowCount";
    }
    get aboutListTileTitleRaw() {
      return "Acerca de $applicationName";
    }
    get nextPageTooltip() {
      return "Próxima página";
    }
    get openAppDrawerTooltip() {
      return "Abrir menú de navegación";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow de $rowCount";
    }
    get selectedRowCountTitleOne() {
      return "Se seleccionó 1 elemento";
    }
    get selectedRowCountTitleOther() {
      return "Se seleccionaron $selectedRowCount elementos";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.h_colon_mm_space_a;
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get dialogLabel() {
      return "Diálogo";
    }
    get expandedIconTapHint() {
      return "Contraer";
    }
    get collapsedIconTapHint() {
      return "Expandir";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Queda 1 carácter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Quedan $remainingCount caracteres";
    }
  };
  (generated_material_localizations.MaterialLocalizationEsUs.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_US";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEsUs.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEsUs.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEsUs);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEsUs, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEsUy = class MaterialLocalizationEsUy extends generated_material_localizations.MaterialLocalizationEs {
    get reorderItemToStart() {
      return "Mover al inicio";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
    get signedInLabel() {
      return "Cuenta con la que accediste";
    }
    get openAppDrawerTooltip() {
      return "Abrir menú de navegación";
    }
    get deleteButtonTooltip() {
      return "Borrar";
    }
    get nextMonthTooltip() {
      return "Próximo mes";
    }
    get nextPageTooltip() {
      return "Próxima página";
    }
    get aboutListTileTitleRaw() {
      return "Acerca de $applicationName";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow de aproximadamente $rowCount";
    }
    get selectedRowCountTitleOne() {
      return "Se seleccionó 1 elemento";
    }
    get selectedRowCountTitleOther() {
      return "Se seleccionaron $selectedRowCount elementos";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get dialogLabel() {
      return "Diálogo";
    }
    get expandedIconTapHint() {
      return "Contraer";
    }
    get collapsedIconTapHint() {
      return "Expandir";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Queda 1 carácter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Quedan $remainingCount caracteres";
    }
  };
  (generated_material_localizations.MaterialLocalizationEsUy.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_UY";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEsUy.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEsUy.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEsUy);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEsUy, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEsVe = class MaterialLocalizationEsVe extends generated_material_localizations.MaterialLocalizationEs {
    get reorderItemToStart() {
      return "Mover al inicio";
    }
    get modalBarrierDismissLabel() {
      return "Descartar";
    }
    get signedInLabel() {
      return "Cuenta con la que accediste";
    }
    get openAppDrawerTooltip() {
      return "Abrir menú de navegación";
    }
    get deleteButtonTooltip() {
      return "Borrar";
    }
    get nextMonthTooltip() {
      return "Próximo mes";
    }
    get nextPageTooltip() {
      return "Próxima página";
    }
    get aboutListTileTitleRaw() {
      return "Acerca de $applicationName";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow de aproximadamente $rowCount";
    }
    get selectedRowCountTitleOne() {
      return "Se seleccionó 1 elemento";
    }
    get selectedRowCountTitleOther() {
      return "Se seleccionaron $selectedRowCount elementos";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get dialogLabel() {
      return "Diálogo";
    }
    get expandedIconTapHint() {
      return "Contraer";
    }
    get collapsedIconTapHint() {
      return "Expandir";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Queda 1 carácter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Quedan $remainingCount caracteres";
    }
  };
  (generated_material_localizations.MaterialLocalizationEsVe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_VE";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEsVe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEsVe.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEsVe);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEsVe, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEt = class MaterialLocalizationEt extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Teave rakenduse $applicationName kohta";
    }
    get alertDialogLabel() {
      return "Märguanne";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Tagasi";
    }
    get cancelButtonLabel() {
      return "TÜHISTA";
    }
    get closeButtonLabel() {
      return "SULE";
    }
    get closeButtonTooltip() {
      return "Sule";
    }
    get collapsedIconTapHint() {
      return "Laienda";
    }
    get continueButtonLabel() {
      return "JÄTKA";
    }
    get copyButtonLabel() {
      return "KOPEERI";
    }
    get cutButtonLabel() {
      return "LÕIKA";
    }
    get deleteButtonTooltip() {
      return "Kustuta";
    }
    get dialogLabel() {
      return "Dialoog";
    }
    get drawerLabel() {
      return "Navigeerimismenüü";
    }
    get expandedIconTapHint() {
      return "Ahenda";
    }
    get hideAccountsLabel() {
      return "Peida kontod";
    }
    get licensesPageTitle() {
      return "Litsentsid";
    }
    get modalBarrierDismissLabel() {
      return "Loobu";
    }
    get nextMonthTooltip() {
      return "Järgmine kuu";
    }
    get nextPageTooltip() {
      return "Järgmine leht";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Ava navigeerimismenüü";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow $rowCount-st";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow umbes $rowCount-st";
    }
    get pasteButtonLabel() {
      return "KLEEBI";
    }
    get popupMenuLabel() {
      return "Hüpikmenüü";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Eelmine kuu";
    }
    get previousPageTooltip() {
      return "Eelmine leht";
    }
    get refreshIndicatorSemanticLabel() {
      return "Värskendamine";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "Jäänud on 1 tähemärk";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Jäänud on $remainingCount tähemärki";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Teisalda alla";
    }
    get reorderItemLeft() {
      return "Teisalda vasakule";
    }
    get reorderItemRight() {
      return "Teisalda paremale";
    }
    get reorderItemToEnd() {
      return "Teisalda lõppu";
    }
    get reorderItemToStart() {
      return "Teisalda algusesse";
    }
    get reorderItemUp() {
      return "Teisalda üles";
    }
    get rowsPerPageTitle() {
      return "Ridu lehe kohta:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Otsing";
    }
    get selectAllButtonLabel() {
      return "VALI KÕIK";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "Valitud on 1 üksus";
    }
    get selectedRowCountTitleOther() {
      return "Valitud on $selectedRowCount üksust";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Kuva kontod";
    }
    get showMenuTooltip() {
      return "Kuva menüü";
    }
    get signedInLabel() {
      return "Sisse logitud";
    }
    get tabLabelRaw() {
      return "$tabIndex. vahekaart $tabCount-st";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Tundide valimine";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Minutite valimine";
    }
    get viewLicensesButtonLabel() {
      return "KUVA LITSENTSID";
    }
  };
  (generated_material_localizations.MaterialLocalizationEt.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "et";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEt.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEt.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEt);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationEt, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationEt.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEt, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationEu = class MaterialLocalizationEu extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName aplikazioari buruz";
    }
    get alertDialogLabel() {
      return "Alerta";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Atzera";
    }
    get cancelButtonLabel() {
      return "UTZI";
    }
    get closeButtonLabel() {
      return "ITXI";
    }
    get closeButtonTooltip() {
      return "Itxi";
    }
    get collapsedIconTapHint() {
      return "Zabaldu";
    }
    get continueButtonLabel() {
      return "EGIN AURRERA";
    }
    get copyButtonLabel() {
      return "KOPIATU";
    }
    get cutButtonLabel() {
      return "EBAKI";
    }
    get deleteButtonTooltip() {
      return "Ezabatu";
    }
    get dialogLabel() {
      return "Leihoa";
    }
    get drawerLabel() {
      return "Nabigazio-menua";
    }
    get expandedIconTapHint() {
      return "Tolestu";
    }
    get hideAccountsLabel() {
      return "Ezkutatu kontuak";
    }
    get licensesPageTitle() {
      return "Lizentziak";
    }
    get modalBarrierDismissLabel() {
      return "Baztertu";
    }
    get nextMonthTooltip() {
      return "Hurrengo hilabetea";
    }
    get nextPageTooltip() {
      return "Hurrengo orria";
    }
    get okButtonLabel() {
      return "Ados";
    }
    get openAppDrawerTooltip() {
      return "Ireki nabigazio-menua";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow - $lastRow / $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow - $lastRow / $rowCount";
    }
    get pasteButtonLabel() {
      return "ITSATSI";
    }
    get popupMenuLabel() {
      return "Menu gainerakorra";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Aurreko hilabetea";
    }
    get previousPageTooltip() {
      return "Aurreko orria";
    }
    get refreshIndicatorSemanticLabel() {
      return "Freskatu";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 karaktere geratzen da";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount karaktere geratzen dira";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "Eraman behera";
    }
    get reorderItemLeft() {
      return "Eraman ezkerrera";
    }
    get reorderItemRight() {
      return "Eraman eskuinera";
    }
    get reorderItemToEnd() {
      return "Eraman amaierara";
    }
    get reorderItemToStart() {
      return "Eraman hasierara";
    }
    get reorderItemUp() {
      return "Eraman gora";
    }
    get rowsPerPageTitle() {
      return "Errenkadak orriko:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Bilatu";
    }
    get selectAllButtonLabel() {
      return "HAUTATU GUZTIAK";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 elementu hautatu da";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount elementu hautatu dira";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Erakutsi kontuak";
    }
    get showMenuTooltip() {
      return "Erakutsi menua";
    }
    get signedInLabel() {
      return "Hasi da saioa";
    }
    get tabLabelRaw() {
      return "$tabIndex/$tabCount fitxa";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Hautatu orduak";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Hautatu minutuak";
    }
    get viewLicensesButtonLabel() {
      return "IKUSI LIZENTZIAK";
    }
  };
  (generated_material_localizations.MaterialLocalizationEu.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "eu";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationEu.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationEu.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationEu);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationEu, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationEu.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationEu, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationFa = class MaterialLocalizationFa extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "درباره $applicationName";
    }
    get alertDialogLabel() {
      return "هشدار";
    }
    get anteMeridiemAbbreviation() {
      return "ق.ظ.";
    }
    get backButtonTooltip() {
      return "برگشت";
    }
    get cancelButtonLabel() {
      return "لغو";
    }
    get closeButtonLabel() {
      return "بستن";
    }
    get closeButtonTooltip() {
      return "بستن";
    }
    get collapsedIconTapHint() {
      return "بزرگ کردن";
    }
    get continueButtonLabel() {
      return "ادامه";
    }
    get copyButtonLabel() {
      return "کپی";
    }
    get cutButtonLabel() {
      return "برش";
    }
    get deleteButtonTooltip() {
      return "حذف";
    }
    get dialogLabel() {
      return "کادر گفتگو";
    }
    get drawerLabel() {
      return "منوی پیمایش";
    }
    get expandedIconTapHint() {
      return "کوچک کردن";
    }
    get hideAccountsLabel() {
      return "پنهان کردن حساب‌ها";
    }
    get licensesPageTitle() {
      return "مجوزها";
    }
    get modalBarrierDismissLabel() {
      return "نپذیرفتن";
    }
    get nextMonthTooltip() {
      return "ماه بعد";
    }
    get nextPageTooltip() {
      return "صفحه بعد";
    }
    get okButtonLabel() {
      return "تأیید";
    }
    get openAppDrawerTooltip() {
      return "باز کردن منوی پیمایش";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow از $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow از حدود $rowCount";
    }
    get pasteButtonLabel() {
      return "جای‌گذاری";
    }
    get popupMenuLabel() {
      return "منوی بازشو";
    }
    get postMeridiemAbbreviation() {
      return "ب.ظ.";
    }
    get previousMonthTooltip() {
      return "ماه قبل";
    }
    get previousPageTooltip() {
      return "صفحه قبل";
    }
    get refreshIndicatorSemanticLabel() {
      return "بازخوانی";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "۱ نویسه باقی مانده است";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount نویسه باقی مانده است";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "انتقال به پایین";
    }
    get reorderItemLeft() {
      return "انتقال به راست";
    }
    get reorderItemRight() {
      return "انتقال به چپ";
    }
    get reorderItemToEnd() {
      return "انتقال به انتها";
    }
    get reorderItemToStart() {
      return "انتقال به ابتدا";
    }
    get reorderItemUp() {
      return "انتقال به بالا";
    }
    get rowsPerPageTitle() {
      return "ردیف در هر صفحه:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.tall;
    }
    get searchFieldLabel() {
      return "جستجو";
    }
    get selectAllButtonLabel() {
      return "انتخاب همه";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "۱ مورد انتخاب شد";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount مورد انتخاب شدند";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "نشان دادن حساب‌ها";
    }
    get showMenuTooltip() {
      return "نمایش منو";
    }
    get signedInLabel() {
      return "واردشده به سیستم";
    }
    get tabLabelRaw() {
      return "برگه $tabIndex از $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "انتخاب ساعت";
    }
    get timePickerMinuteModeAnnouncement() {
      return "انتخاب دقیقه";
    }
    get viewLicensesButtonLabel() {
      return "مشاهده مجوزها";
    }
  };
  (generated_material_localizations.MaterialLocalizationFa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "fa";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationFa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationFa.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationFa);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationFa, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationFa.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationFa, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationFi = class MaterialLocalizationFi extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Tietoja: $applicationName";
    }
    get alertDialogLabel() {
      return "Ilmoitus";
    }
    get anteMeridiemAbbreviation() {
      return "ap";
    }
    get backButtonTooltip() {
      return "Takaisin";
    }
    get cancelButtonLabel() {
      return "PERUUTA";
    }
    get closeButtonLabel() {
      return "SULJE";
    }
    get closeButtonTooltip() {
      return "Sulje";
    }
    get collapsedIconTapHint() {
      return "Laajenna";
    }
    get continueButtonLabel() {
      return "JATKA";
    }
    get copyButtonLabel() {
      return "COPY";
    }
    get cutButtonLabel() {
      return "LEIKKAA";
    }
    get deleteButtonTooltip() {
      return "Poista";
    }
    get dialogLabel() {
      return "Valintaikkuna";
    }
    get drawerLabel() {
      return "Navigointivalikko";
    }
    get expandedIconTapHint() {
      return "Tiivistä";
    }
    get hideAccountsLabel() {
      return "Piilota tilit";
    }
    get licensesPageTitle() {
      return "Lisenssit";
    }
    get modalBarrierDismissLabel() {
      return "Ohita";
    }
    get nextMonthTooltip() {
      return "Seuraava kuukausi";
    }
    get nextPageTooltip() {
      return "Seuraava sivu";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Avaa navigointivalikko";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow/$rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow/~$rowCount";
    }
    get pasteButtonLabel() {
      return "Sijoita";
    }
    get popupMenuLabel() {
      return "Ponnahdusvalikko";
    }
    get postMeridiemAbbreviation() {
      return "ip";
    }
    get previousMonthTooltip() {
      return "Edellinen kuukausi";
    }
    get previousPageTooltip() {
      return "Edellinen sivu";
    }
    get refreshIndicatorSemanticLabel() {
      return "Päivitys";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 merkki jäljellä";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount merkkiä jäljellä";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Siirrä alas";
    }
    get reorderItemLeft() {
      return "Siirrä vasemmalle";
    }
    get reorderItemRight() {
      return "Siirrä oikealle";
    }
    get reorderItemToEnd() {
      return "Siirrä loppuun";
    }
    get reorderItemToStart() {
      return "Siirrä alkuun";
    }
    get reorderItemUp() {
      return "Siirrä ylös";
    }
    get rowsPerPageTitle() {
      return "Riviä/sivu:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Haku";
    }
    get selectAllButtonLabel() {
      return "VALITSE KAIKKI";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 kohde valittu";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount kohdetta valittu";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Näytä tilit";
    }
    get showMenuTooltip() {
      return "Näytä valikko";
    }
    get signedInLabel() {
      return "Kirjautunut sisään";
    }
    get tabLabelRaw() {
      return "Välilehti $tabIndex/$tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Valitse tunnit";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Valitse minuutit";
    }
    get viewLicensesButtonLabel() {
      return "NÄYTÄ KÄYTTÖOIKEUDET";
    }
  };
  (generated_material_localizations.MaterialLocalizationFi.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "fi";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationFi.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationFi.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationFi);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationFi, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationFi.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationFi, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationFil = class MaterialLocalizationFil extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Tungkol sa $applicationName";
    }
    get alertDialogLabel() {
      return "Alerto";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Bumalik";
    }
    get cancelButtonLabel() {
      return "KANSELAHIN";
    }
    get closeButtonLabel() {
      return "ISARA";
    }
    get closeButtonTooltip() {
      return "Isara";
    }
    get collapsedIconTapHint() {
      return "I-expand";
    }
    get continueButtonLabel() {
      return "MAGPATULOY";
    }
    get copyButtonLabel() {
      return "KOPYAHIN";
    }
    get cutButtonLabel() {
      return "I-CUT";
    }
    get deleteButtonTooltip() {
      return "I-delete";
    }
    get dialogLabel() {
      return "Dialog";
    }
    get drawerLabel() {
      return "Menu ng navigation";
    }
    get expandedIconTapHint() {
      return "I-collapse";
    }
    get hideAccountsLabel() {
      return "Itago ang mga account";
    }
    get licensesPageTitle() {
      return "Mga Lisensya";
    }
    get modalBarrierDismissLabel() {
      return "I-dismiss";
    }
    get nextMonthTooltip() {
      return "Susunod na buwan";
    }
    get nextPageTooltip() {
      return "Susunod na page";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Buksan ang menu ng navigation";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow ng $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow ng humigit kumulang $rowCount";
    }
    get pasteButtonLabel() {
      return "I-PASTE";
    }
    get popupMenuLabel() {
      return "Popup na menu";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Nakaraang buwan";
    }
    get previousPageTooltip() {
      return "Nakaraang page";
    }
    get refreshIndicatorSemanticLabel() {
      return "Nagre-refresh";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 character ang natitira";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount na character ang natitira";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Ilipat pababa";
    }
    get reorderItemLeft() {
      return "Ilipat pakaliwa";
    }
    get reorderItemRight() {
      return "Ilipat pakanan";
    }
    get reorderItemToEnd() {
      return "Ilipat sa dulo";
    }
    get reorderItemToStart() {
      return "Ilipat sa simula";
    }
    get reorderItemUp() {
      return "Ilipat pataas";
    }
    get rowsPerPageTitle() {
      return "Mga row bawat page:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Maghanap";
    }
    get selectAllButtonLabel() {
      return "PILIIN LAHAT";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 item ang napili";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount na item ang napili";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Ipakita ang mga account";
    }
    get showMenuTooltip() {
      return "Ipakita ang menu";
    }
    get signedInLabel() {
      return "Naka-sign in";
    }
    get tabLabelRaw() {
      return "Tab $tabIndex ng $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Pumili ng mga oras";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Pumili ng mga minuto";
    }
    get viewLicensesButtonLabel() {
      return "TINGNAN ANG MGA LISENSYA";
    }
  };
  (generated_material_localizations.MaterialLocalizationFil.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "fil";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationFil.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationFil.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationFil);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationFil, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationFil.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationFil, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationFr = class MaterialLocalizationFr extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "À propos de $applicationName";
    }
    get alertDialogLabel() {
      return "Alerte";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Retour";
    }
    get cancelButtonLabel() {
      return "ANNULER";
    }
    get closeButtonLabel() {
      return "FERMER";
    }
    get closeButtonTooltip() {
      return "Fermer";
    }
    get collapsedIconTapHint() {
      return "Développer";
    }
    get continueButtonLabel() {
      return "CONTINUER";
    }
    get copyButtonLabel() {
      return "COPIER";
    }
    get cutButtonLabel() {
      return "COUPER";
    }
    get deleteButtonTooltip() {
      return "Supprimer";
    }
    get dialogLabel() {
      return "Boîte de dialogue";
    }
    get drawerLabel() {
      return "Menu de navigation";
    }
    get expandedIconTapHint() {
      return "Réduire";
    }
    get hideAccountsLabel() {
      return "Masquer les comptes";
    }
    get licensesPageTitle() {
      return "Licences";
    }
    get modalBarrierDismissLabel() {
      return "Ignorer";
    }
    get nextMonthTooltip() {
      return "Mois suivant";
    }
    get nextPageTooltip() {
      return "Page suivante";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Ouvrir le menu de navigation";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow – $lastRow sur $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow – $lastRow sur environ $rowCount";
    }
    get pasteButtonLabel() {
      return "COLLER";
    }
    get popupMenuLabel() {
      return "Menu contextuel";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Mois précédent";
    }
    get previousPageTooltip() {
      return "Page précédente";
    }
    get refreshIndicatorSemanticLabel() {
      return "Actualiser";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 caractère restant";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount caractères restants";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Déplacer vers le bas";
    }
    get reorderItemLeft() {
      return "Déplacer vers la gauche";
    }
    get reorderItemRight() {
      return "Déplacer vers la droite";
    }
    get reorderItemToEnd() {
      return "Déplacer vers la fin";
    }
    get reorderItemToStart() {
      return "Déplacer vers le début";
    }
    get reorderItemUp() {
      return "Déplacer vers le haut";
    }
    get rowsPerPageTitle() {
      return "Lignes par page :";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Rechercher";
    }
    get selectAllButtonLabel() {
      return "TOUT SÉLECTIONNER";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 élément sélectionné";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount éléments sélectionnés";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return "Aucun élément sélectionné";
    }
    get showAccountsLabel() {
      return "Afficher les comptes";
    }
    get showMenuTooltip() {
      return "Afficher le menu";
    }
    get signedInLabel() {
      return "Connecté";
    }
    get tabLabelRaw() {
      return "Onglet $tabIndex sur $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Sélectionner une heure";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Sélectionner des minutes";
    }
    get viewLicensesButtonLabel() {
      return "AFFICHER LES LICENCES";
    }
  };
  (generated_material_localizations.MaterialLocalizationFr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "fr";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationFr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationFr.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationFr);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationFr, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationFr.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationFr, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationFrCa = class MaterialLocalizationFrCa extends generated_material_localizations.MaterialLocalizationFr {
    get pageRowsInfoTitleRaw() {
      return "$firstRow à $lastRow sur $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow à $lastRow sur environ $rowCount";
    }
    get tabLabelRaw() {
      return "Onglet $tabIndex sur $tabCount";
    }
    get anteMeridiemAbbreviation() {
      return "am";
    }
    get postMeridiemAbbreviation() {
      return "pm";
    }
    get timePickerHourModeAnnouncement() {
      return "Sélectionnez les heures";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Sélectionnez les minutes";
    }
    get reorderItemToStart() {
      return "Déplacer au début";
    }
    get reorderItemToEnd() {
      return "Déplacer à la fin";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.frenchCanadian;
    }
  };
  (generated_material_localizations.MaterialLocalizationFrCa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "fr_CA";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationFrCa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationFrCa.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationFrCa);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationFrCa, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationGl = class MaterialLocalizationGl extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Acerca de: $applicationName";
    }
    get alertDialogLabel() {
      return "Alerta";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get backButtonTooltip() {
      return "Atrás";
    }
    get cancelButtonLabel() {
      return "CANCELAR";
    }
    get closeButtonLabel() {
      return "PECHAR";
    }
    get closeButtonTooltip() {
      return "Pechar";
    }
    get collapsedIconTapHint() {
      return "Despregar";
    }
    get continueButtonLabel() {
      return "CONTINUAR";
    }
    get copyButtonLabel() {
      return "COPIAR";
    }
    get cutButtonLabel() {
      return "CORTAR";
    }
    get deleteButtonTooltip() {
      return "Eliminar";
    }
    get dialogLabel() {
      return "Cadro de diálogo";
    }
    get drawerLabel() {
      return "Menú de navegación";
    }
    get expandedIconTapHint() {
      return "Contraer";
    }
    get hideAccountsLabel() {
      return "Ocultar contas";
    }
    get licensesPageTitle() {
      return "Licenzas";
    }
    get modalBarrierDismissLabel() {
      return "Ignorar";
    }
    get nextMonthTooltip() {
      return "Mes seguinte";
    }
    get nextPageTooltip() {
      return "Páxina seguinte";
    }
    get okButtonLabel() {
      return "Aceptar";
    }
    get openAppDrawerTooltip() {
      return "Abrir menú de navegación";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow-$lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow-$lastRow de aproximadamente $rowCount";
    }
    get pasteButtonLabel() {
      return "PEGAR";
    }
    get popupMenuLabel() {
      return "Menú emerxente";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get previousMonthTooltip() {
      return "Mes anterior";
    }
    get previousPageTooltip() {
      return "Páxina anterior";
    }
    get refreshIndicatorSemanticLabel() {
      return "Actualizar";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 carácter restante";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount caracteres restantes";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Mover cara abaixo";
    }
    get reorderItemLeft() {
      return "Mover cara á esquerda";
    }
    get reorderItemRight() {
      return "Mover cara á dereita";
    }
    get reorderItemToEnd() {
      return "Mover ao final";
    }
    get reorderItemToStart() {
      return "Mover ao inicio";
    }
    get reorderItemUp() {
      return "Mover cara arriba";
    }
    get rowsPerPageTitle() {
      return "Filas por páxina:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Buscar";
    }
    get selectAllButtonLabel() {
      return "SELECCIONAR TODO";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "Seleccionouse 1 elemento";
    }
    get selectedRowCountTitleOther() {
      return "Seleccionáronse $selectedRowCount elementos";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return "Non se seleccionaron elementos";
    }
    get showAccountsLabel() {
      return "Mostrar contas";
    }
    get showMenuTooltip() {
      return "Mostrar menú";
    }
    get signedInLabel() {
      return "Sesión iniciada";
    }
    get tabLabelRaw() {
      return "Pestana $tabIndex de $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Seleccionar horas";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Seleccionar minutos";
    }
    get viewLicensesButtonLabel() {
      return "VER LICENZAS";
    }
  };
  (generated_material_localizations.MaterialLocalizationGl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "gl";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationGl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationGl.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationGl);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationGl, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationGl.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationGl, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationGsw = class MaterialLocalizationGsw extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Über $applicationName";
    }
    get alertDialogLabel() {
      return "Benachrichtigung";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Zurück";
    }
    get cancelButtonLabel() {
      return "ABBRECHEN";
    }
    get closeButtonLabel() {
      return "SCHLIEẞEN";
    }
    get closeButtonTooltip() {
      return "Schließen";
    }
    get collapsedIconTapHint() {
      return "Maximieren";
    }
    get continueButtonLabel() {
      return "WEITER";
    }
    get copyButtonLabel() {
      return "KOPIEREN";
    }
    get cutButtonLabel() {
      return "AUSSCHNEIDEN";
    }
    get deleteButtonTooltip() {
      return "Löschen";
    }
    get dialogLabel() {
      return "Dialogfeld";
    }
    get drawerLabel() {
      return "Navigationsmenü";
    }
    get expandedIconTapHint() {
      return "Minimieren";
    }
    get hideAccountsLabel() {
      return "Konten ausblenden";
    }
    get licensesPageTitle() {
      return "Lizenzen";
    }
    get modalBarrierDismissLabel() {
      return "Schließen";
    }
    get nextMonthTooltip() {
      return "Nächster Monat";
    }
    get nextPageTooltip() {
      return "Nächste Seite";
    }
    get okButtonLabel() {
      return "Ok";
    }
    get openAppDrawerTooltip() {
      return "Navigationsmenü öffnen";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow von $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow von etwa $rowCount";
    }
    get pasteButtonLabel() {
      return "EINFÜGEN";
    }
    get popupMenuLabel() {
      return "Pop-up-Menü";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Vorheriger Monat";
    }
    get previousPageTooltip() {
      return "Vorherige Seite";
    }
    get refreshIndicatorSemanticLabel() {
      return "Aktualisieren";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "Noch 1 Zeichen";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Noch $remainingCount Zeichen";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Nach unten verschieben";
    }
    get reorderItemLeft() {
      return "Nach links verschieben";
    }
    get reorderItemRight() {
      return "Nach rechts verschieben";
    }
    get reorderItemToEnd() {
      return "An das Ende verschieben";
    }
    get reorderItemToStart() {
      return "An den Anfang verschieben";
    }
    get reorderItemUp() {
      return "Nach oben verschieben";
    }
    get rowsPerPageTitle() {
      return "Zeilen pro Seite:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Suchen";
    }
    get selectAllButtonLabel() {
      return "ALLE AUSWÄHLEN";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 Element ausgewählt";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount Elemente ausgewählt";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Konten anzeigen";
    }
    get showMenuTooltip() {
      return "Menü anzeigen";
    }
    get signedInLabel() {
      return "Angemeldet";
    }
    get tabLabelRaw() {
      return "Tab $tabIndex von $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Stunden auswählen";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Minuten auswählen";
    }
    get viewLicensesButtonLabel() {
      return "LIZENZEN ANZEIGEN";
    }
  };
  (generated_material_localizations.MaterialLocalizationGsw.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "gsw";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationGsw.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationGsw.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationGsw);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationGsw, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationGsw.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationGsw, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationGu = class MaterialLocalizationGu extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName વિશે";
    }
    get alertDialogLabel() {
      return "અલર્ટ";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "પાછળ";
    }
    get cancelButtonLabel() {
      return "રદ કરો";
    }
    get closeButtonLabel() {
      return "બંધ કરો";
    }
    get closeButtonTooltip() {
      return "બંધ કરો";
    }
    get collapsedIconTapHint() {
      return "વિસ્તૃત કરો";
    }
    get continueButtonLabel() {
      return "ચાલુ રાખો";
    }
    get copyButtonLabel() {
      return "કૉપિ કરો";
    }
    get cutButtonLabel() {
      return "કાપો";
    }
    get deleteButtonTooltip() {
      return "ડિલીટ કરો";
    }
    get dialogLabel() {
      return "સંવાદ";
    }
    get drawerLabel() {
      return "નૅવિગેશન મેનૂ";
    }
    get expandedIconTapHint() {
      return "સંકુચિત કરો";
    }
    get hideAccountsLabel() {
      return "એકાઉન્ટ છુપાવો";
    }
    get licensesPageTitle() {
      return "લાઇસન્સ";
    }
    get modalBarrierDismissLabel() {
      return "છોડી દો";
    }
    get nextMonthTooltip() {
      return "આગલો મહિનો";
    }
    get nextPageTooltip() {
      return "આગલું પેજ";
    }
    get okButtonLabel() {
      return "ઓકે";
    }
    get openAppDrawerTooltip() {
      return "નૅવિગેશન મેનૂ ખોલો";
    }
    get pageRowsInfoTitleRaw() {
      return "$rowCountમાંથી $firstRow–$lastRow";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "આશરે $rowCountમાંથી $firstRow–$lastRow";
    }
    get pasteButtonLabel() {
      return "પેસ્ટ કરો";
    }
    get popupMenuLabel() {
      return "પૉપઅપ મેનૂ";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "પાછલો મહિનો";
    }
    get previousPageTooltip() {
      return "પાછલું પેજ";
    }
    get refreshIndicatorSemanticLabel() {
      return "રિફ્રેશ કરો";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 અક્ષર બાકી";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount અક્ષર બાકી";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "નીચે ખસેડો";
    }
    get reorderItemLeft() {
      return "ડાબે ખસેડો";
    }
    get reorderItemRight() {
      return "જમણે ખસેડો";
    }
    get reorderItemToEnd() {
      return "અંતમાં ખસેડો";
    }
    get reorderItemToStart() {
      return "પ્રારંભમાં ખસેડો";
    }
    get reorderItemUp() {
      return "ઉપર ખસેડો";
    }
    get rowsPerPageTitle() {
      return "પેજ દીઠ પંક્તિઓ:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.tall;
    }
    get searchFieldLabel() {
      return "શોધો";
    }
    get selectAllButtonLabel() {
      return "બધા પસંદ કરો";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 આઇટમ પસંદ કરી";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount આઇટમ પસંદ કરી";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "એકાઉન્ટ બતાવો";
    }
    get showMenuTooltip() {
      return "મેનૂ બતાવો";
    }
    get signedInLabel() {
      return "આમાં સાઇન ઇન કર્યું છે";
    }
    get tabLabelRaw() {
      return "$tabCountમાંથી $tabIndex ટૅબ";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "કલાક પસંદ કરો";
    }
    get timePickerMinuteModeAnnouncement() {
      return "મિનિટ પસંદ કરો";
    }
    get viewLicensesButtonLabel() {
      return "લાઇસન્સ જુઓ";
    }
  };
  (generated_material_localizations.MaterialLocalizationGu.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "gu";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationGu.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationGu.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationGu);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationGu, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationGu.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationGu, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationHe = class MaterialLocalizationHe extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "מידע על $applicationName";
    }
    get alertDialogLabel() {
      return "התראה";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "הקודם";
    }
    get cancelButtonLabel() {
      return "ביטול";
    }
    get closeButtonLabel() {
      return "סגירה";
    }
    get closeButtonTooltip() {
      return "סגירה";
    }
    get collapsedIconTapHint() {
      return "הרחבה";
    }
    get continueButtonLabel() {
      return "המשך";
    }
    get copyButtonLabel() {
      return "העתקה";
    }
    get cutButtonLabel() {
      return "גזירה";
    }
    get deleteButtonTooltip() {
      return "מחיקה";
    }
    get dialogLabel() {
      return "תיבת דו-שיח";
    }
    get drawerLabel() {
      return "תפריט ניווט";
    }
    get expandedIconTapHint() {
      return "כיווץ";
    }
    get hideAccountsLabel() {
      return "הסתרת החשבונות";
    }
    get licensesPageTitle() {
      return "רישיונות";
    }
    get modalBarrierDismissLabel() {
      return "סגירה";
    }
    get nextMonthTooltip() {
      return "החודש הבא";
    }
    get nextPageTooltip() {
      return "הדף הבא";
    }
    get okButtonLabel() {
      return "אישור";
    }
    get openAppDrawerTooltip() {
      return "פתיחה של תפריט הניווט";
    }
    get pageRowsInfoTitleRaw() {
      return "$lastRow–$firstRow מתוך $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$lastRow–$firstRow מתוך כ-$rowCount";
    }
    get pasteButtonLabel() {
      return "הדבקה";
    }
    get popupMenuLabel() {
      return "תפריט קופץ";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "החודש הקודם";
    }
    get previousPageTooltip() {
      return "הדף הקודם";
    }
    get refreshIndicatorSemanticLabel() {
      return "רענון";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return "נותרו $remainingCount תווים";
    }
    get remainingTextFieldCharacterCountOne() {
      return "נותר תו אחד";
    }
    get remainingTextFieldCharacterCountOther() {
      return "נותרו $remainingCount תווים";
    }
    get remainingTextFieldCharacterCountTwo() {
      return "נותרו $remainingCount תווים";
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "העברה למטה";
    }
    get reorderItemLeft() {
      return "העברה שמאלה";
    }
    get reorderItemRight() {
      return "העברה ימינה";
    }
    get reorderItemToEnd() {
      return "העברה לסוף";
    }
    get reorderItemToStart() {
      return "העברה להתחלה";
    }
    get reorderItemUp() {
      return "העברה למעלה";
    }
    get rowsPerPageTitle() {
      return "שורות בכל דף:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "חיפוש";
    }
    get selectAllButtonLabel() {
      return "בחירת הכול";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return "$selectedRowCount פריטים נבחרו";
    }
    get selectedRowCountTitleOne() {
      return "פריט אחד נבחר";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount פריטים נבחרו";
    }
    get selectedRowCountTitleTwo() {
      return "$selectedRowCount פריטים נבחרו";
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "הצגת החשבונות";
    }
    get showMenuTooltip() {
      return "הצגת התפריט";
    }
    get signedInLabel() {
      return "מחובר";
    }
    get tabLabelRaw() {
      return "כרטיסייה $tabIndex מתוך $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "בחירת שעות";
    }
    get timePickerMinuteModeAnnouncement() {
      return "בחירת דקות";
    }
    get viewLicensesButtonLabel() {
      return "הצגת הרישיונות";
    }
  };
  (generated_material_localizations.MaterialLocalizationHe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "he";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationHe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationHe.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationHe);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationHe, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationHe.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationHe, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationHi = class MaterialLocalizationHi extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName के बारे में जानकारी";
    }
    get alertDialogLabel() {
      return "अलर्ट";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "वापस जाएं";
    }
    get cancelButtonLabel() {
      return "रद्द करें";
    }
    get closeButtonLabel() {
      return "बंद करें";
    }
    get closeButtonTooltip() {
      return "बंद करें";
    }
    get collapsedIconTapHint() {
      return "बड़ा करें";
    }
    get continueButtonLabel() {
      return "जारी रखें";
    }
    get copyButtonLabel() {
      return "कॉपी करें";
    }
    get cutButtonLabel() {
      return "कट करें";
    }
    get deleteButtonTooltip() {
      return "मिटाएं";
    }
    get dialogLabel() {
      return "संवाद";
    }
    get drawerLabel() {
      return "नेविगेशन मेन्यू";
    }
    get expandedIconTapHint() {
      return "छोटा करें";
    }
    get hideAccountsLabel() {
      return "खाते छिपाएं";
    }
    get licensesPageTitle() {
      return "लाइसेंस";
    }
    get modalBarrierDismissLabel() {
      return "खारिज करें";
    }
    get nextMonthTooltip() {
      return "अगला महीना";
    }
    get nextPageTooltip() {
      return "अगला पेज";
    }
    get okButtonLabel() {
      return "ठीक है";
    }
    get openAppDrawerTooltip() {
      return "नेविगेशन मेन्यू खोलें";
    }
    get pageRowsInfoTitleRaw() {
      return "$rowCount का $firstRow–$lastRow";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$rowCount में से करीब $firstRow–$lastRow";
    }
    get pasteButtonLabel() {
      return "चिपकाएं";
    }
    get popupMenuLabel() {
      return "पॉपअप मेन्यू";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "पिछला महीना";
    }
    get previousPageTooltip() {
      return "पिछला पेज";
    }
    get refreshIndicatorSemanticLabel() {
      return "रीफ़्रेश करें";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "एक वर्ण अाैर डाला जा सकता है";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount वर्ण अाैर डाले जा सकते हैं";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "नीचे ले जाएं";
    }
    get reorderItemLeft() {
      return "बाएं ले जाएं";
    }
    get reorderItemRight() {
      return "दाएं ले जाएं";
    }
    get reorderItemToEnd() {
      return "आखिर में ले जाएं";
    }
    get reorderItemToStart() {
      return "शुरुआत पर ले जाएं";
    }
    get reorderItemUp() {
      return "ऊपर ले जाएं";
    }
    get rowsPerPageTitle() {
      return "हर पेज में पंक्तियों की संख्या:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.dense;
    }
    get searchFieldLabel() {
      return "खोजें";
    }
    get selectAllButtonLabel() {
      return "सभी चुनें";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 चीज़ चुनी गई";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount चीज़ें चुनी गईं";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "खाते दिखाएं";
    }
    get showMenuTooltip() {
      return "मेन्यू दिखाएं";
    }
    get signedInLabel() {
      return "साइन इन किया हुआ है";
    }
    get tabLabelRaw() {
      return "$tabCount का टैब $tabIndex";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.a_space_h_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "घंटे के हिसाब से समय चुनें";
    }
    get timePickerMinuteModeAnnouncement() {
      return "मिनट के हिसाब से समय चुनें";
    }
    get viewLicensesButtonLabel() {
      return "लाइसेंस देखें";
    }
  };
  (generated_material_localizations.MaterialLocalizationHi.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "hi";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationHi.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationHi.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationHi);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationHi, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationHi.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationHi, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationHr = class MaterialLocalizationHr extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "O aplikaciji $applicationName";
    }
    get alertDialogLabel() {
      return "Upozorenje";
    }
    get anteMeridiemAbbreviation() {
      return "prijepodne";
    }
    get backButtonTooltip() {
      return "Natrag";
    }
    get cancelButtonLabel() {
      return "ODUSTANI";
    }
    get closeButtonLabel() {
      return "ZATVORI";
    }
    get closeButtonTooltip() {
      return "Zatvaranje";
    }
    get collapsedIconTapHint() {
      return "Proširi";
    }
    get continueButtonLabel() {
      return "NASTAVI";
    }
    get copyButtonLabel() {
      return "KOPIRAJ";
    }
    get cutButtonLabel() {
      return "IZREŽI";
    }
    get deleteButtonTooltip() {
      return "Brisanje";
    }
    get dialogLabel() {
      return "Dijalog";
    }
    get drawerLabel() {
      return "Navigacijski izbornik";
    }
    get expandedIconTapHint() {
      return "Sažmi";
    }
    get hideAccountsLabel() {
      return "Sakrijte račune";
    }
    get licensesPageTitle() {
      return "Licence";
    }
    get modalBarrierDismissLabel() {
      return "Odbaci";
    }
    get nextMonthTooltip() {
      return "Sljedeći mjesec";
    }
    get nextPageTooltip() {
      return "Sljedeća stranica";
    }
    get okButtonLabel() {
      return "U REDU";
    }
    get openAppDrawerTooltip() {
      return "Otvaranje izbornika za navigaciju";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow – $lastRow od $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow – $lastRow od otprilike $rowCount";
    }
    get pasteButtonLabel() {
      return "ZALIJEPI";
    }
    get popupMenuLabel() {
      return "Skočni izbornik";
    }
    get postMeridiemAbbreviation() {
      return "popodne";
    }
    get previousMonthTooltip() {
      return "Prethodni mjesec";
    }
    get previousPageTooltip() {
      return "Prethodna stranica";
    }
    get refreshIndicatorSemanticLabel() {
      return "Osvježi";
    }
    get remainingTextFieldCharacterCountFew() {
      return "Preostala su $remainingCount znaka";
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "Preostao je 1 znak";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Preostalo je $remainingCount znakova";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Pomakni prema dolje";
    }
    get reorderItemLeft() {
      return "Pomakni ulijevo";
    }
    get reorderItemRight() {
      return "Pomakni udesno";
    }
    get reorderItemToEnd() {
      return "Premjesti na kraj";
    }
    get reorderItemToStart() {
      return "Premjesti na početak";
    }
    get reorderItemUp() {
      return "Pomakni prema gore";
    }
    get rowsPerPageTitle() {
      return "Redaka po stranici:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Pretražite";
    }
    get selectAllButtonLabel() {
      return "ODABERI SVE";
    }
    get selectedRowCountTitleFew() {
      return "Odabrane su $selectedRowCount stavke";
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "Odabrana je jedna stavka";
    }
    get selectedRowCountTitleOther() {
      return "Odabrano je $selectedRowCount stavki";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Prikažite račune";
    }
    get showMenuTooltip() {
      return "Prikaz izbornika";
    }
    get signedInLabel() {
      return "Prijavljeni korisnik";
    }
    get tabLabelRaw() {
      return "Kartica $tabIndex od $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Odaberite sate";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Odaberite minute";
    }
    get viewLicensesButtonLabel() {
      return "PRIKAŽI LICENCE";
    }
  };
  (generated_material_localizations.MaterialLocalizationHr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "hr";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationHr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationHr.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationHr);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationHr, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationHr.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationHr, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationHu = class MaterialLocalizationHu extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "A(z) $applicationName névjegye";
    }
    get alertDialogLabel() {
      return "Értesítés";
    }
    get anteMeridiemAbbreviation() {
      return "de.";
    }
    get backButtonTooltip() {
      return "Vissza";
    }
    get cancelButtonLabel() {
      return "MÉGSE";
    }
    get closeButtonLabel() {
      return "BEZÁRÁS";
    }
    get closeButtonTooltip() {
      return "Bezárás";
    }
    get collapsedIconTapHint() {
      return "Kibontás";
    }
    get continueButtonLabel() {
      return "TOVÁBB";
    }
    get copyButtonLabel() {
      return "MÁSOLÁS";
    }
    get cutButtonLabel() {
      return "KIVÁGÁS";
    }
    get deleteButtonTooltip() {
      return "Törlés";
    }
    get dialogLabel() {
      return "Párbeszédablak";
    }
    get drawerLabel() {
      return "Navigációs menü";
    }
    get expandedIconTapHint() {
      return "Összecsukás";
    }
    get hideAccountsLabel() {
      return "Fiókok elrejtése";
    }
    get licensesPageTitle() {
      return "Licencek";
    }
    get modalBarrierDismissLabel() {
      return "Elvetés";
    }
    get nextMonthTooltip() {
      return "Következő hónap";
    }
    get nextPageTooltip() {
      return "Következő oldal";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Navigációs menü megnyitása";
    }
    get pageRowsInfoTitleRaw() {
      return "$rowCount/$firstRow–$lastRow.";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "Körülbelül $rowCount/$firstRow–$lastRow.";
    }
    get pasteButtonLabel() {
      return "BEILLESZTÉS";
    }
    get popupMenuLabel() {
      return "Előugró menü";
    }
    get postMeridiemAbbreviation() {
      return "du.";
    }
    get previousMonthTooltip() {
      return "Előző hónap";
    }
    get previousPageTooltip() {
      return "Előző oldal";
    }
    get refreshIndicatorSemanticLabel() {
      return "Frissítés";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 karakter maradt";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount karakter maradt";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Áthelyezés lefelé";
    }
    get reorderItemLeft() {
      return "Áthelyezés balra";
    }
    get reorderItemRight() {
      return "Áthelyezés jobbra";
    }
    get reorderItemToEnd() {
      return "Áthelyezés a végére";
    }
    get reorderItemToStart() {
      return "Áthelyezés az elejére";
    }
    get reorderItemUp() {
      return "Áthelyezés felfelé";
    }
    get rowsPerPageTitle() {
      return "Oldalankénti sorszám:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Keresés";
    }
    get selectAllButtonLabel() {
      return "AZ ÖSSZES KIJELÖLÉSE";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 elem kiválasztva";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount elem kiválasztva";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Fiókok megjelenítése";
    }
    get showMenuTooltip() {
      return "Menü megjelenítése";
    }
    get signedInLabel() {
      return "Bejelentkezve";
    }
    get tabLabelRaw() {
      return "$tabCount/$tabIndex. lap";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Óra kiválasztása";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Perc kiválasztása";
    }
    get viewLicensesButtonLabel() {
      return "LICENCEK MEGTEKINTÉSE";
    }
  };
  (generated_material_localizations.MaterialLocalizationHu.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "hu";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationHu.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationHu.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationHu);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationHu, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationHu.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationHu, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationHy = class MaterialLocalizationHy extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName հավելվածի մասին";
    }
    get alertDialogLabel() {
      return "Ծանուցում";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Հետ";
    }
    get cancelButtonLabel() {
      return "ՉԵՂԱՐԿԵԼ";
    }
    get closeButtonLabel() {
      return "ՓԱԿԵԼ";
    }
    get closeButtonTooltip() {
      return "Փակել";
    }
    get collapsedIconTapHint() {
      return "Ծավալել";
    }
    get continueButtonLabel() {
      return "ՇԱՐՈՒՆԱԿԵԼ";
    }
    get copyButtonLabel() {
      return "ՊԱՏՃԵՆԵԼ";
    }
    get cutButtonLabel() {
      return "ԿՏՐԵԼ";
    }
    get deleteButtonTooltip() {
      return "Ջնջել";
    }
    get dialogLabel() {
      return "Երկխոսության պատուհան";
    }
    get drawerLabel() {
      return "Նավարկման ընտրացանկ";
    }
    get expandedIconTapHint() {
      return "Ծալել";
    }
    get hideAccountsLabel() {
      return "Թաքցնել հաշիվները";
    }
    get licensesPageTitle() {
      return "Արտոնագրեր";
    }
    get modalBarrierDismissLabel() {
      return "Փակել";
    }
    get nextMonthTooltip() {
      return "Հաջորդ ամիս";
    }
    get nextPageTooltip() {
      return "Հաջորդ էջ";
    }
    get okButtonLabel() {
      return "Եղավ";
    }
    get openAppDrawerTooltip() {
      return "Բացել նավարկման ընտրացանկը";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow $rowCount-ից";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow մոտավորապես $rowCount-ից";
    }
    get pasteButtonLabel() {
      return "ՏԵՂԱԴՐԵԼ";
    }
    get popupMenuLabel() {
      return "Ելնող ընտրացանկ";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Նախորդ ամիս";
    }
    get previousPageTooltip() {
      return "Նախորդ էջ";
    }
    get refreshIndicatorSemanticLabel() {
      return "Թարմացնել";
    }
    get remainingTextFieldCharacterCountFew() {
      return "Մնաց $remainingCount նիշ";
    }
    get remainingTextFieldCharacterCountMany() {
      return "Մնաց $remainingCount նիշ";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Մնացել է 1 նիշ";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Մնացել է $remainingCount նիշ";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "Նիշի հնարավորություն չկա";
    }
    get reorderItemDown() {
      return "Տեղափոխել ներքև";
    }
    get reorderItemLeft() {
      return "Տեղափոխել ձախ";
    }
    get reorderItemRight() {
      return "Տեղափոխել աջ";
    }
    get reorderItemToEnd() {
      return "Տեղափոխել վերջ";
    }
    get reorderItemToStart() {
      return "Տեղափոխել սկիզբ";
    }
    get reorderItemUp() {
      return "Տեղափոխել վերև";
    }
    get rowsPerPageTitle() {
      return "Մեկ էջի տողերը՝";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Որոնել";
    }
    get selectAllButtonLabel() {
      return "ՆՇԵԼ ԲՈԼՈՐԸ";
    }
    get selectedRowCountTitleFew() {
      return "Ընտրված է $selectedRowCount օբյեկտ";
    }
    get selectedRowCountTitleMany() {
      return "Ընտրված է $selectedRowCount օբյեկտ";
    }
    get selectedRowCountTitleOne() {
      return "Ընտրվել է 1 տարր";
    }
    get selectedRowCountTitleOther() {
      return "Ընտրվել է $selectedRowCount տարր";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return "Տողերը ընտրված չեն";
    }
    get showAccountsLabel() {
      return "Ցույց տալ հաշիվները";
    }
    get showMenuTooltip() {
      return "Ցույց տալ ընտրացանկը";
    }
    get signedInLabel() {
      return "Դուք մուտք եք գործել";
    }
    get tabLabelRaw() {
      return "Ներդիր $tabIndex՝ $tabCount-ից";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Ընտրեք ժամը";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Ընտրեք րոպեները";
    }
    get viewLicensesButtonLabel() {
      return "ԴԻՏԵԼ ԱՐՏՈՆԱԳՐԵՐԸ";
    }
  };
  (generated_material_localizations.MaterialLocalizationHy.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "hy";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationHy.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationHy.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationHy);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationHy, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationHy.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationHy, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationId = class MaterialLocalizationId extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Tentang $applicationName";
    }
    get alertDialogLabel() {
      return "Notifikasi";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Kembali";
    }
    get cancelButtonLabel() {
      return "BATAL";
    }
    get closeButtonLabel() {
      return "TUTUP";
    }
    get closeButtonTooltip() {
      return "Tutup";
    }
    get collapsedIconTapHint() {
      return "Luaskan";
    }
    get continueButtonLabel() {
      return "LANJUTKAN";
    }
    get copyButtonLabel() {
      return "SALIN";
    }
    get cutButtonLabel() {
      return "POTONG";
    }
    get deleteButtonTooltip() {
      return "Hapus";
    }
    get dialogLabel() {
      return "Dialog";
    }
    get drawerLabel() {
      return "Menu navigasi";
    }
    get expandedIconTapHint() {
      return "Ciutkan";
    }
    get hideAccountsLabel() {
      return "Sembunyikan akun";
    }
    get licensesPageTitle() {
      return "Lisensi";
    }
    get modalBarrierDismissLabel() {
      return "Tutup";
    }
    get nextMonthTooltip() {
      return "Bulan berikutnya";
    }
    get nextPageTooltip() {
      return "Halaman berikutnya";
    }
    get okButtonLabel() {
      return "OKE";
    }
    get openAppDrawerTooltip() {
      return "Buka menu navigasi";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow dari $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow dari kira-kira $rowCount";
    }
    get pasteButtonLabel() {
      return "TEMPEL";
    }
    get popupMenuLabel() {
      return "Menu pop-up";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Bulan sebelumnya";
    }
    get previousPageTooltip() {
      return "Halaman sebelumnya";
    }
    get refreshIndicatorSemanticLabel() {
      return "Memuat ulang";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "Sisa 1 karakter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Sisa $remainingCount karakter";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Turunkan";
    }
    get reorderItemLeft() {
      return "Pindahkan ke kiri";
    }
    get reorderItemRight() {
      return "Pindahkan ke kanan";
    }
    get reorderItemToEnd() {
      return "Pindahkan ke akhir";
    }
    get reorderItemToStart() {
      return "Pindahkan ke awal";
    }
    get reorderItemUp() {
      return "Naikkan";
    }
    get rowsPerPageTitle() {
      return "Baris per halaman:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Telusuri";
    }
    get selectAllButtonLabel() {
      return "PILIH SEMUA";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 item dipilih";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount item dipilih";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Tampilkan akun";
    }
    get showMenuTooltip() {
      return "Tampilkan menu";
    }
    get signedInLabel() {
      return "Telah login";
    }
    get tabLabelRaw() {
      return "Tab $tabIndex dari $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Pilih jam";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Pilih menit";
    }
    get viewLicensesButtonLabel() {
      return "LIHAT LISENSI";
    }
  };
  (generated_material_localizations.MaterialLocalizationId.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "id";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationId.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationId.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationId);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationId, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationId.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationId, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationIs = class MaterialLocalizationIs extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Um $applicationName";
    }
    get alertDialogLabel() {
      return "Tilkynning";
    }
    get anteMeridiemAbbreviation() {
      return "f.h.";
    }
    get backButtonTooltip() {
      return "Til baka";
    }
    get cancelButtonLabel() {
      return "HÆTTA";
    }
    get closeButtonLabel() {
      return "LOKA";
    }
    get closeButtonTooltip() {
      return "Loka";
    }
    get collapsedIconTapHint() {
      return "Stækka";
    }
    get continueButtonLabel() {
      return "HALDA ÁFRAM";
    }
    get copyButtonLabel() {
      return "AFRITA";
    }
    get cutButtonLabel() {
      return "KLIPPA";
    }
    get deleteButtonTooltip() {
      return "Eyða";
    }
    get dialogLabel() {
      return "Gluggi";
    }
    get drawerLabel() {
      return "Yfirlitsvalmynd";
    }
    get expandedIconTapHint() {
      return "Draga saman";
    }
    get hideAccountsLabel() {
      return "Fela reikninga";
    }
    get licensesPageTitle() {
      return "Leyfi";
    }
    get modalBarrierDismissLabel() {
      return "Hunsa";
    }
    get nextMonthTooltip() {
      return "Næsti mánuður";
    }
    get nextPageTooltip() {
      return "Næsta síða";
    }
    get okButtonLabel() {
      return "Í lagi";
    }
    get openAppDrawerTooltip() {
      return "Opna yfirlitsvalmynd";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow – $lastRow af $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow – $lastRow af um það bil $rowCount";
    }
    get pasteButtonLabel() {
      return "LÍMA";
    }
    get popupMenuLabel() {
      return "Sprettivalmynd";
    }
    get postMeridiemAbbreviation() {
      return "e.h.";
    }
    get previousMonthTooltip() {
      return "Fyrri mánuður";
    }
    get previousPageTooltip() {
      return "Fyrri síða";
    }
    get refreshIndicatorSemanticLabel() {
      return "Endurnýja";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 stafur eftir";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount stafir eftir";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "Færa niður";
    }
    get reorderItemLeft() {
      return "Færa til vinstri";
    }
    get reorderItemRight() {
      return "Færa til hægri";
    }
    get reorderItemToEnd() {
      return "Færa aftast";
    }
    get reorderItemToStart() {
      return "Færa fremst";
    }
    get reorderItemUp() {
      return "Færa upp";
    }
    get rowsPerPageTitle() {
      return "Línur á síðu:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Leit";
    }
    get selectAllButtonLabel() {
      return "VELJA ALLT";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 atriði valið";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount atriði valin";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Sýna reikninga";
    }
    get showMenuTooltip() {
      return "Sýna valmynd";
    }
    get signedInLabel() {
      return "Innskráð(ur)";
    }
    get tabLabelRaw() {
      return "Flipi $tabIndex af $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Velja klukkustundir";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Velja mínútur";
    }
    get viewLicensesButtonLabel() {
      return "SKOÐA LEYFI";
    }
  };
  (generated_material_localizations.MaterialLocalizationIs.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "is";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationIs.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationIs.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationIs);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationIs, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationIs.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationIs, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationIt = class MaterialLocalizationIt extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Informazioni su $applicationName";
    }
    get alertDialogLabel() {
      return "Avviso";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Indietro";
    }
    get cancelButtonLabel() {
      return "ANNULLA";
    }
    get closeButtonLabel() {
      return "CHIUDI";
    }
    get closeButtonTooltip() {
      return "Chiudi";
    }
    get collapsedIconTapHint() {
      return "Espandi";
    }
    get continueButtonLabel() {
      return "CONTINUA";
    }
    get copyButtonLabel() {
      return "COPIA";
    }
    get cutButtonLabel() {
      return "TAGLIA";
    }
    get deleteButtonTooltip() {
      return "Elimina";
    }
    get dialogLabel() {
      return "Finestra di dialogo";
    }
    get drawerLabel() {
      return "Menu di navigazione";
    }
    get expandedIconTapHint() {
      return "Comprimi";
    }
    get hideAccountsLabel() {
      return "Nascondi account";
    }
    get licensesPageTitle() {
      return "Licenze";
    }
    get modalBarrierDismissLabel() {
      return "Ignora";
    }
    get nextMonthTooltip() {
      return "Mese successivo";
    }
    get nextPageTooltip() {
      return "Pagina successiva";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Apri il menu di navigazione";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow-$lastRow di $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow-$lastRow di circa $rowCount";
    }
    get pasteButtonLabel() {
      return "INCOLLA";
    }
    get popupMenuLabel() {
      return "Menu popup";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Mese precedente";
    }
    get previousPageTooltip() {
      return "Pagina precedente";
    }
    get refreshIndicatorSemanticLabel() {
      return "Aggiorna";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 carattere rimanente";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount caratteri rimanenti";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Sposta giù";
    }
    get reorderItemLeft() {
      return "Sposta a sinistra";
    }
    get reorderItemRight() {
      return "Sposta a destra";
    }
    get reorderItemToEnd() {
      return "Sposta alla fine";
    }
    get reorderItemToStart() {
      return "Sposta all" + "'" + "inizio";
    }
    get reorderItemUp() {
      return "Sposta su";
    }
    get rowsPerPageTitle() {
      return "Righe per pagina:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Cerca";
    }
    get selectAllButtonLabel() {
      return "SELEZIONA TUTTO";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 elemento selezionato";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount elementi selezionati";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Mostra account";
    }
    get showMenuTooltip() {
      return "Mostra il menu";
    }
    get signedInLabel() {
      return "Connesso";
    }
    get tabLabelRaw() {
      return "Scheda $tabIndex di $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Seleziona le ore";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Seleziona i minuti";
    }
    get viewLicensesButtonLabel() {
      return "VISUALIZZA LICENZE";
    }
  };
  (generated_material_localizations.MaterialLocalizationIt.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "it";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationIt.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationIt.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationIt);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationIt, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationIt.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationIt, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationJa = class MaterialLocalizationJa extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName について";
    }
    get alertDialogLabel() {
      return "通知";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "戻る";
    }
    get cancelButtonLabel() {
      return "キャンセル";
    }
    get closeButtonLabel() {
      return "閉じる";
    }
    get closeButtonTooltip() {
      return "閉じる";
    }
    get collapsedIconTapHint() {
      return "展開";
    }
    get continueButtonLabel() {
      return "続行";
    }
    get copyButtonLabel() {
      return "コピー";
    }
    get cutButtonLabel() {
      return "切り取り";
    }
    get deleteButtonTooltip() {
      return "削除";
    }
    get dialogLabel() {
      return "ダイアログ";
    }
    get drawerLabel() {
      return "ナビゲーション メニュー";
    }
    get expandedIconTapHint() {
      return "折りたたむ";
    }
    get hideAccountsLabel() {
      return "アカウントを非表示";
    }
    get licensesPageTitle() {
      return "ライセンス";
    }
    get modalBarrierDismissLabel() {
      return "閉じる";
    }
    get nextMonthTooltip() {
      return "来月";
    }
    get nextPageTooltip() {
      return "次のページ";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "ナビゲーション メニューを開く";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow - $lastRow 行（合計 $rowCount 行）";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow – $lastRow 行（合計約 $rowCount 行）";
    }
    get pasteButtonLabel() {
      return "貼り付け";
    }
    get popupMenuLabel() {
      return "ポップアップ メニュー";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "前月";
    }
    get previousPageTooltip() {
      return "前のページ";
    }
    get refreshIndicatorSemanticLabel() {
      return "更新";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "残り 1 文字（半角相当）";
    }
    get remainingTextFieldCharacterCountOther() {
      return "残り $remainingCount 文字（半角相当）";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "下に移動";
    }
    get reorderItemLeft() {
      return "左に移動";
    }
    get reorderItemRight() {
      return "右に移動";
    }
    get reorderItemToEnd() {
      return "最後に移動";
    }
    get reorderItemToStart() {
      return "先頭に移動";
    }
    get reorderItemUp() {
      return "上に移動";
    }
    get rowsPerPageTitle() {
      return "ページあたりの行数:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.dense;
    }
    get searchFieldLabel() {
      return "検索";
    }
    get selectAllButtonLabel() {
      return "すべて選択";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 件のアイテムを選択中";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount 件のアイテムを選択中";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "アカウントを表示";
    }
    get showMenuTooltip() {
      return "メニューを表示";
    }
    get signedInLabel() {
      return "ログイン中";
    }
    get tabLabelRaw() {
      return "タブ: $tabIndex/$tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "時間を選択";
    }
    get timePickerMinuteModeAnnouncement() {
      return "分を選択";
    }
    get viewLicensesButtonLabel() {
      return "ライセンスを表示";
    }
  };
  (generated_material_localizations.MaterialLocalizationJa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ja";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationJa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationJa.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationJa);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationJa, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationJa.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationJa, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationKa = class MaterialLocalizationKa extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName-ის შესახებ";
    }
    get alertDialogLabel() {
      return "გაფრთხილება";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "უკან";
    }
    get cancelButtonLabel() {
      return "გაუქმება";
    }
    get closeButtonLabel() {
      return "დახურვა";
    }
    get closeButtonTooltip() {
      return "დახურვა";
    }
    get collapsedIconTapHint() {
      return "გაშლა";
    }
    get continueButtonLabel() {
      return "გაგრძელება";
    }
    get copyButtonLabel() {
      return "კოპირება";
    }
    get cutButtonLabel() {
      return "ამოჭრა";
    }
    get deleteButtonTooltip() {
      return "წაშლა";
    }
    get dialogLabel() {
      return "დიალოგი";
    }
    get drawerLabel() {
      return "ნავიგაციის მენიუ";
    }
    get expandedIconTapHint() {
      return "ჩაკეცვა";
    }
    get hideAccountsLabel() {
      return "ანგარიშების დამალვა";
    }
    get licensesPageTitle() {
      return "ლიცენზიები";
    }
    get modalBarrierDismissLabel() {
      return "დახურვა";
    }
    get nextMonthTooltip() {
      return "შემდეგი თვე";
    }
    get nextPageTooltip() {
      return "შემდეგი გვერდი";
    }
    get okButtonLabel() {
      return "კარგი";
    }
    get openAppDrawerTooltip() {
      return "სანავიგაციო მენიუს გახსნა";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow-$lastRow / $rowCount-დან";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow-$lastRow / დაახლოებით $rowCount-დან";
    }
    get pasteButtonLabel() {
      return "ჩასმა";
    }
    get popupMenuLabel() {
      return "ამომხტარი მენიუ";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "წინა თვე";
    }
    get previousPageTooltip() {
      return "წინა გვერდი";
    }
    get refreshIndicatorSemanticLabel() {
      return "განახლება";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "დარჩა 1 სიმბოლო";
    }
    get remainingTextFieldCharacterCountOther() {
      return "დარჩა $remainingCount სიმბოლო";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "ქვემოთ გადატანა";
    }
    get reorderItemLeft() {
      return "მარცხნივ გადატანა";
    }
    get reorderItemRight() {
      return "მარჯვნივ გადატანა";
    }
    get reorderItemToEnd() {
      return "ბოლოში გადატანა";
    }
    get reorderItemToStart() {
      return "დასაწყისში გადატანა";
    }
    get reorderItemUp() {
      return "ზემოთ გადატანა";
    }
    get rowsPerPageTitle() {
      return "მწკრივი გვერდზე:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "ძიება";
    }
    get selectAllButtonLabel() {
      return "ყველას არჩევა";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "არჩეულია 1 ერთეული";
    }
    get selectedRowCountTitleOther() {
      return "არჩეულია $selectedRowCount ერთეული";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "ანგარიშების ჩვენება";
    }
    get showMenuTooltip() {
      return "მენიუს ჩვენება";
    }
    get signedInLabel() {
      return "შესული";
    }
    get tabLabelRaw() {
      return "ჩანართი $tabIndex / $tabCount-დან";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "აირჩიეთ საათები";
    }
    get timePickerMinuteModeAnnouncement() {
      return "აირჩიეთ წუთები";
    }
    get viewLicensesButtonLabel() {
      return "ლიცენზიების ნახვა";
    }
  };
  (generated_material_localizations.MaterialLocalizationKa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ka";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationKa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationKa.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationKa);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationKa, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationKa.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationKa, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationKk = class MaterialLocalizationKk extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName туралы";
    }
    get alertDialogLabel() {
      return "Дабыл";
    }
    get anteMeridiemAbbreviation() {
      return "түстен кейін";
    }
    get backButtonTooltip() {
      return "Артқа";
    }
    get cancelButtonLabel() {
      return "БАС ТАРТУ";
    }
    get closeButtonLabel() {
      return "ЖАБУ";
    }
    get closeButtonTooltip() {
      return "Жабу";
    }
    get collapsedIconTapHint() {
      return "Жаю";
    }
    get continueButtonLabel() {
      return "ЖАЛҒАСТЫРУ";
    }
    get copyButtonLabel() {
      return "КӨШІРУ";
    }
    get cutButtonLabel() {
      return "ҚИЮ";
    }
    get deleteButtonTooltip() {
      return "Жою";
    }
    get dialogLabel() {
      return "Диалогтық терезе";
    }
    get drawerLabel() {
      return "Навигация мәзірі";
    }
    get expandedIconTapHint() {
      return "Жию";
    }
    get hideAccountsLabel() {
      return "Есептік жазбаларды жасыру";
    }
    get licensesPageTitle() {
      return "Лицензиялар";
    }
    get modalBarrierDismissLabel() {
      return "Жабу";
    }
    get nextMonthTooltip() {
      return "Келесі ай";
    }
    get nextPageTooltip() {
      return "Келесі бет";
    }
    get okButtonLabel() {
      return "Иә";
    }
    get openAppDrawerTooltip() {
      return "Навигация мәзірін ашу";
    }
    get pageRowsInfoTitleRaw() {
      return "$rowCount ішінен $firstRow–$lastRow";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "Шамамен $rowCount ішінен $firstRow–$lastRow";
    }
    get pasteButtonLabel() {
      return "ҚОЮ";
    }
    get popupMenuLabel() {
      return "Қалқымалы терезе мәзірі";
    }
    get postMeridiemAbbreviation() {
      return "түстен кейін";
    }
    get previousMonthTooltip() {
      return "Өткен ай";
    }
    get previousPageTooltip() {
      return "Алдыңғы бет";
    }
    get refreshIndicatorSemanticLabel() {
      return "Жаңарту";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 таңба қалды.";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount таңба қалды.";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "Таңбалар қалмады";
    }
    get reorderItemDown() {
      return "Төменге жылжыту";
    }
    get reorderItemLeft() {
      return "Солға жылжыту";
    }
    get reorderItemRight() {
      return "Оңға жылжыту";
    }
    get reorderItemToEnd() {
      return "Соңына өту";
    }
    get reorderItemToStart() {
      return "Басына өту";
    }
    get reorderItemUp() {
      return "Жоғарыға жылжыту";
    }
    get rowsPerPageTitle() {
      return "Әр беттегі жолдар саны:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Іздеу";
    }
    get selectAllButtonLabel() {
      return "БАРЛЫҒЫН ТАҢДАУ";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 элемент таңдалды.";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount элемент таңдалды.";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return "Тармақ таңдалмаған";
    }
    get showAccountsLabel() {
      return "Есептік жазбаларды көрсету";
    }
    get showMenuTooltip() {
      return "Мәзірді көрсету";
    }
    get signedInLabel() {
      return "Есептік жазбаға кірген";
    }
    get tabLabelRaw() {
      return "$tabCount/$tabIndex қойынды";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Сағаттарды таңдаңыз";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Минуттарды таңдаңыз";
    }
    get viewLicensesButtonLabel() {
      return "ЛИЦЕНЗИЯЛАРДЫ КӨРУ";
    }
  };
  (generated_material_localizations.MaterialLocalizationKk.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "kk";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationKk.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationKk.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationKk);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationKk, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationKk.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationKk, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationKm = class MaterialLocalizationKm extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "អំពី $applicationName";
    }
    get alertDialogLabel() {
      return "ជូនដំណឹង";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "ថយក្រោយ";
    }
    get cancelButtonLabel() {
      return "បោះបង់";
    }
    get closeButtonLabel() {
      return "បិទ";
    }
    get closeButtonTooltip() {
      return "បិទ";
    }
    get collapsedIconTapHint() {
      return "ពង្រីក";
    }
    get continueButtonLabel() {
      return "បន្ត";
    }
    get copyButtonLabel() {
      return "ចម្លង";
    }
    get cutButtonLabel() {
      return "កាត់";
    }
    get deleteButtonTooltip() {
      return "លុប";
    }
    get dialogLabel() {
      return "ប្រអប់";
    }
    get drawerLabel() {
      return "ម៉ឺនុយរុករក";
    }
    get expandedIconTapHint() {
      return "បង្រួម";
    }
    get hideAccountsLabel() {
      return "លាក់គណនី";
    }
    get licensesPageTitle() {
      return "អាជ្ញាបណ្ណ";
    }
    get modalBarrierDismissLabel() {
      return "ច្រាន​ចោល";
    }
    get nextMonthTooltip() {
      return "ខែ​​ក្រោយ";
    }
    get nextPageTooltip() {
      return "ទំព័របន្ទាប់";
    }
    get okButtonLabel() {
      return "យល់ព្រម";
    }
    get openAppDrawerTooltip() {
      return "បើក​ម៉ឺនុយរុករក";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow ក្នុង​ចំណោម​ $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow ក្នុង​ចំណោម​ប្រហែល $rowCount";
    }
    get pasteButtonLabel() {
      return "ដាក់​ចូល";
    }
    get popupMenuLabel() {
      return "​ម៉ឺនុយ​លោត​ឡើង";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "ខែមុន";
    }
    get previousPageTooltip() {
      return "ទំព័រមុន";
    }
    get refreshIndicatorSemanticLabel() {
      return "ផ្ទុកឡើងវិញ";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "នៅសល់​ 1 តួ​ទៀត";
    }
    get remainingTextFieldCharacterCountOther() {
      return "នៅសល់ $remainingCount តួ​ទៀត";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "ផ្លាស់ទី​ចុះ​ក្រោម";
    }
    get reorderItemLeft() {
      return "ផ្លាស់ទី​ទៅ​ឆ្វេង";
    }
    get reorderItemRight() {
      return "ផ្លាស់ទីទៅ​ស្តាំ";
    }
    get reorderItemToEnd() {
      return "ផ្លាស់ទីទៅ​ចំណុចបញ្ចប់";
    }
    get reorderItemToStart() {
      return "ផ្លាស់ទីទៅ​ចំណុច​ចាប់ផ្ដើម";
    }
    get reorderItemUp() {
      return "ផ្លាស់ទី​ឡើង​លើ";
    }
    get rowsPerPageTitle() {
      return "ជួរ​ដេក​ក្នុង​មួយ​ទំព័រ៖";
    }
    get scriptCategory() {
      return typography.ScriptCategory.dense;
    }
    get searchFieldLabel() {
      return "ស្វែងរក";
    }
    get selectAllButtonLabel() {
      return "ជ្រើសរើស​ទាំង​អស់";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "បាន​ជ្រើស​រើស​ធាតុ 1";
    }
    get selectedRowCountTitleOther() {
      return "បាន​ជ្រើស​រើស​ធាតុ $selectedRowCount";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "បង្ហាញគណនី";
    }
    get showMenuTooltip() {
      return "បង្ហាញ​ម៉ឺនុយ";
    }
    get signedInLabel() {
      return "បានចូល​គណនី";
    }
    get tabLabelRaw() {
      return "ផ្ទាំង $tabIndex ក្នុង​ចំណោម​ $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.h_colon_mm_space_a;
    }
    get timePickerHourModeAnnouncement() {
      return "ជ្រើសរើស​ម៉ោង";
    }
    get timePickerMinuteModeAnnouncement() {
      return "ជ្រើសរើស​នាទី";
    }
    get viewLicensesButtonLabel() {
      return "មើលអាជ្ញាបណ្ណ";
    }
  };
  (generated_material_localizations.MaterialLocalizationKm.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "km";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationKm.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationKm.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationKm);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationKm, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationKm.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationKm, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationKn = class MaterialLocalizationKn extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName ಬಗ್ಗೆ";
    }
    get alertDialogLabel() {
      return "ಎಚ್ಚರಿಕೆ";
    }
    get anteMeridiemAbbreviation() {
      return "ಬೆಳಿಗ್ಗೆ";
    }
    get backButtonTooltip() {
      return "ಹಿಂತಿರುಗಿ";
    }
    get cancelButtonLabel() {
      return "ರದ್ದುಮಾಡಿ";
    }
    get closeButtonLabel() {
      return "ಮುಚ್ಚಿರಿ";
    }
    get closeButtonTooltip() {
      return "ಮುಚ್ಚಿರಿ";
    }
    get collapsedIconTapHint() {
      return "ವಿಸ್ತರಿಸಿ";
    }
    get continueButtonLabel() {
      return "ಮುಂದುವರಿಸಿ";
    }
    get copyButtonLabel() {
      return "ನಕಲಿಸಿ";
    }
    get cutButtonLabel() {
      return "ಕತ್ತರಿಸಿ";
    }
    get deleteButtonTooltip() {
      return "ಅಳಿಸಿ";
    }
    get dialogLabel() {
      return "ಡೈಲಾಗ್";
    }
    get drawerLabel() {
      return "ನ್ಯಾವಿಗೇಶನ್‌ ಮೆನು";
    }
    get expandedIconTapHint() {
      return "ಕುಗ್ಗಿಸಿ";
    }
    get hideAccountsLabel() {
      return "ಖಾತೆಗಳನ್ನು ಮರೆಮಾಡಿ";
    }
    get licensesPageTitle() {
      return "ಪರವಾನಗಿಗಳು";
    }
    get modalBarrierDismissLabel() {
      return "ವಜಾಗೊಳಿಸಿ";
    }
    get nextMonthTooltip() {
      return "ಮುಂದಿನ ತಿಂಗಳು";
    }
    get nextPageTooltip() {
      return "ಮುಂದಿನ ಪುಟ";
    }
    get okButtonLabel() {
      return "ಸರಿ";
    }
    get openAppDrawerTooltip() {
      return "ನ್ಯಾವಿಗೇಶನ್‌ ಮೆನು ತೆರೆಯಿರಿ";
    }
    get pageRowsInfoTitleRaw() {
      return "$rowCount ರಲ್ಲಿ $firstRow–$lastRow";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$rowCount ರಲ್ಲಿ $firstRow–$lastRow";
    }
    get pasteButtonLabel() {
      return "ಅಂಟಿಸಿ";
    }
    get popupMenuLabel() {
      return "ಪಾಪ್ಅಪ್ ಮೆನು";
    }
    get postMeridiemAbbreviation() {
      return "ಸಂಜೆ";
    }
    get previousMonthTooltip() {
      return "ಹಿಂದಿನ ತಿಂಗಳು";
    }
    get previousPageTooltip() {
      return "ಹಿಂದಿನ ಪುಟ";
    }
    get refreshIndicatorSemanticLabel() {
      return "ರಿಫ್ರೆಶ್ ಮಾಡಿ";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 ಅಕ್ಷರ ಉಳಿದಿದೆ";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount ಅಕ್ಷರಗಳು ಉಳಿದಿವೆ";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "ಕೆಳಗೆ ಸರಿಸಿ";
    }
    get reorderItemLeft() {
      return "ಎಡಕ್ಕೆ ಸರಿಸಿ";
    }
    get reorderItemRight() {
      return "ಬಲಕ್ಕೆ ಸರಿಸಿ";
    }
    get reorderItemToEnd() {
      return "ಕೊನೆಗೆ ಸರಿಸಿ";
    }
    get reorderItemToStart() {
      return "ಪ್ರಾರಂಭಕ್ಕೆ ಸರಿಸಿ";
    }
    get reorderItemUp() {
      return "ಮೇಲೆ ಸರಿಸಿ";
    }
    get rowsPerPageTitle() {
      return "ಪ್ರತಿ ಪುಟಕ್ಕೆ ಸಾಲುಗಳು:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.tall;
    }
    get searchFieldLabel() {
      return "ಹುಡುಕಿ";
    }
    get selectAllButtonLabel() {
      return "ಎಲ್ಲವನ್ನೂ ಆಯ್ಕೆಮಾಡಿ";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 ಐಟಂ ಆಯ್ಕೆ ಮಾಡಲಾಗಿದೆ";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount ಐಟಂಗಳನ್ನು ಆಯ್ಕೆ ಮಾಡಲಾಗಿದೆ";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "ಖಾತೆಗಳನ್ನು ತೋರಿಸಿ";
    }
    get showMenuTooltip() {
      return "ಮೆನು ತೋರಿಸಿ";
    }
    get signedInLabel() {
      return "ಸೈನ್ ಇನ್ ಮಾಡಲಾಗಿದೆ";
    }
    get tabLabelRaw() {
      return "$tabCount ರಲ್ಲಿನ $tabIndex ಟ್ಯಾಬ್";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "ಗಂಟೆಗಳನ್ನು ಆಯ್ಕೆಮಾಡಿ";
    }
    get timePickerMinuteModeAnnouncement() {
      return "ನಿಮಿಷಗಳನ್ನು ಆಯ್ಕೆಮಾಡಿ";
    }
    get viewLicensesButtonLabel() {
      return "ಪರವಾನಗಿಗಳನ್ನು ವೀಕ್ಷಿಸಿ";
    }
  };
  (generated_material_localizations.MaterialLocalizationKn.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "kn";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationKn.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationKn.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationKn);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationKn, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationKn.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationKn, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationKo = class MaterialLocalizationKo extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName 정보";
    }
    get alertDialogLabel() {
      return "알림";
    }
    get anteMeridiemAbbreviation() {
      return "오전";
    }
    get backButtonTooltip() {
      return "뒤로";
    }
    get cancelButtonLabel() {
      return "취소";
    }
    get closeButtonLabel() {
      return "닫기";
    }
    get closeButtonTooltip() {
      return "닫기";
    }
    get collapsedIconTapHint() {
      return "펼치기";
    }
    get continueButtonLabel() {
      return "계속";
    }
    get copyButtonLabel() {
      return "복사";
    }
    get cutButtonLabel() {
      return "잘라내기";
    }
    get deleteButtonTooltip() {
      return "삭제";
    }
    get dialogLabel() {
      return "대화상자";
    }
    get drawerLabel() {
      return "탐색 메뉴";
    }
    get expandedIconTapHint() {
      return "접기";
    }
    get hideAccountsLabel() {
      return "계정 숨기기";
    }
    get licensesPageTitle() {
      return "라이선스";
    }
    get modalBarrierDismissLabel() {
      return "닫기";
    }
    get nextMonthTooltip() {
      return "다음 달";
    }
    get nextPageTooltip() {
      return "다음 페이지";
    }
    get okButtonLabel() {
      return "확인";
    }
    get openAppDrawerTooltip() {
      return "탐색 메뉴 열기";
    }
    get pageRowsInfoTitleRaw() {
      return "$rowCount행 중 $firstRow~$lastRow행";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "약 $rowCount행 중 $firstRow~$lastRow행";
    }
    get pasteButtonLabel() {
      return "붙여넣기";
    }
    get popupMenuLabel() {
      return "팝업 메뉴";
    }
    get postMeridiemAbbreviation() {
      return "오후";
    }
    get previousMonthTooltip() {
      return "지난달";
    }
    get previousPageTooltip() {
      return "이전 페이지";
    }
    get refreshIndicatorSemanticLabel() {
      return "새로고침";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1자 남음";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount자 남음";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "아래로 이동";
    }
    get reorderItemLeft() {
      return "왼쪽으로 이동";
    }
    get reorderItemRight() {
      return "오른쪽으로 이동";
    }
    get reorderItemToEnd() {
      return "끝으로 이동";
    }
    get reorderItemToStart() {
      return "시작으로 이동";
    }
    get reorderItemUp() {
      return "위로 이동";
    }
    get rowsPerPageTitle() {
      return "페이지당 행 수:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.dense;
    }
    get searchFieldLabel() {
      return "검색";
    }
    get selectAllButtonLabel() {
      return "전체 선택";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "항목 1개 선택됨";
    }
    get selectedRowCountTitleOther() {
      return "항목 $selectedRowCount개 선택됨";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "계정 표시";
    }
    get showMenuTooltip() {
      return "메뉴 표시";
    }
    get signedInLabel() {
      return "로그인됨";
    }
    get tabLabelRaw() {
      return "탭 $tabCount개 중 $tabIndex번째";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.a_space_h_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "시간 선택";
    }
    get timePickerMinuteModeAnnouncement() {
      return "분 선택";
    }
    get viewLicensesButtonLabel() {
      return "라이선스 보기";
    }
  };
  (generated_material_localizations.MaterialLocalizationKo.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ko";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationKo.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationKo.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationKo);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationKo, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationKo.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationKo, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationKy = class MaterialLocalizationKy extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName каналы жөнүндө";
    }
    get alertDialogLabel() {
      return "Эскертүү";
    }
    get anteMeridiemAbbreviation() {
      return "түшкө чейин";
    }
    get backButtonTooltip() {
      return "Артка";
    }
    get cancelButtonLabel() {
      return "ЖОККО ЧЫГАРУУ";
    }
    get closeButtonLabel() {
      return "ЖАБУУ";
    }
    get closeButtonTooltip() {
      return "Жабуу";
    }
    get collapsedIconTapHint() {
      return "Жайып көрсөтүү";
    }
    get continueButtonLabel() {
      return "УЛАНТУУ";
    }
    get copyButtonLabel() {
      return "КӨЧҮРҮҮ";
    }
    get cutButtonLabel() {
      return "КЕСҮҮ";
    }
    get deleteButtonTooltip() {
      return "Жок кылуу";
    }
    get dialogLabel() {
      return "Диалог";
    }
    get drawerLabel() {
      return "Чабыттоо менюсу";
    }
    get expandedIconTapHint() {
      return "Жыйыштыруу";
    }
    get hideAccountsLabel() {
      return "Аккаунттарды жашыруу";
    }
    get licensesPageTitle() {
      return "Уруксаттамалар";
    }
    get modalBarrierDismissLabel() {
      return "Жабуу";
    }
    get nextMonthTooltip() {
      return "Кийинки ай";
    }
    get nextPageTooltip() {
      return "Кийинки бет";
    }
    get okButtonLabel() {
      return "Макул";
    }
    get openAppDrawerTooltip() {
      return "Чабыттоо менюсун ачуу";
    }
    get pageRowsInfoTitleRaw() {
      return "$rowCount ичинен $firstRow–$lastRow";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "Болжол менен $rowCount ичинен $firstRow–$lastRow";
    }
    get pasteButtonLabel() {
      return "ЧАПТОО";
    }
    get popupMenuLabel() {
      return "Калкып чыгуучу меню";
    }
    get postMeridiemAbbreviation() {
      return "түштөн кийин";
    }
    get previousMonthTooltip() {
      return "Мурунку ай";
    }
    get previousPageTooltip() {
      return "Мурунку бет";
    }
    get refreshIndicatorSemanticLabel() {
      return "Жаңыртуу";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 белги калды";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount белги калды";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "Төмөн жылдыруу";
    }
    get reorderItemLeft() {
      return "Солго жылдыруу";
    }
    get reorderItemRight() {
      return "Оңго жылдыруу";
    }
    get reorderItemToEnd() {
      return "Аягына жылдыруу";
    }
    get reorderItemToStart() {
      return "Башына жылдыруу";
    }
    get reorderItemUp() {
      return "Жогору жылдыруу";
    }
    get rowsPerPageTitle() {
      return "Бир бетте көрсөтүлүүчү саптардын саны:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Издөө";
    }
    get selectAllButtonLabel() {
      return "БААРЫН ТАНДОО";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 нерсе тандалды";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount нерсе тандалды";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Аккаунттарды көрсөтүү";
    }
    get showMenuTooltip() {
      return "Менюну көрсөтүү";
    }
    get signedInLabel() {
      return "Аккаунтуңузга кирдиңиз";
    }
    get tabLabelRaw() {
      return "$tabCount кыналма ичинен $tabIndex";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Саатты тандаңыз";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Мүнөттөрдү тандаңыз";
    }
    get viewLicensesButtonLabel() {
      return "УРУКСАТТАМАЛАРДЫ КӨРҮҮ";
    }
  };
  (generated_material_localizations.MaterialLocalizationKy.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ky";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationKy.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationKy.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationKy);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationKy, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationKy.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationKy, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationLo = class MaterialLocalizationLo extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "ກ່ຽວກັບ $applicationName";
    }
    get alertDialogLabel() {
      return "ການເຕືອນ";
    }
    get anteMeridiemAbbreviation() {
      return "ກ່ອນທ່ຽງ";
    }
    get backButtonTooltip() {
      return "ກັບຄືນ";
    }
    get cancelButtonLabel() {
      return "ຍົກເລີກ";
    }
    get closeButtonLabel() {
      return "ປິດ";
    }
    get closeButtonTooltip() {
      return "ປິດ";
    }
    get collapsedIconTapHint() {
      return "ຂະຫຍາຍ";
    }
    get continueButtonLabel() {
      return "ສືບຕໍ່";
    }
    get copyButtonLabel() {
      return "ສຳເນົາ";
    }
    get cutButtonLabel() {
      return "ຕັດ";
    }
    get deleteButtonTooltip() {
      return "ລຶບ";
    }
    get dialogLabel() {
      return "ຂໍ້ຄວາມ";
    }
    get drawerLabel() {
      return "ເມນູນຳທາງ";
    }
    get expandedIconTapHint() {
      return "ຫຍໍ້ເຂົ້າ";
    }
    get hideAccountsLabel() {
      return "ເຊື່ອງບັນຊີ";
    }
    get licensesPageTitle() {
      return "ໃບອະນຸຍາດ";
    }
    get modalBarrierDismissLabel() {
      return "ປິດໄວ້";
    }
    get nextMonthTooltip() {
      return "ເດືອນໜ້າ";
    }
    get nextPageTooltip() {
      return "ໜ້າຕໍ່ໄປ";
    }
    get okButtonLabel() {
      return "ຕົກລົງ";
    }
    get openAppDrawerTooltip() {
      return "ເປີດເມນູການນຳທາງ";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow ຈາກທັງໝົດ $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow ຈາກປະມານ $rowCount";
    }
    get pasteButtonLabel() {
      return "ວາງ";
    }
    get popupMenuLabel() {
      return "ເມນູປັອບອັບ";
    }
    get postMeridiemAbbreviation() {
      return "ຫຼັງທ່ຽງ";
    }
    get previousMonthTooltip() {
      return "ເດືອນແລ້ວ";
    }
    get previousPageTooltip() {
      return "ໜ້າກ່ອນໜ້າ";
    }
    get refreshIndicatorSemanticLabel() {
      return "ໂຫຼດຄືນໃໝ່";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "ຍັງອີກ 1 ຕົວອັກສອນ";
    }
    get remainingTextFieldCharacterCountOther() {
      return "ຍັງອີກ $remainingCount ຕົວອັກສອນ";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "ຍ້າຍລົງ";
    }
    get reorderItemLeft() {
      return "ຍ້າຍໄປຊ້າຍ";
    }
    get reorderItemRight() {
      return "ຍ້າຍໄປຂວາ";
    }
    get reorderItemToEnd() {
      return "ຍ້າຍໄປສິ້ນສຸດ";
    }
    get reorderItemToStart() {
      return "ຍ້າຍໄປເລີ່ມຕົ້ນ";
    }
    get reorderItemUp() {
      return "ຍ້າຍຂຶ້ນ";
    }
    get rowsPerPageTitle() {
      return "ແຖວຕໍ່ໜ້າ:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.tall;
    }
    get searchFieldLabel() {
      return "ຊອກຫາ";
    }
    get selectAllButtonLabel() {
      return "ເລືອກທັງໝົດ";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "ເລືອກ 1 ລາຍການແລ້ວ";
    }
    get selectedRowCountTitleOther() {
      return "ເລືອກ $selectedRowCount ລາຍການແລ້ວ";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "ສະແດງບັນຊີ";
    }
    get showMenuTooltip() {
      return "ສະແດງເມນູ";
    }
    get signedInLabel() {
      return "ເຂົ້າສູ່ລະບົບແລ້ວ";
    }
    get tabLabelRaw() {
      return "ແຖບທີ $tabIndex ຈາກທັງໝົດ $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "ເລືອກໂມງ";
    }
    get timePickerMinuteModeAnnouncement() {
      return "ເລືອກນາທີ";
    }
    get viewLicensesButtonLabel() {
      return "ເບິ່ງໃບອະນຸຍາດ";
    }
  };
  (generated_material_localizations.MaterialLocalizationLo.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "lo";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationLo.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationLo.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationLo);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationLo, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationLo.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationLo, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationLt = class MaterialLocalizationLt extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Apie „$applicationName“";
    }
    get alertDialogLabel() {
      return "Įspėjimas";
    }
    get anteMeridiemAbbreviation() {
      return "priešpiet";
    }
    get backButtonTooltip() {
      return "Atgal";
    }
    get cancelButtonLabel() {
      return "ATŠAUKTI";
    }
    get closeButtonLabel() {
      return "UŽDARYTI";
    }
    get closeButtonTooltip() {
      return "Uždaryti";
    }
    get collapsedIconTapHint() {
      return "Išskleisti";
    }
    get continueButtonLabel() {
      return "TĘSTI";
    }
    get copyButtonLabel() {
      return "KOPIJUOTI";
    }
    get cutButtonLabel() {
      return "IŠKIRPTI";
    }
    get deleteButtonTooltip() {
      return "Ištrinti";
    }
    get dialogLabel() {
      return "Dialogo langas";
    }
    get drawerLabel() {
      return "Naršymo meniu";
    }
    get expandedIconTapHint() {
      return "Sutraukti";
    }
    get hideAccountsLabel() {
      return "Slėpti paskyras";
    }
    get licensesPageTitle() {
      return "Licencijos";
    }
    get modalBarrierDismissLabel() {
      return "Atsisakyti";
    }
    get nextMonthTooltip() {
      return "Kitas mėnuo";
    }
    get nextPageTooltip() {
      return "Kitas puslapis";
    }
    get okButtonLabel() {
      return "GERAI";
    }
    get openAppDrawerTooltip() {
      return "Atidaryti naršymo meniu";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow iš $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow iš maždaug $rowCount";
    }
    get pasteButtonLabel() {
      return "ĮKLIJUOTI";
    }
    get popupMenuLabel() {
      return "Iššokantysis meniu";
    }
    get postMeridiemAbbreviation() {
      return "popiet";
    }
    get previousMonthTooltip() {
      return "Ankstesnis mėnuo";
    }
    get previousPageTooltip() {
      return "Ankstesnis puslapis";
    }
    get refreshIndicatorSemanticLabel() {
      return "Atnaujinti";
    }
    get remainingTextFieldCharacterCountFew() {
      return "Liko $remainingCount simboliai";
    }
    get remainingTextFieldCharacterCountMany() {
      return "Liko $remainingCount simbolio";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Liko 1 simbolis";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Liko $remainingCount simbolių";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Perkelti žemyn";
    }
    get reorderItemLeft() {
      return "Perkelti kairėn";
    }
    get reorderItemRight() {
      return "Perkelti dešinėn";
    }
    get reorderItemToEnd() {
      return "Perkelti į pabaigą";
    }
    get reorderItemToStart() {
      return "Perkelti į pradžią";
    }
    get reorderItemUp() {
      return "Perkelti aukštyn";
    }
    get rowsPerPageTitle() {
      return "Eilučių puslapyje:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Paieška";
    }
    get selectAllButtonLabel() {
      return "PASIRINKTI VISKĄ";
    }
    get selectedRowCountTitleFew() {
      return "Pasirinkti $selectedRowCount elementai";
    }
    get selectedRowCountTitleMany() {
      return "Pasirinkta $selectedRowCount elemento";
    }
    get selectedRowCountTitleOne() {
      return "Pasirinktas 1 elementas";
    }
    get selectedRowCountTitleOther() {
      return "Pasirinkta $selectedRowCount elementų";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Rodyti paskyras";
    }
    get showMenuTooltip() {
      return "Rodyti meniu";
    }
    get signedInLabel() {
      return "Prisijungta";
    }
    get tabLabelRaw() {
      return "$tabIndex skirtukas iš $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Pasirinkite valandas";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Pasirinkite minutes";
    }
    get viewLicensesButtonLabel() {
      return "PERŽIŪRĖTI LICENCIJAS";
    }
  };
  (generated_material_localizations.MaterialLocalizationLt.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "lt";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationLt.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationLt.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationLt);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationLt, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationLt.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationLt, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationLv = class MaterialLocalizationLv extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Par $applicationName";
    }
    get alertDialogLabel() {
      return "Brīdinājums";
    }
    get anteMeridiemAbbreviation() {
      return "priekšpusdienā";
    }
    get backButtonTooltip() {
      return "Atpakaļ";
    }
    get cancelButtonLabel() {
      return "ATCELT";
    }
    get closeButtonLabel() {
      return "AIZVĒRT";
    }
    get closeButtonTooltip() {
      return "Aizvērt";
    }
    get collapsedIconTapHint() {
      return "Izvērst";
    }
    get continueButtonLabel() {
      return "TURPINĀT";
    }
    get copyButtonLabel() {
      return "KOPĒT";
    }
    get cutButtonLabel() {
      return "IZGRIEZT";
    }
    get deleteButtonTooltip() {
      return "Dzēst";
    }
    get dialogLabel() {
      return "Dialoglodziņš";
    }
    get drawerLabel() {
      return "Navigācijas izvēlne";
    }
    get expandedIconTapHint() {
      return "Sakļaut";
    }
    get hideAccountsLabel() {
      return "Slēpt kontus";
    }
    get licensesPageTitle() {
      return "Licences";
    }
    get modalBarrierDismissLabel() {
      return "Nerādīt";
    }
    get nextMonthTooltip() {
      return "Nākamais mēnesis";
    }
    get nextPageTooltip() {
      return "Nākamā lapa";
    }
    get okButtonLabel() {
      return "LABI";
    }
    get openAppDrawerTooltip() {
      return "Atvērt navigācijas izvēlni";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow.–$lastRow. no $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow.–$lastRow. no aptuveni $rowCount";
    }
    get pasteButtonLabel() {
      return "IELĪMĒT";
    }
    get popupMenuLabel() {
      return "Uznirstošā izvēlne";
    }
    get postMeridiemAbbreviation() {
      return "pēcpusdienā";
    }
    get previousMonthTooltip() {
      return "Iepriekšējais mēnesis";
    }
    get previousPageTooltip() {
      return "Iepriekšējā lapa";
    }
    get refreshIndicatorSemanticLabel() {
      return "Atsvaidzināt";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "Atlikusi 1 rakstzīme.";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Atlikušas $remainingCount rakstzīmes.";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "Nav atlikusi neviena rakstzīme.";
    }
    get reorderItemDown() {
      return "Pārvietot uz leju";
    }
    get reorderItemLeft() {
      return "Pārvietot pa kreisi";
    }
    get reorderItemRight() {
      return "Pārvietot pa labi";
    }
    get reorderItemToEnd() {
      return "Pārvietot uz beigām";
    }
    get reorderItemToStart() {
      return "Pārvietot uz sākumu";
    }
    get reorderItemUp() {
      return "Pārvietot uz augšu";
    }
    get rowsPerPageTitle() {
      return "Rindas lapā:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Meklēt";
    }
    get selectAllButtonLabel() {
      return "ATLASĪT VISU";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "Atlasīts 1 vienums";
    }
    get selectedRowCountTitleOther() {
      return "Atlasīti $selectedRowCount vienumi";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return "Nav atlasītu vienumu";
    }
    get showAccountsLabel() {
      return "Rādīt kontus";
    }
    get showMenuTooltip() {
      return "Rādīt izvēlni";
    }
    get signedInLabel() {
      return "Esat pierakstījies";
    }
    get tabLabelRaw() {
      return "$tabIndex. cilne no $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Atlasiet stundas";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Atlasiet minūtes";
    }
    get viewLicensesButtonLabel() {
      return "SKATĪT LICENCES";
    }
  };
  (generated_material_localizations.MaterialLocalizationLv.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "lv";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationLv.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationLv.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationLv);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationLv, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationLv.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationLv, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationMk = class MaterialLocalizationMk extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "За $applicationName";
    }
    get alertDialogLabel() {
      return "Предупредување";
    }
    get anteMeridiemAbbreviation() {
      return "ПРЕТПЛАДНЕ";
    }
    get backButtonTooltip() {
      return "Назад";
    }
    get cancelButtonLabel() {
      return "ОТКАЖИ";
    }
    get closeButtonLabel() {
      return "ЗАТВОРИ";
    }
    get closeButtonTooltip() {
      return "Затвори";
    }
    get collapsedIconTapHint() {
      return "Прошири";
    }
    get continueButtonLabel() {
      return "ПРОДОЛЖИ";
    }
    get copyButtonLabel() {
      return "КОПИРАЈ";
    }
    get cutButtonLabel() {
      return "ИСЕЧИ";
    }
    get deleteButtonTooltip() {
      return "Избриши";
    }
    get dialogLabel() {
      return "Дијалог";
    }
    get drawerLabel() {
      return "Мени за навигација";
    }
    get expandedIconTapHint() {
      return "Собери";
    }
    get hideAccountsLabel() {
      return "Сокриј сметки";
    }
    get licensesPageTitle() {
      return "Лиценци";
    }
    get modalBarrierDismissLabel() {
      return "Отфрли";
    }
    get nextMonthTooltip() {
      return "Следниот месец";
    }
    get nextPageTooltip() {
      return "Следна страница";
    }
    get okButtonLabel() {
      return "Во ред";
    }
    get openAppDrawerTooltip() {
      return "Отворете го менито за навигација";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow - $lastRow од $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow - $lastRow од приближно $rowCount";
    }
    get pasteButtonLabel() {
      return "ЗАЛЕПИ";
    }
    get popupMenuLabel() {
      return "Скокачко мени";
    }
    get postMeridiemAbbreviation() {
      return "ПОПЛАДНЕ";
    }
    get previousMonthTooltip() {
      return "Претходниот месец";
    }
    get previousPageTooltip() {
      return "Претходна страница";
    }
    get refreshIndicatorSemanticLabel() {
      return "Освежи";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "Преостанува уште 1 знак";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Преостануваат уште $remainingCount знаци";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "Преместете надолу";
    }
    get reorderItemLeft() {
      return "Преместете налево";
    }
    get reorderItemRight() {
      return "Преместете надесно";
    }
    get reorderItemToEnd() {
      return "Преместете на крајот";
    }
    get reorderItemToStart() {
      return "Преместете на почеток";
    }
    get reorderItemUp() {
      return "Преместете нагоре";
    }
    get rowsPerPageTitle() {
      return "Редови на страница:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Пребарувајте";
    }
    get selectAllButtonLabel() {
      return "ИЗБЕРИ ГИ СИТЕ";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "Избрана е 1 ставка";
    }
    get selectedRowCountTitleOther() {
      return "Избрани се $selectedRowCount ставки";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Прикажи сметки";
    }
    get showMenuTooltip() {
      return "Прикажи мени";
    }
    get signedInLabel() {
      return "Најавени сте";
    }
    get tabLabelRaw() {
      return "Картичка $tabIndex од $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Изберете часови";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Изберете минути";
    }
    get viewLicensesButtonLabel() {
      return "ПРИКАЖИ ЛИЦЕНЦИ";
    }
  };
  (generated_material_localizations.MaterialLocalizationMk.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "mk";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationMk.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationMk.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationMk);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationMk, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationMk.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationMk, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationMl = class MaterialLocalizationMl extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName എന്നതിനെക്കുറിച്ച്";
    }
    get alertDialogLabel() {
      return "മുന്നറിയിപ്പ്";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "മടങ്ങുക";
    }
    get cancelButtonLabel() {
      return "റദ്ദാക്കുക";
    }
    get closeButtonLabel() {
      return "അടയ്‌ക്കുക";
    }
    get closeButtonTooltip() {
      return "അടയ്‌ക്കുക";
    }
    get collapsedIconTapHint() {
      return "വികസിപ്പിക്കുക";
    }
    get continueButtonLabel() {
      return "തുടരുക";
    }
    get copyButtonLabel() {
      return "പകർത്തുക";
    }
    get cutButtonLabel() {
      return "മുറിക്കുക";
    }
    get deleteButtonTooltip() {
      return "ഇല്ലാതാക്കുക";
    }
    get dialogLabel() {
      return "ഡയലോഗ്";
    }
    get drawerLabel() {
      return "നാവിഗേഷൻ മെനു";
    }
    get expandedIconTapHint() {
      return "ചുരുക്കുക";
    }
    get hideAccountsLabel() {
      return "അക്കൗണ്ടുകൾ മറയ്‌ക്കുക";
    }
    get licensesPageTitle() {
      return "ലൈസൻസുകൾ";
    }
    get modalBarrierDismissLabel() {
      return "നിരസിക്കുക";
    }
    get nextMonthTooltip() {
      return "അടുത്ത മാസം";
    }
    get nextPageTooltip() {
      return "അടുത്ത പേജ്";
    }
    get okButtonLabel() {
      return "ശരി";
    }
    get openAppDrawerTooltip() {
      return "നാവിഗേഷൻ മെനു തുറക്കുക";
    }
    get pageRowsInfoTitleRaw() {
      return "$rowCount-ൽ $firstRow –$lastRow";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "ഏകദേശം $rowCount-ൽ $firstRow –$lastRow";
    }
    get pasteButtonLabel() {
      return "ഒട്ടിക്കുക";
    }
    get popupMenuLabel() {
      return "പോപ്പ് അപ്പ് മെനു";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "മുമ്പത്തെ മാസം";
    }
    get previousPageTooltip() {
      return "മുമ്പത്തെ പേജ്";
    }
    get refreshIndicatorSemanticLabel() {
      return "പുതുക്കിയെടുക്കുക";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "ഒരു പ്രതീകം ശേഷിക്കുന്നു";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount പ്രതീകങ്ങൾ ശേഷിക്കുന്നു";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "താഴോട്ട് നീക്കുക";
    }
    get reorderItemLeft() {
      return "ഇടത്തോട്ട് നീക്കുക";
    }
    get reorderItemRight() {
      return "വലത്തോട്ട് നീക്കുക";
    }
    get reorderItemToEnd() {
      return "അവസാന ഭാഗത്തേക്ക് പോവുക";
    }
    get reorderItemToStart() {
      return "തുടക്കത്തിലേക്ക് പോവുക";
    }
    get reorderItemUp() {
      return "മുകളിലോട്ട് നീക്കുക";
    }
    get rowsPerPageTitle() {
      return "ഓരോ പേജിലുമുള്ള വരികൾ:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.tall;
    }
    get searchFieldLabel() {
      return "തിരയുക";
    }
    get selectAllButtonLabel() {
      return "എല്ലാം തിരഞ്ഞെടുക്കുക";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "ഒരു ഇനം തിരഞ്ഞെടുത്തു";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount ഇനങ്ങൾ തിരഞ്ഞെടുത്തു";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "അക്കൗണ്ടുകൾ കാണിക്കുക";
    }
    get showMenuTooltip() {
      return "മെനു കാണിക്കുക";
    }
    get signedInLabel() {
      return "സൈൻ ഇൻ ചെയ്‌തു";
    }
    get tabLabelRaw() {
      return "$tabCount-ൽ $tabIndex";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "മണിക്കൂർ തിരഞ്ഞെടുക്കുക";
    }
    get timePickerMinuteModeAnnouncement() {
      return "മിനിറ്റ് തിരഞ്ഞെടുക്കുക";
    }
    get viewLicensesButtonLabel() {
      return "ലൈസൻസുകൾ കാണുക";
    }
  };
  (generated_material_localizations.MaterialLocalizationMl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ml";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationMl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationMl.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationMl);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationMl, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationMl.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationMl, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationMn = class MaterialLocalizationMn extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName-н тухай";
    }
    get alertDialogLabel() {
      return "Сэрэмжлүүлэг";
    }
    get anteMeridiemAbbreviation() {
      return "ӨГЛӨӨ";
    }
    get backButtonTooltip() {
      return "Буцах";
    }
    get cancelButtonLabel() {
      return "БОЛИХ";
    }
    get closeButtonLabel() {
      return "ХААХ";
    }
    get closeButtonTooltip() {
      return "Хаах";
    }
    get collapsedIconTapHint() {
      return "Дэлгэх";
    }
    get continueButtonLabel() {
      return "ҮРГЭЛЖЛҮҮЛЭХ";
    }
    get copyButtonLabel() {
      return "ХУУЛАХ";
    }
    get cutButtonLabel() {
      return "ТАСЛАХ";
    }
    get deleteButtonTooltip() {
      return "Устгах";
    }
    get dialogLabel() {
      return "Харилцах цонх";
    }
    get drawerLabel() {
      return "Навигацийн цэс";
    }
    get expandedIconTapHint() {
      return "Буулгах";
    }
    get hideAccountsLabel() {
      return "Бүртгэлүүдийг нуух";
    }
    get licensesPageTitle() {
      return "Лиценз";
    }
    get modalBarrierDismissLabel() {
      return "Үл хэрэгсэх";
    }
    get nextMonthTooltip() {
      return "Дараах сар";
    }
    get nextPageTooltip() {
      return "Дараах хуудас";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Навигацийн цэсийг нээх";
    }
    get pageRowsInfoTitleRaw() {
      return "$rowCount-н $firstRow–$lastRow";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "Ойролцоогоор $rowCount-н $firstRow–$lastRow";
    }
    get pasteButtonLabel() {
      return "БУУЛГАХ";
    }
    get popupMenuLabel() {
      return "Попап цэс";
    }
    get postMeridiemAbbreviation() {
      return "ОРОЙ";
    }
    get previousMonthTooltip() {
      return "Өмнөх сар";
    }
    get previousPageTooltip() {
      return "Өмнөх хуудас";
    }
    get refreshIndicatorSemanticLabel() {
      return "Сэргээх";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 тэмдэгт үлдсэн";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount тэмдэгт үлдсэн";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "No characters remaining";
    }
    get reorderItemDown() {
      return "Доош зөөх";
    }
    get reorderItemLeft() {
      return "Зүүн тийш зөөх";
    }
    get reorderItemRight() {
      return "Баруун тийш зөөх";
    }
    get reorderItemToEnd() {
      return "Төгсгөл рүү зөөх";
    }
    get reorderItemToStart() {
      return "Эхлэл рүү зөөх";
    }
    get reorderItemUp() {
      return "Дээш зөөх";
    }
    get rowsPerPageTitle() {
      return "Хуудсан дахь мөрийн тоо:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Хайх";
    }
    get selectAllButtonLabel() {
      return "БҮГДИЙГ СОНГОХ";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 зүйл сонгосон";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount зүйл сонгосон";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return "Бичлэг сонгоогүй байна";
    }
    get showAccountsLabel() {
      return "Бүртгэлүүдийг харуулах";
    }
    get showMenuTooltip() {
      return "Цэсийг харуулах";
    }
    get signedInLabel() {
      return "Нэвтэрсэн";
    }
    get tabLabelRaw() {
      return "$tabCount-н $tabIndex-р таб";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Цаг сонгоно уу";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Минут сонгоно уу";
    }
    get viewLicensesButtonLabel() {
      return "ЛИЦЕНЗИЙГ ХАРАХ";
    }
  };
  (generated_material_localizations.MaterialLocalizationMn.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "mn";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationMn.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationMn.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationMn);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationMn, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationMn.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationMn, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationMr = class MaterialLocalizationMr extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName बद्दल";
    }
    get alertDialogLabel() {
      return "सूचना";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "मागे";
    }
    get cancelButtonLabel() {
      return "रद्द करा";
    }
    get closeButtonLabel() {
      return "बंद करा";
    }
    get closeButtonTooltip() {
      return "बंद करा";
    }
    get collapsedIconTapHint() {
      return "विस्तार करा";
    }
    get continueButtonLabel() {
      return "सुरू ठेवा";
    }
    get copyButtonLabel() {
      return "कॉपी करा";
    }
    get cutButtonLabel() {
      return "कट करा";
    }
    get deleteButtonTooltip() {
      return "हटवा";
    }
    get dialogLabel() {
      return "डायलॉग";
    }
    get drawerLabel() {
      return "नेव्हिगेशन मेनू";
    }
    get expandedIconTapHint() {
      return "कोलॅप्स करा";
    }
    get hideAccountsLabel() {
      return "खाती लपवा";
    }
    get licensesPageTitle() {
      return "परवाने";
    }
    get modalBarrierDismissLabel() {
      return "डिसमिस करा";
    }
    get nextMonthTooltip() {
      return "पुढील महिना";
    }
    get nextPageTooltip() {
      return "पुढील पेज";
    }
    get okButtonLabel() {
      return "ओके";
    }
    get openAppDrawerTooltip() {
      return "नेव्हिगेशन मेनू उघडा";
    }
    get pageRowsInfoTitleRaw() {
      return "$rowCount पैकी $firstRow–$lastRow";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$rowCount च्या बद्दल $firstRow–$lastRow";
    }
    get pasteButtonLabel() {
      return "पेस्ट करा";
    }
    get popupMenuLabel() {
      return "पॉपअप मेनू";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "मागील महिना";
    }
    get previousPageTooltip() {
      return "मागील पेज";
    }
    get refreshIndicatorSemanticLabel() {
      return "रिफ्रेश करा";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "एक वर्ण शिल्लक";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount वर्ण शिल्लक";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "कोणतेही वर्ण शिल्लक नाहीत";
    }
    get reorderItemDown() {
      return "खाली हलवा";
    }
    get reorderItemLeft() {
      return "डावीकडे हलवा";
    }
    get reorderItemRight() {
      return "उजवीकडे हलवा";
    }
    get reorderItemToEnd() {
      return "शेवटाकडे हलवा";
    }
    get reorderItemToStart() {
      return "सुरुवातीला हलवा";
    }
    get reorderItemUp() {
      return "वर हलवा";
    }
    get rowsPerPageTitle() {
      return "प्रति पेज पंक्ती:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.dense;
    }
    get searchFieldLabel() {
      return "शोध";
    }
    get selectAllButtonLabel() {
      return "सर्व निवडा";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "एक अायटम निवडला";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount अायटम निवडले";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return "कोणतेही आयटम निवडलेले नाहीत";
    }
    get showAccountsLabel() {
      return "खाती दर्शवा";
    }
    get showMenuTooltip() {
      return "मेनू दाखवा";
    }
    get signedInLabel() {
      return "साइन इन केले आहे";
    }
    get tabLabelRaw() {
      return "$tabCount पैकी $tabIndex टॅब";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.h_colon_mm_space_a;
    }
    get timePickerHourModeAnnouncement() {
      return "तास निवडा";
    }
    get timePickerMinuteModeAnnouncement() {
      return "मिनिटे निवडा";
    }
    get viewLicensesButtonLabel() {
      return "परवाने पाहा";
    }
  };
  (generated_material_localizations.MaterialLocalizationMr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "mr";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationMr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationMr.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationMr);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationMr, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationMr.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationMr, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationMs = class MaterialLocalizationMs extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Perihal $applicationName";
    }
    get alertDialogLabel() {
      return "Makluman";
    }
    get anteMeridiemAbbreviation() {
      return "PG";
    }
    get backButtonTooltip() {
      return "Kembali";
    }
    get cancelButtonLabel() {
      return "BATAL";
    }
    get closeButtonLabel() {
      return "TUTUP";
    }
    get closeButtonTooltip() {
      return "Tutup";
    }
    get collapsedIconTapHint() {
      return "Kembangkan";
    }
    get continueButtonLabel() {
      return "TERUSKAN";
    }
    get copyButtonLabel() {
      return "SALIN";
    }
    get cutButtonLabel() {
      return "POTONG";
    }
    get deleteButtonTooltip() {
      return "Padam";
    }
    get dialogLabel() {
      return "Dialog";
    }
    get drawerLabel() {
      return "Menu navigasi";
    }
    get expandedIconTapHint() {
      return "Runtuhkan";
    }
    get hideAccountsLabel() {
      return "Sembunyikan akaun";
    }
    get licensesPageTitle() {
      return "Lesen";
    }
    get modalBarrierDismissLabel() {
      return "Tolak";
    }
    get nextMonthTooltip() {
      return "Bulan depan";
    }
    get nextPageTooltip() {
      return "Halaman seterusnya";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Buka menu navigasi";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow dari $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow dari kira-kira $rowCount";
    }
    get pasteButtonLabel() {
      return "TAMPAL";
    }
    get popupMenuLabel() {
      return "Menu pop timbul";
    }
    get postMeridiemAbbreviation() {
      return "PTG";
    }
    get previousMonthTooltip() {
      return "Bulan sebelumnya";
    }
    get previousPageTooltip() {
      return "Halaman sebelumnya";
    }
    get refreshIndicatorSemanticLabel() {
      return "Muat semula";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 aksara lagi";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount aksara lagi";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Alih ke bawah";
    }
    get reorderItemLeft() {
      return "Alih ke kiri";
    }
    get reorderItemRight() {
      return "Alih ke kanan";
    }
    get reorderItemToEnd() {
      return "Alih ke penghujung";
    }
    get reorderItemToStart() {
      return "Alih ke permulaan";
    }
    get reorderItemUp() {
      return "Alih ke atas";
    }
    get rowsPerPageTitle() {
      return "Baris setiap halaman:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Cari";
    }
    get selectAllButtonLabel() {
      return "PILIH SEMUA";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 item dipilih";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount item dipilih";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return "Tiada item dipilih";
    }
    get showAccountsLabel() {
      return "Tunjukkan akaun";
    }
    get showMenuTooltip() {
      return "Tunjukkan menu";
    }
    get signedInLabel() {
      return "Dilog masuk";
    }
    get tabLabelRaw() {
      return "Tab $tabIndex dari $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.h_colon_mm_space_a;
    }
    get timePickerHourModeAnnouncement() {
      return "Pilih jam";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Pilih minit";
    }
    get viewLicensesButtonLabel() {
      return "LIHAT LESEN";
    }
  };
  (generated_material_localizations.MaterialLocalizationMs.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ms";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationMs.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationMs.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationMs);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationMs, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationMs.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationMs, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationMy = class MaterialLocalizationMy extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName အကြောင်း";
    }
    get alertDialogLabel() {
      return "သတိပေးချက်";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "နောက်သို့";
    }
    get cancelButtonLabel() {
      return "မလုပ်တော့";
    }
    get closeButtonLabel() {
      return "ပိတ်ရန်";
    }
    get closeButtonTooltip() {
      return "ပိတ်ရန်";
    }
    get collapsedIconTapHint() {
      return "ချဲ့ရန်";
    }
    get continueButtonLabel() {
      return "ရှေ့ဆက်ရန်";
    }
    get copyButtonLabel() {
      return "မိတ္တူကူးရန်";
    }
    get cutButtonLabel() {
      return "ဖြတ်ယူရန်";
    }
    get deleteButtonTooltip() {
      return "ဖျက်ရန်";
    }
    get dialogLabel() {
      return "ဒိုင်ယာလော့";
    }
    get drawerLabel() {
      return "လမ်းညွှန် မီနူး";
    }
    get expandedIconTapHint() {
      return "လျှော့ပြရန်";
    }
    get hideAccountsLabel() {
      return "အကောင့်များကို ဝှက်ရန်";
    }
    get licensesPageTitle() {
      return "လိုင်စင်များ";
    }
    get modalBarrierDismissLabel() {
      return "ပယ်ရန်";
    }
    get nextMonthTooltip() {
      return "နောက်လ";
    }
    get nextPageTooltip() {
      return "နောက်စာမျက်နှာ";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "လမ်းညွှန်မီနူးကို ဖွင့်ရန်";
    }
    get pageRowsInfoTitleRaw() {
      return "$rowCount အနက် $firstRow–$lastRow";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$rowCount ခန့်မှ $firstRow–$lastRow";
    }
    get pasteButtonLabel() {
      return "ကူးထည့်ရန်";
    }
    get popupMenuLabel() {
      return "ပေါ့ပ်အပ်မီနူး";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "ယခင်လ";
    }
    get previousPageTooltip() {
      return "ယခင်စာမျက်နှာ";
    }
    get refreshIndicatorSemanticLabel() {
      return "ပြန်လည်စတင်ရန်";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "အက္ခရာ ၁ လုံးကျန်သည်";
    }
    get remainingTextFieldCharacterCountOther() {
      return "အက္ခရာ $remainingCount လုံးကျန်သည်";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "အောက်သို့ရွှေ့ရန်";
    }
    get reorderItemLeft() {
      return "ဘယ်ဘက်သို့ရွှေ့ရန်";
    }
    get reorderItemRight() {
      return "ညာဘက်သို့ရွှေ့ရန်";
    }
    get reorderItemToEnd() {
      return "အဆုံးသို့ ‌ရွှေ့ရန်";
    }
    get reorderItemToStart() {
      return "အစသို့ ရွှေ့ရန်";
    }
    get reorderItemUp() {
      return "အပေါ်သို့ ရွှေ့ရန်";
    }
    get rowsPerPageTitle() {
      return "စာတစ်မျက်နှာပါ လိုင်းအရေအတွက်−";
    }
    get scriptCategory() {
      return typography.ScriptCategory.tall;
    }
    get searchFieldLabel() {
      return "ရှာဖွေရန်";
    }
    get selectAllButtonLabel() {
      return "အားလုံး ရွေးရန်";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "၁ ခု ရွေးထားသည်";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount ခု ရွေးထားသည်";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "အကောင့်များကို ပြရန်";
    }
    get showMenuTooltip() {
      return "မီနူး ပြရန်";
    }
    get signedInLabel() {
      return "လက်မှတ်ထိုး ဝင်ထားသည်";
    }
    get tabLabelRaw() {
      return "တဘ် $tabCount အနက် $tabIndex ခု";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "နာရီကို ရွေးပါ";
    }
    get timePickerMinuteModeAnnouncement() {
      return "မိနစ်ကို ရွေးပါ";
    }
    get viewLicensesButtonLabel() {
      return "လိုင်စင်များကို ကြည့်ရန်";
    }
  };
  (generated_material_localizations.MaterialLocalizationMy.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "my";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationMy.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationMy.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationMy);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationMy, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationMy.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationMy, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationNb = class MaterialLocalizationNb extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Om $applicationName";
    }
    get alertDialogLabel() {
      return "Varsel";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Tilbake";
    }
    get cancelButtonLabel() {
      return "AVBRYT";
    }
    get closeButtonLabel() {
      return "LUKK";
    }
    get closeButtonTooltip() {
      return "Lukk";
    }
    get collapsedIconTapHint() {
      return "Vis";
    }
    get continueButtonLabel() {
      return "FORTSETT";
    }
    get copyButtonLabel() {
      return "KOPIÉR";
    }
    get cutButtonLabel() {
      return "KLIPP UT";
    }
    get deleteButtonTooltip() {
      return "Slett";
    }
    get dialogLabel() {
      return "Dialogboks";
    }
    get drawerLabel() {
      return "Navigasjonsmeny";
    }
    get expandedIconTapHint() {
      return "Skjul";
    }
    get hideAccountsLabel() {
      return "Skjul kontoer";
    }
    get licensesPageTitle() {
      return "Lisenser";
    }
    get modalBarrierDismissLabel() {
      return "Avvis";
    }
    get nextMonthTooltip() {
      return "Neste måned";
    }
    get nextPageTooltip() {
      return "Neste side";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Åpne navigasjonsmenyen";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow av $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow av omtrent $rowCount";
    }
    get pasteButtonLabel() {
      return "LIM INN";
    }
    get popupMenuLabel() {
      return "Forgrunnsmeny";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Forrige måned";
    }
    get previousPageTooltip() {
      return "Forrige side";
    }
    get refreshIndicatorSemanticLabel() {
      return "Laster inn på nytt";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 tegn gjenstår";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount tegn gjenstår";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Flytt ned";
    }
    get reorderItemLeft() {
      return "Flytt til venstre";
    }
    get reorderItemRight() {
      return "Flytt til høyre";
    }
    get reorderItemToEnd() {
      return "Flytt til slutten";
    }
    get reorderItemToStart() {
      return "Flytt til starten";
    }
    get reorderItemUp() {
      return "Flytt opp";
    }
    get rowsPerPageTitle() {
      return "Rader per side:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Søk";
    }
    get selectAllButtonLabel() {
      return "VELG ALLE";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 element er valgt";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount elementer er valgt";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Vis kontoer";
    }
    get showMenuTooltip() {
      return "Vis meny";
    }
    get signedInLabel() {
      return "Pålogget";
    }
    get tabLabelRaw() {
      return "Fane $tabIndex av $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Angi timer";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Angi minutter";
    }
    get viewLicensesButtonLabel() {
      return "SE LISENSER";
    }
  };
  (generated_material_localizations.MaterialLocalizationNb.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "nb";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationNb.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationNb.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationNb);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationNb, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationNb.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationNb, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationNe = class MaterialLocalizationNe extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName बारे";
    }
    get alertDialogLabel() {
      return "अलर्ट";
    }
    get anteMeridiemAbbreviation() {
      return "पूर्वाह्न";
    }
    get backButtonTooltip() {
      return "पछाडि जानुहोस्";
    }
    get cancelButtonLabel() {
      return "रद्द गर्नुहोस्";
    }
    get closeButtonLabel() {
      return "बन्द गर्नुहोस्";
    }
    get closeButtonTooltip() {
      return "बन्द गर्नुहोस्";
    }
    get collapsedIconTapHint() {
      return "विस्तार गर्नुहोस्";
    }
    get continueButtonLabel() {
      return "जारी राख्नुहोस्";
    }
    get copyButtonLabel() {
      return "प्रतिलिपि गर्नुहोस्";
    }
    get cutButtonLabel() {
      return "काट्नुहोस्";
    }
    get deleteButtonTooltip() {
      return "मेट्नुहोस्";
    }
    get dialogLabel() {
      return "संवाद";
    }
    get drawerLabel() {
      return "नेभिगेसन मेनु";
    }
    get expandedIconTapHint() {
      return "संक्षिप्त गर्नुहोस्";
    }
    get hideAccountsLabel() {
      return "खाताहरू लुकाउनुहोस्";
    }
    get licensesPageTitle() {
      return "इजाजतपत्रहरू";
    }
    get modalBarrierDismissLabel() {
      return "खारेज गर्नुहोस्";
    }
    get nextMonthTooltip() {
      return "अर्को महिना";
    }
    get nextPageTooltip() {
      return "अर्को पृष्ठ";
    }
    get okButtonLabel() {
      return "ठिक छ";
    }
    get openAppDrawerTooltip() {
      return "नेभिगेसन मेनु खोल्नुहोस्";
    }
    get pageRowsInfoTitleRaw() {
      return "$rowCount मध्ये $firstRow–$lastRow";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "लगभग $rowCount को $firstRow–$lastRow";
    }
    get pasteButtonLabel() {
      return "टाँस्नुहोस्";
    }
    get popupMenuLabel() {
      return "पपअप मेनु";
    }
    get postMeridiemAbbreviation() {
      return "अपराह्न";
    }
    get previousMonthTooltip() {
      return "अघिल्लो महिना";
    }
    get previousPageTooltip() {
      return "अघिल्लो पृष्ठ";
    }
    get refreshIndicatorSemanticLabel() {
      return "पुनः ताजा गर्नुहोस्";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "१ वर्ण बाँकी";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount वर्णहरू बाँकी";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "तल सार्नुहोस्";
    }
    get reorderItemLeft() {
      return "बायाँ सार्नुहोस्";
    }
    get reorderItemRight() {
      return "दायाँ सार्नुहोस्";
    }
    get reorderItemToEnd() {
      return "अन्त्यमा जानुहोस्";
    }
    get reorderItemToStart() {
      return "सुरुमा सार्नुहोस्";
    }
    get reorderItemUp() {
      return "माथि सार्नुहोस्";
    }
    get rowsPerPageTitle() {
      return "प्रत्येक पृष्ठमा रहेका पङ्क्तिहरूको सङ्ख्या:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.tall;
    }
    get searchFieldLabel() {
      return "खोज्नुहोस्";
    }
    get selectAllButtonLabel() {
      return "सबै चयन गर्नुहोस्";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "१ वस्तु चयन गरियो";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount वस्तुहरू चयन गरिए";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "खाताहरू देखाउनुहोस्";
    }
    get showMenuTooltip() {
      return "मेनु देखाउनुहोस्";
    }
    get signedInLabel() {
      return "साइन इन गरियो";
    }
    get tabLabelRaw() {
      return "$tabCount मध्ये $tabIndex ट्याब";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "घन्टा चयन गर्नुहोस्";
    }
    get timePickerMinuteModeAnnouncement() {
      return "मिनेट चयन गर्नुहोस्";
    }
    get viewLicensesButtonLabel() {
      return "इजाजतपत्रहरू हेर्नुहोस्";
    }
  };
  (generated_material_localizations.MaterialLocalizationNe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ne";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationNe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationNe.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationNe);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationNe, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationNe.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationNe, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationNl = class MaterialLocalizationNl extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Over $applicationName";
    }
    get alertDialogLabel() {
      return "Melding";
    }
    get anteMeridiemAbbreviation() {
      return "am";
    }
    get backButtonTooltip() {
      return "Terug";
    }
    get cancelButtonLabel() {
      return "ANNULEREN";
    }
    get closeButtonLabel() {
      return "SLUITEN";
    }
    get closeButtonTooltip() {
      return "Sluiten";
    }
    get collapsedIconTapHint() {
      return "Uitvouwen";
    }
    get continueButtonLabel() {
      return "DOORGAAN";
    }
    get copyButtonLabel() {
      return "KOPIËREN";
    }
    get cutButtonLabel() {
      return "KNIPPEN";
    }
    get deleteButtonTooltip() {
      return "Verwijderen";
    }
    get dialogLabel() {
      return "Dialoogvenster";
    }
    get drawerLabel() {
      return "Navigatiemenu";
    }
    get expandedIconTapHint() {
      return "Samenvouwen";
    }
    get hideAccountsLabel() {
      return "Accounts verbergen";
    }
    get licensesPageTitle() {
      return "Licenties";
    }
    get modalBarrierDismissLabel() {
      return "Sluiten";
    }
    get nextMonthTooltip() {
      return "Volgende maand";
    }
    get nextPageTooltip() {
      return "Volgende pagina";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Navigatiemenu openen";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow-$lastRow van $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow-$lastRow van ongeveer $rowCount";
    }
    get pasteButtonLabel() {
      return "PLAKKEN";
    }
    get popupMenuLabel() {
      return "Pop-upmenu";
    }
    get postMeridiemAbbreviation() {
      return "pm";
    }
    get previousMonthTooltip() {
      return "Vorige maand";
    }
    get previousPageTooltip() {
      return "Vorige pagina";
    }
    get refreshIndicatorSemanticLabel() {
      return "Vernieuwen";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 teken resterend";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount tekens resterend";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Omlaag verplaatsen";
    }
    get reorderItemLeft() {
      return "Naar links verplaatsen";
    }
    get reorderItemRight() {
      return "Naar rechts verplaatsen";
    }
    get reorderItemToEnd() {
      return "Naar het einde verplaatsen";
    }
    get reorderItemToStart() {
      return "Naar het begin verplaatsen";
    }
    get reorderItemUp() {
      return "Omhoog verplaatsen";
    }
    get rowsPerPageTitle() {
      return "Rijen per pagina:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Zoeken";
    }
    get selectAllButtonLabel() {
      return "ALLES SELECTEREN";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 item geselecteerd";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount items geselecteerd";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Accounts weergeven";
    }
    get showMenuTooltip() {
      return "Menu weergeven";
    }
    get signedInLabel() {
      return "Ingelogd";
    }
    get tabLabelRaw() {
      return "Tabblad $tabIndex van $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Uren selecteren";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Minuten selecteren";
    }
    get viewLicensesButtonLabel() {
      return "LICENTIES BEKIJKEN";
    }
  };
  (generated_material_localizations.MaterialLocalizationNl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "nl";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationNl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationNl.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationNl);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationNl, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationNl.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationNl, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationOr = class MaterialLocalizationOr extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName ବିଷୟରେ";
    }
    get alertDialogLabel() {
      return "ଆଲର୍ଟ";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "ପଛକୁ ଫେରନ୍ତୁ";
    }
    get cancelButtonLabel() {
      return "ବାତିଲ୍ କରନ୍ତୁ";
    }
    get closeButtonLabel() {
      return "ବନ୍ଦ କରନ୍ତୁ";
    }
    get closeButtonTooltip() {
      return "ବନ୍ଦ କରନ୍ତୁ";
    }
    get collapsedIconTapHint() {
      return "ପ୍ରସାରିତ କରନ୍ତୁ";
    }
    get continueButtonLabel() {
      return "ଜାରି ରଖନ୍ତୁ";
    }
    get copyButtonLabel() {
      return "କପି କରନ୍ତୁ";
    }
    get cutButtonLabel() {
      return "କଟ୍ କରନ୍ତୁ";
    }
    get deleteButtonTooltip() {
      return "ଡିଲିଟ୍ କରନ୍ତୁ";
    }
    get dialogLabel() {
      return "ଡାୟଲଗ୍";
    }
    get drawerLabel() {
      return "ନେଭିଗେସନ୍ ମେନୁ";
    }
    get expandedIconTapHint() {
      return "ସଙ୍କୁଚିତ କରନ୍ତୁ";
    }
    get hideAccountsLabel() {
      return "ଆକାଉଣ୍ଟଗୁଡ଼ିକୁ ଲୁଚାନ୍ତୁ";
    }
    get licensesPageTitle() {
      return "ଲାଇସେନ୍ସଗୁଡ଼କ";
    }
    get modalBarrierDismissLabel() {
      return "ଖାରଜ କରନ୍ତୁ";
    }
    get nextMonthTooltip() {
      return "ପରବର୍ତ୍ତୀ ମାସ";
    }
    get nextPageTooltip() {
      return "ପରବର୍ତ୍ତୀ ପେଜ୍";
    }
    get okButtonLabel() {
      return "ଠିକ୍ ଅଛି";
    }
    get openAppDrawerTooltip() {
      return "ନାଭିଗେସନ୍ ମେନୁ ଖୋଲନ୍ତୁ";
    }
    get pageRowsInfoTitleRaw() {
      return "$rowCountର $firstRow–$lastRow";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "ପାଖାପାଖି $rowCountର $firstRow–$lastRow";
    }
    get pasteButtonLabel() {
      return "ପେଷ୍ଟ କରନ୍ତୁ";
    }
    get popupMenuLabel() {
      return "ପପ୍-ଅପ୍ ମେନୁ";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "ପୂର୍ବ ମାସ";
    }
    get previousPageTooltip() {
      return "ପୂର୍ବବର୍ତ୍ତୀ ପେଜ୍";
    }
    get refreshIndicatorSemanticLabel() {
      return "ରିଫ୍ରେସ୍ କରନ୍ତୁ";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1ଟି ଅକ୍ଷର ବାକି ଅଛି";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCountଟି ଅକ୍ଷର ବାକି ଅଛି";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "ତଳକୁ ଯାଆନ୍ତୁ";
    }
    get reorderItemLeft() {
      return "ବାମକୁ ଯାଆନ୍ତୁ";
    }
    get reorderItemRight() {
      return "ଡାହାଣକୁ ଯାଆନ୍ତୁ";
    }
    get reorderItemToEnd() {
      return "ଶେଷକୁ ଯାଆନ୍ତୁ";
    }
    get reorderItemToStart() {
      return "ଆରମ୍ଭକୁ ଯାଆନ୍ତୁ";
    }
    get reorderItemUp() {
      return "ଉପରକୁ ନିଅନ୍ତୁ";
    }
    get rowsPerPageTitle() {
      return "ପୃଷ୍ଠା ପିଛା ଧାଡ଼ି:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.tall;
    }
    get searchFieldLabel() {
      return "ଖୋଜନ୍ତୁ";
    }
    get selectAllButtonLabel() {
      return "ସମସ୍ତ ଚୟନ କରନ୍ତୁ";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1ଟି ଆଇଟମ୍ ଚୟନ କରାଯାଇଛି";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCountଟି ଆଇଟମ୍ ଚୟନ କରାଯାଇଛି";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "ଆକାଉଣ୍ଟ ଦେଖାନ୍ତୁ";
    }
    get showMenuTooltip() {
      return "ମେନୁ ଦେଖାନ୍ତୁ";
    }
    get signedInLabel() {
      return "ସାଇନ୍ ଇନ୍ କରାଯାଇଛି";
    }
    get tabLabelRaw() {
      return "$tabCountର $tabIndex ଟାବ୍";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "ଘଣ୍ଟା ଚୟନ କରନ୍ତୁ";
    }
    get timePickerMinuteModeAnnouncement() {
      return "ମିନିଟ୍ ଚୟନ କରନ୍ତୁ";
    }
    get viewLicensesButtonLabel() {
      return "ଲାଇସେନ୍ସ ଦେଖାନ୍ତୁ";
    }
  };
  (generated_material_localizations.MaterialLocalizationOr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "or";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationOr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationOr.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationOr);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationOr, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationOr.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationOr, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationPa = class MaterialLocalizationPa extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName ਬਾਰੇ";
    }
    get alertDialogLabel() {
      return "ਸੁਚੇਤਨਾ";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "ਪਿੱਛੇ";
    }
    get cancelButtonLabel() {
      return "ਰੱਦ ਕਰੋ";
    }
    get closeButtonLabel() {
      return "ਬੰਦ ਕਰੋ";
    }
    get closeButtonTooltip() {
      return "ਬੰਦ ਕਰੋ";
    }
    get collapsedIconTapHint() {
      return "ਵਿਸਤਾਰ ਕਰੋ";
    }
    get continueButtonLabel() {
      return "ਜਾਰੀ ਰੱਖੋ";
    }
    get copyButtonLabel() {
      return "ਕਾਪੀ ਕਰੋ";
    }
    get cutButtonLabel() {
      return "ਕੱਟ ਕਰੋ";
    }
    get deleteButtonTooltip() {
      return "ਮਿਟਾਓ";
    }
    get dialogLabel() {
      return "ਵਿੰਡੋ";
    }
    get drawerLabel() {
      return "ਨੈਵੀਗੇਸ਼ਨ ਮੀਨੂ";
    }
    get expandedIconTapHint() {
      return "ਸਮੇਟੋ";
    }
    get hideAccountsLabel() {
      return "ਖਾਤੇ ਲੁਕਾਓ";
    }
    get licensesPageTitle() {
      return "ਲਾਇਸੰਸ";
    }
    get modalBarrierDismissLabel() {
      return "ਖਾਰਜ ਕਰੋ";
    }
    get nextMonthTooltip() {
      return "ਅਗਲਾ ਮਹੀਨਾ";
    }
    get nextPageTooltip() {
      return "ਅਗਲਾ ਪੰਨਾ";
    }
    get okButtonLabel() {
      return "ਠੀਕ ਹੈ";
    }
    get openAppDrawerTooltip() {
      return "ਨੈਵੀਗੇਸ਼ਨ ਮੀਨੂ ਖੋਲ੍ਹੋ";
    }
    get pageRowsInfoTitleRaw() {
      return "$rowCount ਵਿੱਚੋਂ $firstRow–$lastRow";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "ਲਗਭਗ $rowCount ਵਿੱਚੋਂ $firstRow–$lastRow";
    }
    get pasteButtonLabel() {
      return "ਪੇਸਟ ਕਰੋ";
    }
    get popupMenuLabel() {
      return "ਪੌਪਅੱਪ ਮੀਨੂ";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "ਪਿਛਲਾ ਮਹੀਨਾ";
    }
    get previousPageTooltip() {
      return "ਪਿਛਲਾ ਪੰਨਾ";
    }
    get refreshIndicatorSemanticLabel() {
      return "ਰਿਫ੍ਰੈਸ਼ ਕਰੋ";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 ਅੱਖਰ-ਚਿੰਨ੍ਹ ਬਾਕੀ";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount ਅੱਖਰ-ਚਿੰਨ੍ਹ ਬਾਕੀ";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "ਹੇਠਾਂ ਲਿਜਾਓ";
    }
    get reorderItemLeft() {
      return "ਖੱਬੇ ਲਿਜਾਓ";
    }
    get reorderItemRight() {
      return "ਸੱਜੇ ਲਿਜਾਓ";
    }
    get reorderItemToEnd() {
      return "ਅੰਤ ਵਿੱਚ ਲਿਜਾਓ";
    }
    get reorderItemToStart() {
      return "ਸ਼ੁਰੂ ਵਿੱਚ ਲਿਜਾਓ";
    }
    get reorderItemUp() {
      return "ਉੱਪਰ ਲਿਜਾਓ";
    }
    get rowsPerPageTitle() {
      return "ਹਰ ਪੰਨੇ " + "'" + "ਤੇ ਕਤਾਰਾਂ:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.tall;
    }
    get searchFieldLabel() {
      return "ਖੋਜੋ";
    }
    get selectAllButtonLabel() {
      return "ਸਭ ਚੁਣੋ";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 ਆਈਟਮ ਚੁਣੀ ਗਈ";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount ਆਈਟਮਾਂ ਚੁਣੀਆਂ ਗਈਆਂ";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "ਖਾਤੇ ਦਿਖਾਓ";
    }
    get showMenuTooltip() {
      return "ਮੀਨੂ ਦਿਖਾਓ";
    }
    get signedInLabel() {
      return "ਸਾਈਨ-ਇਨ ਕੀਤਾ ਗਿਆ";
    }
    get tabLabelRaw() {
      return "$tabCount ਵਿੱਚੋਂ $tabIndex ਟੈਬ";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "ਘੰਟੇ ਚੁਣੋ";
    }
    get timePickerMinuteModeAnnouncement() {
      return "ਮਿੰਟ ਚੁਣੋ";
    }
    get viewLicensesButtonLabel() {
      return "ਲਾਇਸੰਸ ਦੇਖੋ";
    }
  };
  (generated_material_localizations.MaterialLocalizationPa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "pa";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationPa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationPa.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationPa);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationPa, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationPa.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationPa, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationPl = class MaterialLocalizationPl extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName – informacje";
    }
    get alertDialogLabel() {
      return "Alert";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Wstecz";
    }
    get cancelButtonLabel() {
      return "ANULUJ";
    }
    get closeButtonLabel() {
      return "ZAMKNIJ";
    }
    get closeButtonTooltip() {
      return "Zamknij";
    }
    get collapsedIconTapHint() {
      return "Rozwiń";
    }
    get continueButtonLabel() {
      return "DALEJ";
    }
    get copyButtonLabel() {
      return "KOPIUJ";
    }
    get cutButtonLabel() {
      return "WYTNIJ";
    }
    get deleteButtonTooltip() {
      return "Usuń";
    }
    get dialogLabel() {
      return "Okno dialogowe";
    }
    get drawerLabel() {
      return "Menu nawigacyjne";
    }
    get expandedIconTapHint() {
      return "Zwiń";
    }
    get hideAccountsLabel() {
      return "Ukryj konta";
    }
    get licensesPageTitle() {
      return "Licencje";
    }
    get modalBarrierDismissLabel() {
      return "Zamknij";
    }
    get nextMonthTooltip() {
      return "Następny miesiąc";
    }
    get nextPageTooltip() {
      return "Następna strona";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Otwórz menu nawigacyjne";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow z $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow z około $rowCount";
    }
    get pasteButtonLabel() {
      return "WKLEJ";
    }
    get popupMenuLabel() {
      return "Menu kontekstowe";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Poprzedni miesiąc";
    }
    get previousPageTooltip() {
      return "Poprzednia strona";
    }
    get refreshIndicatorSemanticLabel() {
      return "Odśwież";
    }
    get remainingTextFieldCharacterCountFew() {
      return "Pozostały $remainingCount znaki";
    }
    get remainingTextFieldCharacterCountMany() {
      return "Pozostało $remainingCount znaków";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Jeszcze 1 znak";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Pozostało $remainingCount znaków";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Przenieś w dół";
    }
    get reorderItemLeft() {
      return "Przenieś w lewo";
    }
    get reorderItemRight() {
      return "Przenieś w prawo";
    }
    get reorderItemToEnd() {
      return "Przenieś na koniec";
    }
    get reorderItemToStart() {
      return "Przenieś na początek";
    }
    get reorderItemUp() {
      return "Przenieś w górę";
    }
    get rowsPerPageTitle() {
      return "Wiersze na stronie:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Szukaj";
    }
    get selectAllButtonLabel() {
      return "ZAZNACZ WSZYSTKO";
    }
    get selectedRowCountTitleFew() {
      return "$selectedRowCount wybrane elementy";
    }
    get selectedRowCountTitleMany() {
      return "$selectedRowCount wybranych elementów";
    }
    get selectedRowCountTitleOne() {
      return "1 wybrany element";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount wybranych elementów";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Pokaż konta";
    }
    get showMenuTooltip() {
      return "Pokaż menu";
    }
    get signedInLabel() {
      return "Zalogowani użytkownicy";
    }
    get tabLabelRaw() {
      return "Karta $tabIndex z $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Wybierz godziny";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Wybierz minuty";
    }
    get viewLicensesButtonLabel() {
      return "WYŚWIETL LICENCJE";
    }
  };
  (generated_material_localizations.MaterialLocalizationPl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "pl";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationPl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationPl.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationPl);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationPl, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationPl.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationPl, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationPs = class MaterialLocalizationPs extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "د $applicationName په اړه";
    }
    get alertDialogLabel() {
      return "خبرتیا";
    }
    get anteMeridiemAbbreviation() {
      return null;
    }
    get backButtonTooltip() {
      return "شاته";
    }
    get cancelButtonLabel() {
      return "لغوه کول";
    }
    get closeButtonLabel() {
      return "تړل";
    }
    get closeButtonTooltip() {
      return "بنده";
    }
    get collapsedIconTapHint() {
      return "TBD";
    }
    get continueButtonLabel() {
      return "منځپانګې";
    }
    get copyButtonLabel() {
      return "کاپی";
    }
    get cutButtonLabel() {
      return "کم کړئ";
    }
    get deleteButtonTooltip() {
      return "";
    }
    get dialogLabel() {
      return "خبرې اترې";
    }
    get drawerLabel() {
      return "د نیویگیشن مینو";
    }
    get expandedIconTapHint() {
      return "TBD";
    }
    get hideAccountsLabel() {
      return "حسابونه پټ کړئ";
    }
    get licensesPageTitle() {
      return "جوازونه";
    }
    get modalBarrierDismissLabel() {
      return "رد کړه";
    }
    get nextMonthTooltip() {
      return "بله میاشت";
    }
    get nextPageTooltip() {
      return "بله پاڼه";
    }
    get okButtonLabel() {
      return "سمه ده";
    }
    get openAppDrawerTooltip() {
      return "د پرانیستی نیینګ مینو";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow د $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow څخه $rowCount د";
    }
    get pasteButtonLabel() {
      return "پیټ کړئ";
    }
    get popupMenuLabel() {
      return "د پاپ اپ مینو";
    }
    get postMeridiemAbbreviation() {
      return null;
    }
    get previousMonthTooltip() {
      return "تیره میاشت";
    }
    get previousPageTooltip() {
      return "مخکینی مخ";
    }
    get refreshIndicatorSemanticLabel() {
      return "TBD";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "TBD";
    }
    get remainingTextFieldCharacterCountOther() {
      return "TBD";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "TBD";
    }
    get reorderItemLeft() {
      return "TBD";
    }
    get reorderItemRight() {
      return "TBD";
    }
    get reorderItemToEnd() {
      return "TBD";
    }
    get reorderItemToStart() {
      return "TBD";
    }
    get reorderItemUp() {
      return "TBD";
    }
    get rowsPerPageTitle() {
      return "د هرې پاڼې پاڼې:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.tall;
    }
    get searchFieldLabel() {
      return "لټون";
    }
    get selectAllButtonLabel() {
      return "غوره کړئ";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return null;
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount توکي غوره شوي";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "حسابونه ښکاره کړئ";
    }
    get showMenuTooltip() {
      return "غورنۍ ښودل";
    }
    get signedInLabel() {
      return "ننوتل";
    }
    get tabLabelRaw() {
      return "$tabIndex د $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "وختونه وټاکئ";
    }
    get timePickerMinuteModeAnnouncement() {
      return "منې غوره کړئ";
    }
    get viewLicensesButtonLabel() {
      return "لیدلس وګورئ";
    }
  };
  (generated_material_localizations.MaterialLocalizationPs.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ps";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationPs.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationPs.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationPs);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationPs, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationPs.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationPs, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationPt = class MaterialLocalizationPt extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Sobre o app $applicationName";
    }
    get alertDialogLabel() {
      return "Alerta";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Voltar";
    }
    get cancelButtonLabel() {
      return "CANCELAR";
    }
    get closeButtonLabel() {
      return "FECHAR";
    }
    get closeButtonTooltip() {
      return "Fechar";
    }
    get collapsedIconTapHint() {
      return "Expandir";
    }
    get continueButtonLabel() {
      return "CONTINUAR";
    }
    get copyButtonLabel() {
      return "COPIAR";
    }
    get cutButtonLabel() {
      return "RECORTAR";
    }
    get deleteButtonTooltip() {
      return "Excluir";
    }
    get dialogLabel() {
      return "Caixa de diálogo";
    }
    get drawerLabel() {
      return "Menu de navegação";
    }
    get expandedIconTapHint() {
      return "Recolher";
    }
    get hideAccountsLabel() {
      return "Ocultar contas";
    }
    get licensesPageTitle() {
      return "Licenças";
    }
    get modalBarrierDismissLabel() {
      return "Dispensar";
    }
    get nextMonthTooltip() {
      return "Próximo mês";
    }
    get nextPageTooltip() {
      return "Próxima página";
    }
    get okButtonLabel() {
      return "Ok";
    }
    get openAppDrawerTooltip() {
      return "Abrir menu de navegação";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow – $lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow – $lastRow de aproximadamente $rowCount";
    }
    get pasteButtonLabel() {
      return "COLAR";
    }
    get popupMenuLabel() {
      return "Menu pop-up";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Mês anterior";
    }
    get previousPageTooltip() {
      return "Página anterior";
    }
    get refreshIndicatorSemanticLabel() {
      return "Atualizar";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 caractere restante";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount caracteres restantes";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Mover para baixo";
    }
    get reorderItemLeft() {
      return "Mover para a esquerda";
    }
    get reorderItemRight() {
      return "Mover para a direita";
    }
    get reorderItemToEnd() {
      return "Mover para o final";
    }
    get reorderItemToStart() {
      return "Mover para o início";
    }
    get reorderItemUp() {
      return "Mover para cima";
    }
    get rowsPerPageTitle() {
      return "Linhas por página:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Pesquisa";
    }
    get selectAllButtonLabel() {
      return "SELECIONAR TUDO";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 item selecionado";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount itens selecionados";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Mostrar contas";
    }
    get showMenuTooltip() {
      return "Mostrar menu";
    }
    get signedInLabel() {
      return "Conectado a";
    }
    get tabLabelRaw() {
      return "Guia $tabIndex de $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Selecione as horas";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Selecione os minutos";
    }
    get viewLicensesButtonLabel() {
      return "VER LICENÇAS";
    }
  };
  (generated_material_localizations.MaterialLocalizationPt.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "pt";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationPt.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationPt.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationPt);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationPt, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationPt.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationPt, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationPtPt = class MaterialLocalizationPtPt extends generated_material_localizations.MaterialLocalizationPt {
    get tabLabelRaw() {
      return "Separador $tabIndex de $tabCount";
    }
    get signedInLabel() {
      return "Com sessão iniciada";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Selecionar minutos";
    }
    get timePickerHourModeAnnouncement() {
      return "Selecionar horas";
    }
    get deleteButtonTooltip() {
      return "Eliminar";
    }
    get nextMonthTooltip() {
      return "Mês seguinte";
    }
    get nextPageTooltip() {
      return "Página seguinte";
    }
    get aboutListTileTitleRaw() {
      return "Acerca de $applicationName";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow a $lastRow de $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow a $lastRow de cerca de $rowCount";
    }
    get cutButtonLabel() {
      return "CORTAR";
    }
    get okButtonLabel() {
      return "OK";
    }
    get modalBarrierDismissLabel() {
      return "Ignorar";
    }
    get searchFieldLabel() {
      return "Pesquisar";
    }
    get reorderItemToEnd() {
      return "Mover para o fim";
    }
    get expandedIconTapHint() {
      return "Reduzir";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Resta 1 caráter";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Restam $remainingCount carateres";
    }
  };
  (generated_material_localizations.MaterialLocalizationPtPt.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "pt_PT";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationPtPt.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationPtPt.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationPtPt);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationPtPt, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationRo = class MaterialLocalizationRo extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Despre $applicationName";
    }
    get alertDialogLabel() {
      return "Alertă";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get backButtonTooltip() {
      return "Înapoi";
    }
    get cancelButtonLabel() {
      return "ANULAȚI";
    }
    get closeButtonLabel() {
      return "ÎNCHIDEȚI";
    }
    get closeButtonTooltip() {
      return "Închideți";
    }
    get collapsedIconTapHint() {
      return "Extindeți";
    }
    get continueButtonLabel() {
      return "CONTINUAȚI";
    }
    get copyButtonLabel() {
      return "COPIAȚI";
    }
    get cutButtonLabel() {
      return "DECUPAȚI";
    }
    get deleteButtonTooltip() {
      return "Ștergeți";
    }
    get dialogLabel() {
      return "Casetă de dialog";
    }
    get drawerLabel() {
      return "Meniu de navigare";
    }
    get expandedIconTapHint() {
      return "Restrângeți";
    }
    get hideAccountsLabel() {
      return "Ascundeți conturile";
    }
    get licensesPageTitle() {
      return "Licențe";
    }
    get modalBarrierDismissLabel() {
      return "Închideți";
    }
    get nextMonthTooltip() {
      return "Luna viitoare";
    }
    get nextPageTooltip() {
      return "Pagina următoare";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Deschideți meniul de navigare";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow din $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow din aproximativ $rowCount";
    }
    get pasteButtonLabel() {
      return "INSERAȚI";
    }
    get popupMenuLabel() {
      return "Meniu pop-up";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get previousMonthTooltip() {
      return "Luna trecută";
    }
    get previousPageTooltip() {
      return "Pagina anterioară";
    }
    get refreshIndicatorSemanticLabel() {
      return "Actualizați";
    }
    get remainingTextFieldCharacterCountFew() {
      return "$remainingCount caractere rămase";
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "un caracter rămas";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount de caractere rămase";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Mutați în jos";
    }
    get reorderItemLeft() {
      return "Mutați la stânga";
    }
    get reorderItemRight() {
      return "Mutați la dreapta";
    }
    get reorderItemToEnd() {
      return "Mutați la sfârșit";
    }
    get reorderItemToStart() {
      return "Mutați la început";
    }
    get reorderItemUp() {
      return "Mutați în sus";
    }
    get rowsPerPageTitle() {
      return "Rânduri pe pagină:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Căutați";
    }
    get selectAllButtonLabel() {
      return "SELECTAȚI TOATE";
    }
    get selectedRowCountTitleFew() {
      return "$selectedRowCount articole selectate";
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "Un articol selectat";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount de articole selectate";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return "Nu există elemente selectate";
    }
    get showAccountsLabel() {
      return "Afișați conturile";
    }
    get showMenuTooltip() {
      return "Afișați meniul";
    }
    get signedInLabel() {
      return "V-ați conectat";
    }
    get tabLabelRaw() {
      return "Fila $tabIndex din $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Selectați orele";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Selectați minutele";
    }
    get viewLicensesButtonLabel() {
      return "VEDEȚI LICENȚELE";
    }
  };
  (generated_material_localizations.MaterialLocalizationRo.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ro";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationRo.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationRo.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationRo);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationRo, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationRo.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationRo, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationRu = class MaterialLocalizationRu extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName: сведения";
    }
    get alertDialogLabel() {
      return "Оповещение";
    }
    get anteMeridiemAbbreviation() {
      return "АМ";
    }
    get backButtonTooltip() {
      return "Назад";
    }
    get cancelButtonLabel() {
      return "ОТМЕНА";
    }
    get closeButtonLabel() {
      return "ЗАКРЫТЬ";
    }
    get closeButtonTooltip() {
      return "Закрыть";
    }
    get collapsedIconTapHint() {
      return "Развернуть";
    }
    get continueButtonLabel() {
      return "ПРОДОЛЖИТЬ";
    }
    get copyButtonLabel() {
      return "КОПИРОВАТЬ";
    }
    get cutButtonLabel() {
      return "ВЫРЕЗАТЬ";
    }
    get deleteButtonTooltip() {
      return "Удалить";
    }
    get dialogLabel() {
      return "Диалоговое окно";
    }
    get drawerLabel() {
      return "Меню навигации";
    }
    get expandedIconTapHint() {
      return "Свернуть";
    }
    get hideAccountsLabel() {
      return "Скрыть аккаунты";
    }
    get licensesPageTitle() {
      return "Лицензии";
    }
    get modalBarrierDismissLabel() {
      return "Закрыть";
    }
    get nextMonthTooltip() {
      return "Следующий месяц";
    }
    get nextPageTooltip() {
      return "Следующая страница";
    }
    get okButtonLabel() {
      return "ОК";
    }
    get openAppDrawerTooltip() {
      return "Открыть меню навигации";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow из $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow из примерно $rowCount";
    }
    get pasteButtonLabel() {
      return "ВСТАВИТЬ";
    }
    get popupMenuLabel() {
      return "Всплывающее меню";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Предыдущий месяц";
    }
    get previousPageTooltip() {
      return "Предыдущая страница";
    }
    get refreshIndicatorSemanticLabel() {
      return "Обновление";
    }
    get remainingTextFieldCharacterCountFew() {
      return "Осталось $remainingCount символа";
    }
    get remainingTextFieldCharacterCountMany() {
      return "Осталось $remainingCount символов";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Остался 1 символ";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Осталось $remainingCount символа";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Переместить вниз";
    }
    get reorderItemLeft() {
      return "Переместить влево";
    }
    get reorderItemRight() {
      return "Переместить вправо";
    }
    get reorderItemToEnd() {
      return "Переместить в конец";
    }
    get reorderItemToStart() {
      return "Переместить в начало";
    }
    get reorderItemUp() {
      return "Переместить вверх";
    }
    get rowsPerPageTitle() {
      return "Строк на странице:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Поиск";
    }
    get selectAllButtonLabel() {
      return "ВЫБРАТЬ ВСЕ";
    }
    get selectedRowCountTitleFew() {
      return "Выбрано $selectedRowCount объекта";
    }
    get selectedRowCountTitleMany() {
      return "Выбрано $selectedRowCount объектов";
    }
    get selectedRowCountTitleOne() {
      return "Выбран 1 объект";
    }
    get selectedRowCountTitleOther() {
      return "Выбрано $selectedRowCount объекта";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return "Строки не выбраны";
    }
    get showAccountsLabel() {
      return "Показать аккаунты";
    }
    get showMenuTooltip() {
      return "Показать меню";
    }
    get signedInLabel() {
      return "Вход выполнен";
    }
    get tabLabelRaw() {
      return "Вкладка $tabIndex из $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Выберите часы";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Выберите минуты";
    }
    get viewLicensesButtonLabel() {
      return "ЛИЦЕНЗИИ";
    }
  };
  (generated_material_localizations.MaterialLocalizationRu.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ru";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationRu.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationRu.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationRu);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationRu, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationRu.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationRu, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationSi = class MaterialLocalizationSi extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName ගැන";
    }
    get alertDialogLabel() {
      return "ඇඟවීම";
    }
    get anteMeridiemAbbreviation() {
      return "පෙ.ව.";
    }
    get backButtonTooltip() {
      return "ආපසු";
    }
    get cancelButtonLabel() {
      return "අවලංගු කරන්න";
    }
    get closeButtonLabel() {
      return "වසන්න";
    }
    get closeButtonTooltip() {
      return "වසන්න";
    }
    get collapsedIconTapHint() {
      return "දිග හරින්න";
    }
    get continueButtonLabel() {
      return "ඉදිරියට";
    }
    get copyButtonLabel() {
      return "පිටපත් කරන්න";
    }
    get cutButtonLabel() {
      return "කපන්න";
    }
    get deleteButtonTooltip() {
      return "මකන්න";
    }
    get dialogLabel() {
      return "සංවාදය";
    }
    get drawerLabel() {
      return "සංචාලන මෙනුව";
    }
    get expandedIconTapHint() {
      return "හකුළන්න";
    }
    get hideAccountsLabel() {
      return "ගිණුම් සඟවන්න";
    }
    get licensesPageTitle() {
      return "බලපත්‍ර";
    }
    get modalBarrierDismissLabel() {
      return "ඉවත ලන්න";
    }
    get nextMonthTooltip() {
      return "ඊළඟ මාසය";
    }
    get nextPageTooltip() {
      return "ඊළඟ පිටුව";
    }
    get okButtonLabel() {
      return "හරි";
    }
    get openAppDrawerTooltip() {
      return "සංචාලන මෙනුව විවෘත කරන්න";
    }
    get pageRowsInfoTitleRaw() {
      return "$rowCountන් $firstRow–$lastRow";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$rowCountකින් පමණ $firstRow–$lastRow";
    }
    get pasteButtonLabel() {
      return "අලවන්න";
    }
    get popupMenuLabel() {
      return "උත්පතන මෙනුව";
    }
    get postMeridiemAbbreviation() {
      return "ප.ව.";
    }
    get previousMonthTooltip() {
      return "පෙර මාසය";
    }
    get previousPageTooltip() {
      return "පෙර පිටුව";
    }
    get refreshIndicatorSemanticLabel() {
      return "නැවුම් කරන්න";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "අනුලකුණු 1ක් ඉතිරිය";
    }
    get remainingTextFieldCharacterCountOther() {
      return "අනුලකුණු $remainingCountක් ඉතිරිය";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "පහළට ගෙන යන්න";
    }
    get reorderItemLeft() {
      return "වමට ගෙන යන්න";
    }
    get reorderItemRight() {
      return "දකුණට ගෙන යන්න";
    }
    get reorderItemToEnd() {
      return "අවසානයට යන්න";
    }
    get reorderItemToStart() {
      return "ආරම්භය වෙත යන්න";
    }
    get reorderItemUp() {
      return "ඉහළට ගෙන යන්න";
    }
    get rowsPerPageTitle() {
      return "පිටුවකට පේළි:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "සෙවීම";
    }
    get selectAllButtonLabel() {
      return "සියල්ල තෝරන්න";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "අයිතම 1ක් තෝරන ලදී";
    }
    get selectedRowCountTitleOther() {
      return "අයිතම $selectedRowCountක් තෝරන ලදී";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "ගිණුම් පෙන්වන්න";
    }
    get showMenuTooltip() {
      return "මෙනුව පෙන්වන්න";
    }
    get signedInLabel() {
      return "පුරන ලදී";
    }
    get tabLabelRaw() {
      return "ටැබ $tabIndexකින් $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "පැය ගණන තෝරන්න";
    }
    get timePickerMinuteModeAnnouncement() {
      return "මිනිත්තු ගණන තෝරන්න";
    }
    get viewLicensesButtonLabel() {
      return "බලපත්‍ර බලන්න";
    }
  };
  (generated_material_localizations.MaterialLocalizationSi.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "si";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationSi.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationSi.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationSi);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationSi, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationSi.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationSi, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationSk = class MaterialLocalizationSk extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName – informácie";
    }
    get alertDialogLabel() {
      return "Upozornenie";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Späť";
    }
    get cancelButtonLabel() {
      return "ZRUŠIŤ";
    }
    get closeButtonLabel() {
      return "ZAVRIEŤ";
    }
    get closeButtonTooltip() {
      return "Zavrieť";
    }
    get collapsedIconTapHint() {
      return "Rozbaliť";
    }
    get continueButtonLabel() {
      return "POKRAČOVAŤ";
    }
    get copyButtonLabel() {
      return "KOPÍROVAŤ";
    }
    get cutButtonLabel() {
      return "VYSTRIHNÚŤ";
    }
    get deleteButtonTooltip() {
      return "Odstrániť";
    }
    get dialogLabel() {
      return "Dialógové okno";
    }
    get drawerLabel() {
      return "Navigačná ponuka";
    }
    get expandedIconTapHint() {
      return "Zbaliť";
    }
    get hideAccountsLabel() {
      return "Skryť účty";
    }
    get licensesPageTitle() {
      return "Licencie";
    }
    get modalBarrierDismissLabel() {
      return "Odmietnuť";
    }
    get nextMonthTooltip() {
      return "Budúci mesiac";
    }
    get nextPageTooltip() {
      return "Ďalšia strana";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Otvoriť navigačnú ponuku";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow – $lastRow z $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow – $lastRow z približne $rowCount";
    }
    get pasteButtonLabel() {
      return "PRILEPIŤ";
    }
    get popupMenuLabel() {
      return "Kontextová ponuka";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Predošlý mesiac";
    }
    get previousPageTooltip() {
      return "Predchádzajúca stránka";
    }
    get refreshIndicatorSemanticLabel() {
      return "Obnoviť";
    }
    get remainingTextFieldCharacterCountFew() {
      return "Zostávajú $remainingCount znaky";
    }
    get remainingTextFieldCharacterCountMany() {
      return "$remainingCount characters remaining";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Zostáva 1 znak";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Zostáva $remainingCount znakov";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Presunúť nadol";
    }
    get reorderItemLeft() {
      return "Presunúť doľava";
    }
    get reorderItemRight() {
      return "Presunúť doprava";
    }
    get reorderItemToEnd() {
      return "Presunúť na koniec";
    }
    get reorderItemToStart() {
      return "Presunúť na začiatok";
    }
    get reorderItemUp() {
      return "Presunúť nahor";
    }
    get rowsPerPageTitle() {
      return "Počet riadkov na stránku:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Hľadať";
    }
    get selectAllButtonLabel() {
      return "VYBRAŤ VŠETKO";
    }
    get selectedRowCountTitleFew() {
      return "$selectedRowCount vybraté položky";
    }
    get selectedRowCountTitleMany() {
      return "$selectedRowCount items selected";
    }
    get selectedRowCountTitleOne() {
      return "1 vybratá položka";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount vybratých položiek";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Zobraziť účty";
    }
    get showMenuTooltip() {
      return "Zobraziť ponuku";
    }
    get signedInLabel() {
      return "Prihlásili ste sa";
    }
    get tabLabelRaw() {
      return "Karta $tabIndex z $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Vybrať hodiny";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Vybrať minúty";
    }
    get viewLicensesButtonLabel() {
      return "ZOBRAZIŤ LICENCIE";
    }
  };
  (generated_material_localizations.MaterialLocalizationSk.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sk";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationSk.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationSk.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationSk);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationSk, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationSk.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationSk, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationSl = class MaterialLocalizationSl extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "O aplikaciji $applicationName";
    }
    get alertDialogLabel() {
      return "Opozorilo";
    }
    get anteMeridiemAbbreviation() {
      return "DOP.";
    }
    get backButtonTooltip() {
      return "Nazaj";
    }
    get cancelButtonLabel() {
      return "PREKLIČI";
    }
    get closeButtonLabel() {
      return "ZAPRI";
    }
    get closeButtonTooltip() {
      return "Zapiranje";
    }
    get collapsedIconTapHint() {
      return "Razširiti";
    }
    get continueButtonLabel() {
      return "NAPREJ";
    }
    get copyButtonLabel() {
      return "KOPIRAJ";
    }
    get cutButtonLabel() {
      return "IZREŽI";
    }
    get deleteButtonTooltip() {
      return "Brisanje";
    }
    get dialogLabel() {
      return "Pogovorno okno";
    }
    get drawerLabel() {
      return "Meni za krmarjenje";
    }
    get expandedIconTapHint() {
      return "Strniti";
    }
    get hideAccountsLabel() {
      return "Skrivanje računov";
    }
    get licensesPageTitle() {
      return "Licence";
    }
    get modalBarrierDismissLabel() {
      return "Opusti";
    }
    get nextMonthTooltip() {
      return "Naslednji mesec";
    }
    get nextPageTooltip() {
      return "Naslednja stran";
    }
    get okButtonLabel() {
      return "V REDU";
    }
    get openAppDrawerTooltip() {
      return "Odpiranje menija za krmarjenje";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow od $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow od približno $rowCount";
    }
    get pasteButtonLabel() {
      return "PRILEPI";
    }
    get popupMenuLabel() {
      return "Pojavni meni";
    }
    get postMeridiemAbbreviation() {
      return "POP.";
    }
    get previousMonthTooltip() {
      return "Prejšnji mesec";
    }
    get previousPageTooltip() {
      return "Prejšnja stran";
    }
    get refreshIndicatorSemanticLabel() {
      return "Osveži";
    }
    get remainingTextFieldCharacterCountFew() {
      return "Še $remainingCount znaki";
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "Še 1 znak";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Še $remainingCount znakov";
    }
    get remainingTextFieldCharacterCountTwo() {
      return "Še $remainingCount znaka";
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Premakni navzdol";
    }
    get reorderItemLeft() {
      return "Premakni levo";
    }
    get reorderItemRight() {
      return "Premakni desno";
    }
    get reorderItemToEnd() {
      return "Premakni na konec";
    }
    get reorderItemToStart() {
      return "Premakni na začetek";
    }
    get reorderItemUp() {
      return "Premakni navzgor";
    }
    get rowsPerPageTitle() {
      return "Vrstice na stran:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Iskanje";
    }
    get selectAllButtonLabel() {
      return "IZBERI VSE";
    }
    get selectedRowCountTitleFew() {
      return "Izbrani so $selectedRowCount elementi";
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "Izbran je 1 element";
    }
    get selectedRowCountTitleOther() {
      return "Izbranih je $selectedRowCount elementov";
    }
    get selectedRowCountTitleTwo() {
      return "Izbrana sta $selectedRowCount elementa";
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Prikaz računov";
    }
    get showMenuTooltip() {
      return "Prikaz menija";
    }
    get signedInLabel() {
      return "Prijavljen";
    }
    get tabLabelRaw() {
      return "Zavihek $tabIndex od $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Izberite ure";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Izberite minute";
    }
    get viewLicensesButtonLabel() {
      return "PRIKAŽI LICENCE";
    }
  };
  (generated_material_localizations.MaterialLocalizationSl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sl";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationSl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationSl.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationSl);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationSl, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationSl.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationSl, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationSq = class MaterialLocalizationSq extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Rreth $applicationName";
    }
    get alertDialogLabel() {
      return "Sinjalizim";
    }
    get anteMeridiemAbbreviation() {
      return "paradite";
    }
    get backButtonTooltip() {
      return "Prapa";
    }
    get cancelButtonLabel() {
      return "ANULO";
    }
    get closeButtonLabel() {
      return "MBYLL";
    }
    get closeButtonTooltip() {
      return "Mbyll";
    }
    get collapsedIconTapHint() {
      return "Zgjero";
    }
    get continueButtonLabel() {
      return "VAZHDO";
    }
    get copyButtonLabel() {
      return "KOPJO";
    }
    get cutButtonLabel() {
      return "PRIT";
    }
    get deleteButtonTooltip() {
      return "Fshi";
    }
    get dialogLabel() {
      return "Dialogu";
    }
    get drawerLabel() {
      return "Menyja e navigimit";
    }
    get expandedIconTapHint() {
      return "Palos";
    }
    get hideAccountsLabel() {
      return "Fshih llogaritë";
    }
    get licensesPageTitle() {
      return "Licencat";
    }
    get modalBarrierDismissLabel() {
      return "Hiq";
    }
    get nextMonthTooltip() {
      return "Muaji i ardhshëm";
    }
    get nextPageTooltip() {
      return "Faqja tjetër";
    }
    get okButtonLabel() {
      return "Në rregull";
    }
    get openAppDrawerTooltip() {
      return "Hap menynë e navigimit";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow nga $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow nga rreth $rowCount";
    }
    get pasteButtonLabel() {
      return "NGJIT";
    }
    get popupMenuLabel() {
      return "Menyja kërcyese";
    }
    get postMeridiemAbbreviation() {
      return "pasdite";
    }
    get previousMonthTooltip() {
      return "Muaji i mëparshëm";
    }
    get previousPageTooltip() {
      return "Faqja e mëparshme";
    }
    get refreshIndicatorSemanticLabel() {
      return "Rifresko";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 karakter i mbetur";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount karaktere të mbetura";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "Lëvize poshtë";
    }
    get reorderItemLeft() {
      return "Lëvize majtas";
    }
    get reorderItemRight() {
      return "Lëvize djathtas";
    }
    get reorderItemToEnd() {
      return "Lëvize në fund";
    }
    get reorderItemToStart() {
      return "Lëvize në fillim";
    }
    get reorderItemUp() {
      return "Lëvize lart";
    }
    get rowsPerPageTitle() {
      return "Rreshtat për faqe:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Kërko";
    }
    get selectAllButtonLabel() {
      return "ZGJIDHI TË GJITHA";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "U zgjodh 1 artikull";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount artikuj u zgjodhën";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Shfaq llogaritë";
    }
    get showMenuTooltip() {
      return "Shfaq menynë";
    }
    get signedInLabel() {
      return "Je identifikuar";
    }
    get tabLabelRaw() {
      return "Skeda $tabIndex nga $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Zgjidh orët";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Zgjidh minutat";
    }
    get viewLicensesButtonLabel() {
      return "SHIKO LICENCAT";
    }
  };
  (generated_material_localizations.MaterialLocalizationSq.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sq";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationSq.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationSq.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationSq);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationSq, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationSq.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationSq, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationSr = class MaterialLocalizationSr extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "О апликацији $applicationName";
    }
    get alertDialogLabel() {
      return "Обавештење";
    }
    get anteMeridiemAbbreviation() {
      return "пре подне";
    }
    get backButtonTooltip() {
      return "Назад";
    }
    get cancelButtonLabel() {
      return "ОТКАЖИ";
    }
    get closeButtonLabel() {
      return "ЗАТВОРИ";
    }
    get closeButtonTooltip() {
      return "Затворите";
    }
    get collapsedIconTapHint() {
      return "Прошири";
    }
    get continueButtonLabel() {
      return "НАСТАВИ";
    }
    get copyButtonLabel() {
      return "КОПИРАЈ";
    }
    get cutButtonLabel() {
      return "ИСЕЦИ";
    }
    get deleteButtonTooltip() {
      return "Избришите";
    }
    get dialogLabel() {
      return "Дијалог";
    }
    get drawerLabel() {
      return "Мени за навигацију";
    }
    get expandedIconTapHint() {
      return "Скупи";
    }
    get hideAccountsLabel() {
      return "Сакриј налоге";
    }
    get licensesPageTitle() {
      return "Лиценце";
    }
    get modalBarrierDismissLabel() {
      return "Одбаци";
    }
    get nextMonthTooltip() {
      return "Следећи месец";
    }
    get nextPageTooltip() {
      return "Следећа страница";
    }
    get okButtonLabel() {
      return "Потврди";
    }
    get openAppDrawerTooltip() {
      return "Отворите мени за навигацију";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow – $lastRow oд $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow – $lastRow oд приближно $rowCount";
    }
    get pasteButtonLabel() {
      return "НАЛЕПИ";
    }
    get popupMenuLabel() {
      return "Искачући мени";
    }
    get postMeridiemAbbreviation() {
      return "по подне";
    }
    get previousMonthTooltip() {
      return "Претходни месец";
    }
    get previousPageTooltip() {
      return "Претходна страница";
    }
    get refreshIndicatorSemanticLabel() {
      return "Освежи";
    }
    get remainingTextFieldCharacterCountFew() {
      return "Преостала су $remainingCount знака";
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "Преостао је 1 знак";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Преостало је $remainingCount знакова";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Померите надоле";
    }
    get reorderItemLeft() {
      return "Померите улево";
    }
    get reorderItemRight() {
      return "Померите удесно";
    }
    get reorderItemToEnd() {
      return "Померите на крај";
    }
    get reorderItemToStart() {
      return "Померите на почетак";
    }
    get reorderItemUp() {
      return "Померите нагоре";
    }
    get rowsPerPageTitle() {
      return "Редова по страници:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Претражите";
    }
    get selectAllButtonLabel() {
      return "ИЗАБЕРИ СВЕ";
    }
    get selectedRowCountTitleFew() {
      return "Изабране су $selectedRowCount ставке";
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "Изабрана је 1 ставка";
    }
    get selectedRowCountTitleOther() {
      return "Изабрано је $selectedRowCount ставки";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Прикажи налоге";
    }
    get showMenuTooltip() {
      return "Прикажи мени";
    }
    get signedInLabel() {
      return "Пријављени сте";
    }
    get tabLabelRaw() {
      return "$tabIndex. картица од $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Изаберите сате";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Изаберите минуте";
    }
    get viewLicensesButtonLabel() {
      return "ПРИКАЖИ ЛИЦЕНЦЕ";
    }
  };
  (generated_material_localizations.MaterialLocalizationSr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sr";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationSr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationSr.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationSr);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationSr, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationSr.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationSr, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationSrCyrl = class MaterialLocalizationSrCyrl extends generated_material_localizations.MaterialLocalizationSr {};
  (generated_material_localizations.MaterialLocalizationSrCyrl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sr_Cyrl";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationSrCyrl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationSrCyrl.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationSrCyrl);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationSrCyrl, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationSrLatn = class MaterialLocalizationSrLatn extends generated_material_localizations.MaterialLocalizationSr {
    get remainingTextFieldCharacterCountFew() {
      return "Preostala su $remainingCount znaka";
    }
    get selectedRowCountTitleFew() {
      return "Izabrane su $selectedRowCount stavke";
    }
    get openAppDrawerTooltip() {
      return "Otvorite meni za navigaciju";
    }
    get backButtonTooltip() {
      return "Nazad";
    }
    get closeButtonTooltip() {
      return "Zatvorite";
    }
    get deleteButtonTooltip() {
      return "Izbrišite";
    }
    get nextMonthTooltip() {
      return "Sledeći mesec";
    }
    get previousMonthTooltip() {
      return "Prethodni mesec";
    }
    get nextPageTooltip() {
      return "Sledeća stranica";
    }
    get previousPageTooltip() {
      return "Prethodna stranica";
    }
    get showMenuTooltip() {
      return "Prikaži meni";
    }
    get aboutListTileTitleRaw() {
      return "O aplikaciji $applicationName";
    }
    get licensesPageTitle() {
      return "Licence";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow – $lastRow od $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow – $lastRow od približno $rowCount";
    }
    get rowsPerPageTitle() {
      return "Redova po stranici:";
    }
    get tabLabelRaw() {
      return "$tabIndex. kartica od $tabCount";
    }
    get selectedRowCountTitleOne() {
      return "Izabrana je 1 stavka";
    }
    get selectedRowCountTitleOther() {
      return "Izabrano je $selectedRowCount stavki";
    }
    get cancelButtonLabel() {
      return "OTKAŽI";
    }
    get closeButtonLabel() {
      return "ZATVORI";
    }
    get continueButtonLabel() {
      return "NASTAVI";
    }
    get copyButtonLabel() {
      return "KOPIRAJ";
    }
    get cutButtonLabel() {
      return "ISECI";
    }
    get okButtonLabel() {
      return "Potvrdi";
    }
    get pasteButtonLabel() {
      return "NALEPI";
    }
    get selectAllButtonLabel() {
      return "IZABERI SVE";
    }
    get viewLicensesButtonLabel() {
      return "PRIKAŽI LICENCE";
    }
    get anteMeridiemAbbreviation() {
      return "pre podne";
    }
    get postMeridiemAbbreviation() {
      return "po podne";
    }
    get timePickerHourModeAnnouncement() {
      return "Izaberite sate";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Izaberite minute";
    }
    get modalBarrierDismissLabel() {
      return "Odbaci";
    }
    get signedInLabel() {
      return "Prijavljeni ste";
    }
    get hideAccountsLabel() {
      return "Sakrij naloge";
    }
    get showAccountsLabel() {
      return "Prikaži naloge";
    }
    get drawerLabel() {
      return "Meni za navigaciju";
    }
    get popupMenuLabel() {
      return "Iskačući meni";
    }
    get dialogLabel() {
      return "Dijalog";
    }
    get alertDialogLabel() {
      return "Obaveštenje";
    }
    get searchFieldLabel() {
      return "Pretražite";
    }
    get reorderItemToStart() {
      return "Pomerite na početak";
    }
    get reorderItemToEnd() {
      return "Pomerite na kraj";
    }
    get reorderItemUp() {
      return "Pomerite nagore";
    }
    get reorderItemDown() {
      return "Pomerite nadole";
    }
    get reorderItemLeft() {
      return "Pomerite ulevo";
    }
    get reorderItemRight() {
      return "Pomerite udesno";
    }
    get expandedIconTapHint() {
      return "Skupi";
    }
    get collapsedIconTapHint() {
      return "Proširi";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Preostao je 1 znak";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Preostalo je $remainingCount znakova";
    }
    get refreshIndicatorSemanticLabel() {
      return "Osveži";
    }
  };
  (generated_material_localizations.MaterialLocalizationSrLatn.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sr_Latn";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationSrLatn.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationSrLatn.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationSrLatn);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationSrLatn, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationSv = class MaterialLocalizationSv extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Om $applicationName";
    }
    get alertDialogLabel() {
      return "Varning";
    }
    get anteMeridiemAbbreviation() {
      return "FM";
    }
    get backButtonTooltip() {
      return "Tillbaka";
    }
    get cancelButtonLabel() {
      return "AVBRYT";
    }
    get closeButtonLabel() {
      return "STÄNG";
    }
    get closeButtonTooltip() {
      return "Stäng";
    }
    get collapsedIconTapHint() {
      return "Utöka";
    }
    get continueButtonLabel() {
      return "FORTSÄTT";
    }
    get copyButtonLabel() {
      return "KOPIERA";
    }
    get cutButtonLabel() {
      return "KLIPP UT";
    }
    get deleteButtonTooltip() {
      return "Radera";
    }
    get dialogLabel() {
      return "Dialogruta";
    }
    get drawerLabel() {
      return "Navigeringsmeny";
    }
    get expandedIconTapHint() {
      return "Dölj";
    }
    get hideAccountsLabel() {
      return "Dölj konton";
    }
    get licensesPageTitle() {
      return "Licenser";
    }
    get modalBarrierDismissLabel() {
      return "Stäng";
    }
    get nextMonthTooltip() {
      return "Nästa månad";
    }
    get nextPageTooltip() {
      return "Nästa sida";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Öppna navigeringsmenyn";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow av $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow av ungefär $rowCount";
    }
    get pasteButtonLabel() {
      return "KLISTRA IN";
    }
    get popupMenuLabel() {
      return "Popup-meny";
    }
    get postMeridiemAbbreviation() {
      return "EM";
    }
    get previousMonthTooltip() {
      return "Föregående månad";
    }
    get previousPageTooltip() {
      return "Föregående sida";
    }
    get refreshIndicatorSemanticLabel() {
      return "Uppdatera";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 tecken kvar";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount tecken kvar";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Flytta nedåt";
    }
    get reorderItemLeft() {
      return "Flytta åt vänster";
    }
    get reorderItemRight() {
      return "Flytta åt höger";
    }
    get reorderItemToEnd() {
      return "Flytta till slutet";
    }
    get reorderItemToStart() {
      return "Flytta till början";
    }
    get reorderItemUp() {
      return "Flytta uppåt";
    }
    get rowsPerPageTitle() {
      return "Rader per sida:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Sök";
    }
    get selectAllButtonLabel() {
      return "MARKERA ALLA";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 objekt har markerats";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount objekt har markerats";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Visa konton";
    }
    get showMenuTooltip() {
      return "Visa meny";
    }
    get signedInLabel() {
      return "Inloggad";
    }
    get tabLabelRaw() {
      return "Flik $tabIndex av $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Välj timmar";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Välj minuter";
    }
    get viewLicensesButtonLabel() {
      return "VISA LICENSER";
    }
  };
  (generated_material_localizations.MaterialLocalizationSv.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sv";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationSv.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationSv.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationSv);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationSv, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationSv.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationSv, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationSw = class MaterialLocalizationSw extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Kuhusu $applicationName";
    }
    get alertDialogLabel() {
      return "Arifa";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Rudi Nyuma";
    }
    get cancelButtonLabel() {
      return "GHAIRI";
    }
    get closeButtonLabel() {
      return "FUNGA";
    }
    get closeButtonTooltip() {
      return "Funga";
    }
    get collapsedIconTapHint() {
      return "Panua";
    }
    get continueButtonLabel() {
      return "ENDELEA";
    }
    get copyButtonLabel() {
      return "NAKILI";
    }
    get cutButtonLabel() {
      return "KATA";
    }
    get deleteButtonTooltip() {
      return "Futa";
    }
    get dialogLabel() {
      return "Kidirisha";
    }
    get drawerLabel() {
      return "Menyu ya kusogeza";
    }
    get expandedIconTapHint() {
      return "Kunja";
    }
    get hideAccountsLabel() {
      return "Ficha akaunti";
    }
    get licensesPageTitle() {
      return "Leseni";
    }
    get modalBarrierDismissLabel() {
      return "Ondoa";
    }
    get nextMonthTooltip() {
      return "Mwezi ujao";
    }
    get nextPageTooltip() {
      return "Ukurasa unaofuata";
    }
    get okButtonLabel() {
      return "Sawa";
    }
    get openAppDrawerTooltip() {
      return "Fungua menyu ya kusogeza";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow hadi $lastRow kati ya $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow hadi $lastRow kati ya takriban $rowCount";
    }
    get pasteButtonLabel() {
      return "BANDIKA";
    }
    get popupMenuLabel() {
      return "Menyu ibukizi";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Mwezi uliopita";
    }
    get previousPageTooltip() {
      return "Ukurasa uliotangulia";
    }
    get refreshIndicatorSemanticLabel() {
      return "Onyesha upya";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "Imesalia herufi 1";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Zimesalia herufi $remainingCount";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "Hapana herufi zilizo baki";
    }
    get reorderItemDown() {
      return "Sogeza chini";
    }
    get reorderItemLeft() {
      return "Sogeza kushoto";
    }
    get reorderItemRight() {
      return "Sogeza kulia";
    }
    get reorderItemToEnd() {
      return "Sogeza hadi mwisho";
    }
    get reorderItemToStart() {
      return "Sogeza hadi mwanzo";
    }
    get reorderItemUp() {
      return "Sogeza juu";
    }
    get rowsPerPageTitle() {
      return "Safu mlalo kwa kila ukurasa:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Tafuta";
    }
    get selectAllButtonLabel() {
      return "CHAGUA ZOTE";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "Umechagua kipengee 1";
    }
    get selectedRowCountTitleOther() {
      return "Umechagua vipengee $selectedRowCount";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return "Hamna kilicho chaguliwa";
    }
    get showAccountsLabel() {
      return "Onyesha akaunti";
    }
    get showMenuTooltip() {
      return "Onyesha menyu";
    }
    get signedInLabel() {
      return "Umeingia katika akaunti";
    }
    get tabLabelRaw() {
      return "Kichupo cha $tabIndex kati ya $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.h_colon_mm_space_a;
    }
    get timePickerHourModeAnnouncement() {
      return "Chagua saa";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Chagua dakika";
    }
    get viewLicensesButtonLabel() {
      return "ANGALIA LESENI";
    }
  };
  (generated_material_localizations.MaterialLocalizationSw.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sw";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationSw.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationSw.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationSw);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationSw, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationSw.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationSw, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationTa = class MaterialLocalizationTa extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName பற்றி";
    }
    get alertDialogLabel() {
      return "விழிப்பூட்டல்";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "முந்தைய பக்கம்";
    }
    get cancelButtonLabel() {
      return "ரத்துசெய்";
    }
    get closeButtonLabel() {
      return "மூடுக";
    }
    get closeButtonTooltip() {
      return "மூடுக";
    }
    get collapsedIconTapHint() {
      return "விரிக்கும்";
    }
    get continueButtonLabel() {
      return "தொடர்க";
    }
    get copyButtonLabel() {
      return "நகலெடு";
    }
    get cutButtonLabel() {
      return "வெட்டு";
    }
    get deleteButtonTooltip() {
      return "நீக்கு";
    }
    get dialogLabel() {
      return "உரையாடல்";
    }
    get drawerLabel() {
      return "வழிசெலுத்தல் மெனு";
    }
    get expandedIconTapHint() {
      return "சுருக்கும்";
    }
    get hideAccountsLabel() {
      return "கணக்குகளை மறைக்கும்";
    }
    get licensesPageTitle() {
      return "உரிமங்கள்";
    }
    get modalBarrierDismissLabel() {
      return "நிராகரிக்கும்";
    }
    get nextMonthTooltip() {
      return "அடுத்த மாதம்";
    }
    get nextPageTooltip() {
      return "அடுத்த பக்கம்";
    }
    get okButtonLabel() {
      return "சரி";
    }
    get openAppDrawerTooltip() {
      return "வழிசெலுத்தல் மெனுவைத் திற";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow / $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow / $rowCount";
    }
    get pasteButtonLabel() {
      return "ஒட்டு";
    }
    get popupMenuLabel() {
      return "பாப் அப் மெனு";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "முந்தைய மாதம்";
    }
    get previousPageTooltip() {
      return "முந்தைய பக்கம்";
    }
    get refreshIndicatorSemanticLabel() {
      return "ரெஃப்ரெஷ் செய்யும்";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 எழுத்து மீதமுள்ளது";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount எழுத்துகள் மீதமுள்ளன";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "எழுத்துக்கள் எதுவும் இல்லை";
    }
    get reorderItemDown() {
      return "கீழே நகர்த்தவும்";
    }
    get reorderItemLeft() {
      return "இடப்புறம் நகர்த்தவும்";
    }
    get reorderItemRight() {
      return "வலப்புறம் நகர்த்தவும்";
    }
    get reorderItemToEnd() {
      return "இறுதிக்கு நகர்த்தவும்";
    }
    get reorderItemToStart() {
      return "தொடக்கத்திற்கு நகர்த்தவும்";
    }
    get reorderItemUp() {
      return "மேலே நகர்த்தவும்";
    }
    get rowsPerPageTitle() {
      return "ஒரு பக்கத்திற்கான வரிசைகள்:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.dense;
    }
    get searchFieldLabel() {
      return "தேடல்";
    }
    get selectAllButtonLabel() {
      return "அனைத்தையும் தேர்ந்தெடு";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 வரிசை தேர்ந்தெடுக்கப்பட்டது";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount வரிசைகள் தேர்ந்தெடுக்கப்பட்டன";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return "எந்த வரிசையும் தேர்ந்தெடுக்கவில்லை";
    }
    get showAccountsLabel() {
      return "கணக்குகளைக் காட்டும்";
    }
    get showMenuTooltip() {
      return "மெனுவைக் காட்டு";
    }
    get signedInLabel() {
      return "உள்நுழைந்துள்ளீர்கள்";
    }
    get tabLabelRaw() {
      return "தாவல் $tabIndex / $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.a_space_h_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "மணிநேரத்தைத் தேர்ந்தெடுக்கவும்";
    }
    get timePickerMinuteModeAnnouncement() {
      return "நிமிடங்களைத் தேர்ந்தெடுக்கவும்";
    }
    get viewLicensesButtonLabel() {
      return "உரிமங்களைக் காட்டு";
    }
  };
  (generated_material_localizations.MaterialLocalizationTa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ta";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationTa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationTa.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationTa);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationTa, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationTa.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationTa, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationTe = class MaterialLocalizationTe extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName గురించి";
    }
    get alertDialogLabel() {
      return "అలర్ట్";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "వెనుకకు";
    }
    get cancelButtonLabel() {
      return "రద్దు చేయి";
    }
    get closeButtonLabel() {
      return "మూసివేయి";
    }
    get closeButtonTooltip() {
      return "మూసివేయి";
    }
    get collapsedIconTapHint() {
      return "విస్తరించు";
    }
    get continueButtonLabel() {
      return "కొనసాగించు";
    }
    get copyButtonLabel() {
      return "కాపీ చేయి";
    }
    get cutButtonLabel() {
      return "కత్తిరించు";
    }
    get deleteButtonTooltip() {
      return "తొలగించు";
    }
    get dialogLabel() {
      return "డైలాగ్";
    }
    get drawerLabel() {
      return "నావిగేషన్ మెను";
    }
    get expandedIconTapHint() {
      return "కుదించు";
    }
    get hideAccountsLabel() {
      return "ఖాతాలను దాచు";
    }
    get licensesPageTitle() {
      return "లైసెన్స్‌లు";
    }
    get modalBarrierDismissLabel() {
      return "విస్మరించు";
    }
    get nextMonthTooltip() {
      return "తర్వాత నెల";
    }
    get nextPageTooltip() {
      return "తర్వాత పేజీ";
    }
    get okButtonLabel() {
      return "సరే";
    }
    get openAppDrawerTooltip() {
      return "నావిగేషన్ మెనూను తెరువు";
    }
    get pageRowsInfoTitleRaw() {
      return "$rowCountలో $firstRow - $lastRow";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$rowCountలో $firstRow–$lastRow";
    }
    get pasteButtonLabel() {
      return "అతికించు";
    }
    get popupMenuLabel() {
      return "పాప్‌అప్ మెను";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "మునుపటి నెల";
    }
    get previousPageTooltip() {
      return "మునుపటి పేజీ";
    }
    get refreshIndicatorSemanticLabel() {
      return "రిఫ్రెష్ చేయి";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 అక్షరం మిగిలి ఉంది";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount అక్షరాలు మిగిలి ఉన్నాయి";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "కిందికు జరుపు";
    }
    get reorderItemLeft() {
      return "ఎడమవైపుగా జరపండి";
    }
    get reorderItemRight() {
      return "కుడివైపుగా జరపండి";
    }
    get reorderItemToEnd() {
      return "చివరకు తరలించండి";
    }
    get reorderItemToStart() {
      return "ప్రారంభానికి తరలించండి";
    }
    get reorderItemUp() {
      return "పైకి జరపండి";
    }
    get rowsPerPageTitle() {
      return "పేజీకి ఉండే అడ్డు వరుసలు:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.tall;
    }
    get searchFieldLabel() {
      return "వెతుకు";
    }
    get selectAllButtonLabel() {
      return "అన్నింటినీ ఎంచుకోండి";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 అంశం ఎంచుకోబడింది";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount అంశాలు ఎంచుకోబడ్డాయి";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "ఖాతాలను చూపు";
    }
    get showMenuTooltip() {
      return "మెనూను చూపు";
    }
    get signedInLabel() {
      return "సైన్ ఇన్ చేసారు";
    }
    get tabLabelRaw() {
      return "$tabCountలో $tabIndexవ ట్యాబ్";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "గంటలను ఎంచుకోండి";
    }
    get timePickerMinuteModeAnnouncement() {
      return "నిమిషాలను ఎంచుకోండి";
    }
    get viewLicensesButtonLabel() {
      return "లైసెన్స్‌లను చూడండి";
    }
  };
  (generated_material_localizations.MaterialLocalizationTe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "te";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationTe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationTe.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationTe);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationTe, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationTe.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationTe, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationTh = class MaterialLocalizationTh extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "เกี่ยวกับ $applicationName";
    }
    get alertDialogLabel() {
      return "การแจ้งเตือน";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "กลับ";
    }
    get cancelButtonLabel() {
      return "ยกเลิก";
    }
    get closeButtonLabel() {
      return "ปิด";
    }
    get closeButtonTooltip() {
      return "ปิด";
    }
    get collapsedIconTapHint() {
      return "ขยาย";
    }
    get continueButtonLabel() {
      return "ต่อไป";
    }
    get copyButtonLabel() {
      return "คัดลอก";
    }
    get cutButtonLabel() {
      return "ตัด";
    }
    get deleteButtonTooltip() {
      return "ลบ";
    }
    get dialogLabel() {
      return "กล่องโต้ตอบ";
    }
    get drawerLabel() {
      return "เมนูการนำทาง";
    }
    get expandedIconTapHint() {
      return "ยุบ";
    }
    get hideAccountsLabel() {
      return "ซ่อนบัญชี";
    }
    get licensesPageTitle() {
      return "ใบอนุญาต";
    }
    get modalBarrierDismissLabel() {
      return "ปิด";
    }
    get nextMonthTooltip() {
      return "เดือนหน้า";
    }
    get nextPageTooltip() {
      return "หน้าถัดไป";
    }
    get okButtonLabel() {
      return "ตกลง";
    }
    get openAppDrawerTooltip() {
      return "เปิดเมนูการนำทาง";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow-$lastRow จาก $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow จากประมาณ $rowCount";
    }
    get pasteButtonLabel() {
      return "วาง";
    }
    get popupMenuLabel() {
      return "เมนูป๊อปอัป";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "เดือนที่แล้ว";
    }
    get previousPageTooltip() {
      return "หน้าก่อน";
    }
    get refreshIndicatorSemanticLabel() {
      return "รีเฟรช";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "เหลือ 1 อักขระ";
    }
    get remainingTextFieldCharacterCountOther() {
      return "เหลือ $remainingCount อักขระ";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "ย้ายลง";
    }
    get reorderItemLeft() {
      return "ย้ายไปทางซ้าย";
    }
    get reorderItemRight() {
      return "ย้ายไปทางขวา";
    }
    get reorderItemToEnd() {
      return "ย้ายไปท้ายรายการ";
    }
    get reorderItemToStart() {
      return "ย้ายไปต้นรายการ";
    }
    get reorderItemUp() {
      return "ย้ายขึ้น";
    }
    get rowsPerPageTitle() {
      return "แถวต่อหน้า:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.tall;
    }
    get searchFieldLabel() {
      return "ค้นหา";
    }
    get selectAllButtonLabel() {
      return "เลือกทั้งหมด";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "เลือกแล้ว 1 รายการ";
    }
    get selectedRowCountTitleOther() {
      return "เลือกแล้ว $selectedRowCount รายการ";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "แสดงบัญชี";
    }
    get showMenuTooltip() {
      return "แสดงเมนู";
    }
    get signedInLabel() {
      return "ลงชื่อเข้าใช้";
    }
    get tabLabelRaw() {
      return "แท็บที่ $tabIndex จาก $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.a_space_h_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "เลือกชั่วโมง";
    }
    get timePickerMinuteModeAnnouncement() {
      return "เลือกนาที";
    }
    get viewLicensesButtonLabel() {
      return "ดูใบอนุญาต";
    }
  };
  (generated_material_localizations.MaterialLocalizationTh.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "th";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationTh.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationTh.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationTh);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationTh, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationTh.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationTh, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationTl = class MaterialLocalizationTl extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Tungkol sa $applicationName";
    }
    get alertDialogLabel() {
      return "Alerto";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Bumalik";
    }
    get cancelButtonLabel() {
      return "KANSELAHIN";
    }
    get closeButtonLabel() {
      return "ISARA";
    }
    get closeButtonTooltip() {
      return "Isara";
    }
    get collapsedIconTapHint() {
      return "I-expand";
    }
    get continueButtonLabel() {
      return "MAGPATULOY";
    }
    get copyButtonLabel() {
      return "KOPYAHIN";
    }
    get cutButtonLabel() {
      return "I-CUT";
    }
    get deleteButtonTooltip() {
      return "I-delete";
    }
    get dialogLabel() {
      return "Dialog";
    }
    get drawerLabel() {
      return "Menu ng navigation";
    }
    get expandedIconTapHint() {
      return "I-collapse";
    }
    get hideAccountsLabel() {
      return "Itago ang mga account";
    }
    get licensesPageTitle() {
      return "Mga Lisensya";
    }
    get modalBarrierDismissLabel() {
      return "I-dismiss";
    }
    get nextMonthTooltip() {
      return "Susunod na buwan";
    }
    get nextPageTooltip() {
      return "Susunod na page";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Buksan ang menu ng navigation";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow ng $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow ng humigit kumulang $rowCount";
    }
    get pasteButtonLabel() {
      return "I-PASTE";
    }
    get popupMenuLabel() {
      return "Popup na menu";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Nakaraang buwan";
    }
    get previousPageTooltip() {
      return "Nakaraang page";
    }
    get refreshIndicatorSemanticLabel() {
      return "Nagre-refresh";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 character ang natitira";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount na character ang natitira";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Ilipat pababa";
    }
    get reorderItemLeft() {
      return "Ilipat pakaliwa";
    }
    get reorderItemRight() {
      return "Ilipat pakanan";
    }
    get reorderItemToEnd() {
      return "Ilipat sa dulo";
    }
    get reorderItemToStart() {
      return "Ilipat sa simula";
    }
    get reorderItemUp() {
      return "Ilipat pataas";
    }
    get rowsPerPageTitle() {
      return "Mga row bawat page:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Maghanap";
    }
    get selectAllButtonLabel() {
      return "PILIIN LAHAT";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 item ang napili";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount na item ang napili";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Ipakita ang mga account";
    }
    get showMenuTooltip() {
      return "Ipakita ang menu";
    }
    get signedInLabel() {
      return "Naka-sign in";
    }
    get tabLabelRaw() {
      return "Tab $tabIndex ng $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Pumili ng mga oras";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Pumili ng mga minuto";
    }
    get viewLicensesButtonLabel() {
      return "TINGNAN ANG MGA LISENSYA";
    }
  };
  (generated_material_localizations.MaterialLocalizationTl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "tl";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationTl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationTl.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationTl);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationTl, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationTl.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationTl, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationTr = class MaterialLocalizationTr extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName Hakkında";
    }
    get alertDialogLabel() {
      return "Uyarı";
    }
    get anteMeridiemAbbreviation() {
      return "ÖÖ";
    }
    get backButtonTooltip() {
      return "Geri";
    }
    get cancelButtonLabel() {
      return "İPTAL";
    }
    get closeButtonLabel() {
      return "KAPAT";
    }
    get closeButtonTooltip() {
      return "Kapat";
    }
    get collapsedIconTapHint() {
      return "Genişlet";
    }
    get continueButtonLabel() {
      return "DEVAM";
    }
    get copyButtonLabel() {
      return "KOPYALA";
    }
    get cutButtonLabel() {
      return "KES";
    }
    get deleteButtonTooltip() {
      return "Sil";
    }
    get dialogLabel() {
      return "İletişim kutusu";
    }
    get drawerLabel() {
      return "Gezinme menüsü";
    }
    get expandedIconTapHint() {
      return "Daralt";
    }
    get hideAccountsLabel() {
      return "Hesapları gizle";
    }
    get licensesPageTitle() {
      return "Lisanslar";
    }
    get modalBarrierDismissLabel() {
      return "Kapat";
    }
    get nextMonthTooltip() {
      return "Gelecek ay";
    }
    get nextPageTooltip() {
      return "Sonraki sayfa";
    }
    get okButtonLabel() {
      return "Tamam";
    }
    get openAppDrawerTooltip() {
      return "Gezinme menüsünü aç";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow-$lastRow / $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow-$lastRow / $rowCount";
    }
    get pasteButtonLabel() {
      return "YAPIŞTIR";
    }
    get popupMenuLabel() {
      return "Popup menü";
    }
    get postMeridiemAbbreviation() {
      return "ÖS";
    }
    get previousMonthTooltip() {
      return "Önceki ay";
    }
    get previousPageTooltip() {
      return "Önceki sayfa";
    }
    get refreshIndicatorSemanticLabel() {
      return "Yenile";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 karakter kaldı";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount karakter kaldı";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Aşağı taşı";
    }
    get reorderItemLeft() {
      return "Sola taşı";
    }
    get reorderItemRight() {
      return "Sağa taşı";
    }
    get reorderItemToEnd() {
      return "Sona taşı";
    }
    get reorderItemToStart() {
      return "Başa taşı";
    }
    get reorderItemUp() {
      return "Yukarı taşı";
    }
    get rowsPerPageTitle() {
      return "Sayfa başına satır sayısı:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Ara";
    }
    get selectAllButtonLabel() {
      return "TÜMÜNÜ SEÇ";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 öğe seçildi";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount öğe seçildi";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Hesapları göster";
    }
    get showMenuTooltip() {
      return "Menüyü göster";
    }
    get signedInLabel() {
      return "Oturum açıldı";
    }
    get tabLabelRaw() {
      return "Sekme $tabIndex / $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Saati seçin";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Dakikayı seçin";
    }
    get viewLicensesButtonLabel() {
      return "LİSANSLARI GÖSTER";
    }
  };
  (generated_material_localizations.MaterialLocalizationTr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "tr";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationTr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationTr.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationTr);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationTr, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationTr.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationTr, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationUk = class MaterialLocalizationUk extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Про додаток $applicationName";
    }
    get alertDialogLabel() {
      return "Сповіщення";
    }
    get anteMeridiemAbbreviation() {
      return "дп";
    }
    get backButtonTooltip() {
      return "Назад";
    }
    get cancelButtonLabel() {
      return "СКАСУВАТИ";
    }
    get closeButtonLabel() {
      return "ЗАКРИТИ";
    }
    get closeButtonTooltip() {
      return "Закрити";
    }
    get collapsedIconTapHint() {
      return "Розгорнути";
    }
    get continueButtonLabel() {
      return "ПРОДОВЖИТИ";
    }
    get copyButtonLabel() {
      return "КОПІЮВАТИ";
    }
    get cutButtonLabel() {
      return "ВИРІЗАТИ";
    }
    get deleteButtonTooltip() {
      return "Видалити";
    }
    get dialogLabel() {
      return "Вікно";
    }
    get drawerLabel() {
      return "Меню навігації";
    }
    get expandedIconTapHint() {
      return "Згорнути";
    }
    get hideAccountsLabel() {
      return "Сховати облікові записи";
    }
    get licensesPageTitle() {
      return "Ліцензії";
    }
    get modalBarrierDismissLabel() {
      return "Закрити";
    }
    get nextMonthTooltip() {
      return "Наступний місяць";
    }
    get nextPageTooltip() {
      return "Наступна сторінка";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Відкрити меню навігації";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow з $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow з приблизно $rowCount";
    }
    get pasteButtonLabel() {
      return "ВСТАВИТИ";
    }
    get popupMenuLabel() {
      return "Спливаюче меню";
    }
    get postMeridiemAbbreviation() {
      return "пп";
    }
    get previousMonthTooltip() {
      return "Попередній місяць";
    }
    get previousPageTooltip() {
      return "Попередня сторінка";
    }
    get refreshIndicatorSemanticLabel() {
      return "Оновити";
    }
    get remainingTextFieldCharacterCountFew() {
      return "Залишилося $remainingCount символи";
    }
    get remainingTextFieldCharacterCountMany() {
      return "Залишилося $remainingCount символів";
    }
    get remainingTextFieldCharacterCountOne() {
      return "Залишився 1 символ";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Залишилося $remainingCount символу";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Перемістити вниз";
    }
    get reorderItemLeft() {
      return "Перемістити ліворуч";
    }
    get reorderItemRight() {
      return "Перемістити праворуч";
    }
    get reorderItemToEnd() {
      return "Перемістити в кінець";
    }
    get reorderItemToStart() {
      return "Перемістити на початок";
    }
    get reorderItemUp() {
      return "Перемістити вгору";
    }
    get rowsPerPageTitle() {
      return "Рядків на сторінці:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Пошук";
    }
    get selectAllButtonLabel() {
      return "ВИБРАТИ ВСІ";
    }
    get selectedRowCountTitleFew() {
      return "Вибрано $selectedRowCount елементи";
    }
    get selectedRowCountTitleMany() {
      return "Вибрано $selectedRowCount елементів";
    }
    get selectedRowCountTitleOne() {
      return "Вибрано 1 елемент";
    }
    get selectedRowCountTitleOther() {
      return "Вибрано $selectedRowCount елемента";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Показати облікові записи";
    }
    get showMenuTooltip() {
      return "Показати меню";
    }
    get signedInLabel() {
      return "Ви ввійшли";
    }
    get tabLabelRaw() {
      return "Вкладка $tabIndex з $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Виберіть години";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Виберіть хвилини";
    }
    get viewLicensesButtonLabel() {
      return "ПЕРЕГЛЯНУТИ ЛІЦЕНЗІЇ";
    }
  };
  (generated_material_localizations.MaterialLocalizationUk.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "uk";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationUk.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationUk.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationUk);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationUk, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationUk.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationUk, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationUr = class MaterialLocalizationUr extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName کے بارے میں";
    }
    get alertDialogLabel() {
      return "الرٹ";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "پیچھے";
    }
    get cancelButtonLabel() {
      return "منسوخ کریں";
    }
    get closeButtonLabel() {
      return "بند کریں";
    }
    get closeButtonTooltip() {
      return "بند کریں";
    }
    get collapsedIconTapHint() {
      return "پھیلائیں";
    }
    get continueButtonLabel() {
      return "جاری رکھیں";
    }
    get copyButtonLabel() {
      return "کاپی کریں";
    }
    get cutButtonLabel() {
      return "کٹ کریں";
    }
    get deleteButtonTooltip() {
      return "حذف کریں";
    }
    get dialogLabel() {
      return "ڈائلاگ";
    }
    get drawerLabel() {
      return "نیویگیشن مینو";
    }
    get expandedIconTapHint() {
      return "سکیڑیں";
    }
    get hideAccountsLabel() {
      return "اکاؤنٹس چھپائیں";
    }
    get licensesPageTitle() {
      return "لائسنسز";
    }
    get modalBarrierDismissLabel() {
      return "برخاست کریں";
    }
    get nextMonthTooltip() {
      return "اگلا مہینہ";
    }
    get nextPageTooltip() {
      return "اگلا صفحہ";
    }
    get okButtonLabel() {
      return "ٹھیک ہے";
    }
    get openAppDrawerTooltip() {
      return "نیویگیشن مینو کھولیں";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow از $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow $rowCount میں سے تقریباً";
    }
    get pasteButtonLabel() {
      return "پیسٹ کریں";
    }
    get popupMenuLabel() {
      return "پاپ اپ مینو";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "پچھلا مہینہ";
    }
    get previousPageTooltip() {
      return "گزشتہ صفحہ";
    }
    get refreshIndicatorSemanticLabel() {
      return "ریفریش کریں";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 حرف باقی ہے";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount حروف باقی ہیں";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "نیچے منتقل کریں";
    }
    get reorderItemLeft() {
      return "بائیں منتقل کریں";
    }
    get reorderItemRight() {
      return "دائیں منتقل کریں";
    }
    get reorderItemToEnd() {
      return "آخر میں منتقل کریں";
    }
    get reorderItemToStart() {
      return "شروع میں منتقل کریں";
    }
    get reorderItemUp() {
      return "اوپر منتقل کریں";
    }
    get rowsPerPageTitle() {
      return "قطاریں فی صفحہ:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.tall;
    }
    get searchFieldLabel() {
      return "تلاش";
    }
    get selectAllButtonLabel() {
      return "سبھی منتخب کریں";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 آئٹم منتخب کیا گیا";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount آئٹمز منتخب کیے گئے";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "اکاؤنٹس دکھائیں";
    }
    get showMenuTooltip() {
      return "مینو دکھائیں";
    }
    get signedInLabel() {
      return "سائن ان کردہ ہے";
    }
    get tabLabelRaw() {
      return "$tabCount میں سے $tabIndex ٹیب";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.h_colon_mm_space_a;
    }
    get timePickerHourModeAnnouncement() {
      return "گھنٹے منتخب کریں";
    }
    get timePickerMinuteModeAnnouncement() {
      return "منٹ منتخب کریں";
    }
    get viewLicensesButtonLabel() {
      return "لائسنسز دیکھیں";
    }
  };
  (generated_material_localizations.MaterialLocalizationUr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ur";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationUr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationUr.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationUr);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationUr, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationUr.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationUr, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationUz = class MaterialLocalizationUz extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "$applicationName haqida";
    }
    get alertDialogLabel() {
      return "Ogohlantirish";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Orqaga";
    }
    get cancelButtonLabel() {
      return "BEKOR QILISH";
    }
    get closeButtonLabel() {
      return "YOPISH";
    }
    get closeButtonTooltip() {
      return "Yopish";
    }
    get collapsedIconTapHint() {
      return "Yoyish";
    }
    get continueButtonLabel() {
      return "DAVOM ETISH";
    }
    get copyButtonLabel() {
      return "NUSXA OLISH";
    }
    get cutButtonLabel() {
      return "KESIB OLISH";
    }
    get deleteButtonTooltip() {
      return "Olib tashlash";
    }
    get dialogLabel() {
      return "Muloqot oynasi";
    }
    get drawerLabel() {
      return "Navigatsiya menyusi";
    }
    get expandedIconTapHint() {
      return "Kichraytirish";
    }
    get hideAccountsLabel() {
      return "Hisoblarni berkitish";
    }
    get licensesPageTitle() {
      return "Litsenziyalar";
    }
    get modalBarrierDismissLabel() {
      return "Yopish";
    }
    get nextMonthTooltip() {
      return "Keyingi oy";
    }
    get nextPageTooltip() {
      return "Keyingi sahifa";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Navigatsiya menyusini ochish";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow, jami: $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow, jami: $rowCount";
    }
    get pasteButtonLabel() {
      return "JOYLASH";
    }
    get popupMenuLabel() {
      return "Pop-ap menyusi";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Avvalgi oy";
    }
    get previousPageTooltip() {
      return "Avvalgi sahifa";
    }
    get refreshIndicatorSemanticLabel() {
      return "Yangilash";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 ta belgi qoldi";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount ta belgi qoldi";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "Pastga siljitish";
    }
    get reorderItemLeft() {
      return "Chapga siljitish";
    }
    get reorderItemRight() {
      return "Oʻngga siljitish";
    }
    get reorderItemToEnd() {
      return "Oxiriga siljitish";
    }
    get reorderItemToStart() {
      return "Boshiga siljitish";
    }
    get reorderItemUp() {
      return "Tepaga siljitish";
    }
    get rowsPerPageTitle() {
      return "Har bir sahifadagi qatorlar soni:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Qidirish";
    }
    get selectAllButtonLabel() {
      return "BARCHASINI TANLASH";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 ta element tanlandi";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount ta element tanlandi";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Hisoblarni koʻrsatish";
    }
    get showMenuTooltip() {
      return "Menyuni koʻrsatish";
    }
    get signedInLabel() {
      return "Hisobingizga kirgansiz";
    }
    get tabLabelRaw() {
      return "$tabCount varaqdan $tabIndex";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Soatni tanlang";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Daqiqani tanlang";
    }
    get viewLicensesButtonLabel() {
      return "Litsenziyalarni koʻrish";
    }
  };
  (generated_material_localizations.MaterialLocalizationUz.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "uz";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationUz.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationUz.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationUz);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationUz, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationUz.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationUz, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationVi = class MaterialLocalizationVi extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Giới thiệu về $applicationName";
    }
    get alertDialogLabel() {
      return "Thông báo";
    }
    get anteMeridiemAbbreviation() {
      return "SÁNG";
    }
    get backButtonTooltip() {
      return "Quay lại";
    }
    get cancelButtonLabel() {
      return "HỦY";
    }
    get closeButtonLabel() {
      return "ĐÓNG";
    }
    get closeButtonTooltip() {
      return "Đóng";
    }
    get collapsedIconTapHint() {
      return "Mở rộng";
    }
    get continueButtonLabel() {
      return "TIẾP TỤC";
    }
    get copyButtonLabel() {
      return "SAO CHÉP";
    }
    get cutButtonLabel() {
      return "CẮT";
    }
    get deleteButtonTooltip() {
      return "Xóa";
    }
    get dialogLabel() {
      return "Hộp thoại";
    }
    get drawerLabel() {
      return "Menu di chuyển";
    }
    get expandedIconTapHint() {
      return "Thu gọn";
    }
    get hideAccountsLabel() {
      return "Ẩn tài khoản";
    }
    get licensesPageTitle() {
      return "Giấy phép";
    }
    get modalBarrierDismissLabel() {
      return "Bỏ qua";
    }
    get nextMonthTooltip() {
      return "Tháng sau";
    }
    get nextPageTooltip() {
      return "Trang tiếp theo";
    }
    get okButtonLabel() {
      return "OK";
    }
    get openAppDrawerTooltip() {
      return "Mở menu di chuyển";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow trong tổng số $rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow trong tổng số khoảng $rowCount";
    }
    get pasteButtonLabel() {
      return "DÁN";
    }
    get popupMenuLabel() {
      return "Menu bật lên";
    }
    get postMeridiemAbbreviation() {
      return "CHIỀU";
    }
    get previousMonthTooltip() {
      return "Tháng trước";
    }
    get previousPageTooltip() {
      return "Trang trước";
    }
    get refreshIndicatorSemanticLabel() {
      return "Làm mới";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "Còn lại 1 ký tự";
    }
    get remainingTextFieldCharacterCountOther() {
      return "Còn lại $remainingCount ký tự";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "Di chuyển xuống";
    }
    get reorderItemLeft() {
      return "Di chuyển sang trái";
    }
    get reorderItemRight() {
      return "Di chuyển sang phải";
    }
    get reorderItemToEnd() {
      return "Di chuyển xuống cuối danh sách";
    }
    get reorderItemToStart() {
      return "Di chuyển lên đầu danh sách";
    }
    get reorderItemUp() {
      return "Di chuyển lên";
    }
    get rowsPerPageTitle() {
      return "Số hàng mỗi trang:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Tìm kiếm";
    }
    get selectAllButtonLabel() {
      return "CHỌN TẤT CẢ";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "Đã chọn 1 mục";
    }
    get selectedRowCountTitleOther() {
      return "Đã chọn $selectedRowCount mục";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Hiển thị tài khoản";
    }
    get showMenuTooltip() {
      return "Hiển thị menu";
    }
    get signedInLabel() {
      return "Đã đăng nhập";
    }
    get tabLabelRaw() {
      return "Tab $tabIndex trong tổng số $tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.HH_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Chọn giờ";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Chọn phút";
    }
    get viewLicensesButtonLabel() {
      return "XEM GIẤY PHÉP";
    }
  };
  (generated_material_localizations.MaterialLocalizationVi.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "vi";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationVi.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationVi.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationVi);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationVi, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationVi.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationVi, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationZh = class MaterialLocalizationZh extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "关于$applicationName";
    }
    get alertDialogLabel() {
      return "提醒";
    }
    get anteMeridiemAbbreviation() {
      return "上午";
    }
    get backButtonTooltip() {
      return "返回";
    }
    get cancelButtonLabel() {
      return "取消";
    }
    get closeButtonLabel() {
      return "关闭";
    }
    get closeButtonTooltip() {
      return "关闭";
    }
    get collapsedIconTapHint() {
      return "展开";
    }
    get continueButtonLabel() {
      return "继续";
    }
    get copyButtonLabel() {
      return "复制";
    }
    get cutButtonLabel() {
      return "剪切";
    }
    get deleteButtonTooltip() {
      return "删除";
    }
    get dialogLabel() {
      return "对话框";
    }
    get drawerLabel() {
      return "导航菜单";
    }
    get expandedIconTapHint() {
      return "收起";
    }
    get hideAccountsLabel() {
      return "隐藏帐号";
    }
    get licensesPageTitle() {
      return "许可";
    }
    get modalBarrierDismissLabel() {
      return "关闭";
    }
    get nextMonthTooltip() {
      return "下个月";
    }
    get nextPageTooltip() {
      return "下一页";
    }
    get okButtonLabel() {
      return "确定";
    }
    get openAppDrawerTooltip() {
      return "打开导航菜单";
    }
    get pageRowsInfoTitleRaw() {
      return "第 $firstRow-$lastRow 行（共 $rowCount 行）";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "第 $firstRow-$lastRow 行（共约 $rowCount 行）";
    }
    get pasteButtonLabel() {
      return "粘贴";
    }
    get popupMenuLabel() {
      return "弹出菜单";
    }
    get postMeridiemAbbreviation() {
      return "下午";
    }
    get previousMonthTooltip() {
      return "上个月";
    }
    get previousPageTooltip() {
      return "上一页";
    }
    get refreshIndicatorSemanticLabel() {
      return "刷新";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "还可输入 1 个字符";
    }
    get remainingTextFieldCharacterCountOther() {
      return "还可输入 $remainingCount 个字符";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return "TBD";
    }
    get reorderItemDown() {
      return "下移";
    }
    get reorderItemLeft() {
      return "左移";
    }
    get reorderItemRight() {
      return "右移";
    }
    get reorderItemToEnd() {
      return "移到末尾";
    }
    get reorderItemToStart() {
      return "移到开头";
    }
    get reorderItemUp() {
      return "上移";
    }
    get rowsPerPageTitle() {
      return "每页行数：";
    }
    get scriptCategory() {
      return typography.ScriptCategory.dense;
    }
    get searchFieldLabel() {
      return "搜索";
    }
    get selectAllButtonLabel() {
      return "全选";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "已选择 1 项内容";
    }
    get selectedRowCountTitleOther() {
      return "已选择 $selectedRowCount 项内容";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "显示帐号";
    }
    get showMenuTooltip() {
      return "显示菜单";
    }
    get signedInLabel() {
      return "已登录";
    }
    get tabLabelRaw() {
      return "第 $tabIndex 个标签，共 $tabCount 个";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.a_space_h_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "选择小时";
    }
    get timePickerMinuteModeAnnouncement() {
      return "选择分钟";
    }
    get viewLicensesButtonLabel() {
      return "查看许可";
    }
  };
  (generated_material_localizations.MaterialLocalizationZh.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "zh";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationZh.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationZh.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationZh);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationZh, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationZh.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationZh, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationZhHans = class MaterialLocalizationZhHans extends generated_material_localizations.MaterialLocalizationZh {};
  (generated_material_localizations.MaterialLocalizationZhHans.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "zh_Hans";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationZhHans.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationZhHans.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationZhHans);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationZhHans, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationZhHant = class MaterialLocalizationZhHant extends generated_material_localizations.MaterialLocalizationZh {
    get tabLabelRaw() {
      return "第 $tabIndex 個分頁 (共 $tabCount 個)";
    }
    get showAccountsLabel() {
      return "顯示帳戶";
    }
    get modalBarrierDismissLabel() {
      return "關閉";
    }
    get hideAccountsLabel() {
      return "隱藏帳戶";
    }
    get signedInLabel() {
      return "已登入帳戶";
    }
    get openAppDrawerTooltip() {
      return "開啟導覽選單";
    }
    get closeButtonTooltip() {
      return "關閉";
    }
    get deleteButtonTooltip() {
      return "刪除";
    }
    get nextMonthTooltip() {
      return "下個月";
    }
    get previousMonthTooltip() {
      return "上個月";
    }
    get nextPageTooltip() {
      return "下一頁";
    }
    get previousPageTooltip() {
      return "上一頁";
    }
    get showMenuTooltip() {
      return "顯示選單";
    }
    get aboutListTileTitleRaw() {
      return "關於「$applicationName」";
    }
    get licensesPageTitle() {
      return "授權";
    }
    get pageRowsInfoTitleRaw() {
      return "第 $firstRow - $lastRow 列 (總共 $rowCount 列)";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "第 $firstRow - $lastRow 列 (總共約 $rowCount 列)";
    }
    get rowsPerPageTitle() {
      return "每頁列數：";
    }
    get selectedRowCountTitleOne() {
      return "已選取 1 個項目";
    }
    get selectedRowCountTitleOther() {
      return "已選取 $selectedRowCount 個項目";
    }
    get closeButtonLabel() {
      return "關閉";
    }
    get continueButtonLabel() {
      return "繼續";
    }
    get copyButtonLabel() {
      return "複製";
    }
    get cutButtonLabel() {
      return "剪下";
    }
    get okButtonLabel() {
      return "確定";
    }
    get pasteButtonLabel() {
      return "貼上";
    }
    get selectAllButtonLabel() {
      return "全選";
    }
    get viewLicensesButtonLabel() {
      return "查看授權";
    }
    get timePickerHourModeAnnouncement() {
      return "選取小時數";
    }
    get timePickerMinuteModeAnnouncement() {
      return "選取分鐘數";
    }
    get drawerLabel() {
      return "導覽選單";
    }
    get popupMenuLabel() {
      return "彈出式選單";
    }
    get dialogLabel() {
      return "對話方塊";
    }
    get alertDialogLabel() {
      return "快訊";
    }
    get searchFieldLabel() {
      return "搜尋";
    }
    get reorderItemToStart() {
      return "移至開頭";
    }
    get reorderItemToEnd() {
      return "移至結尾";
    }
    get reorderItemUp() {
      return "向上移";
    }
    get reorderItemDown() {
      return "向下移";
    }
    get reorderItemLeft() {
      return "向左移";
    }
    get reorderItemRight() {
      return "向右移";
    }
    get expandedIconTapHint() {
      return "收合";
    }
    get collapsedIconTapHint() {
      return "展開";
    }
    get remainingTextFieldCharacterCountOne() {
      return "還可輸入 1 個字元";
    }
    get remainingTextFieldCharacterCountOther() {
      return "還可輸入 $remainingCount 個字元";
    }
    get refreshIndicatorSemanticLabel() {
      return "重新整理";
    }
  };
  (generated_material_localizations.MaterialLocalizationZhHant.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "zh_Hant";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationZhHant.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationZhHant.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationZhHant);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationZhHant, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationZhHantHk = class MaterialLocalizationZhHantHk extends generated_material_localizations.MaterialLocalizationZhHant {};
  (generated_material_localizations.MaterialLocalizationZhHantHk.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "zh_Hant_HK";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationZhHantHk.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationZhHantHk.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationZhHantHk);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationZhHantHk, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationZhHantTw = class MaterialLocalizationZhHantTw extends generated_material_localizations.MaterialLocalizationZhHant {};
  (generated_material_localizations.MaterialLocalizationZhHantTw.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "zh_Hant_TW";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationZhHantTw.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationZhHantTw.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationZhHantTw);
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationZhHantTw, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.MaterialLocalizationZu = class MaterialLocalizationZu extends material_localizations$.GlobalMaterialLocalizations {
    get aboutListTileTitleRaw() {
      return "Mayelana no-$applicationName";
    }
    get alertDialogLabel() {
      return "Isexwayiso";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get backButtonTooltip() {
      return "Emuva";
    }
    get cancelButtonLabel() {
      return "KHANSELA";
    }
    get closeButtonLabel() {
      return "VALA";
    }
    get closeButtonTooltip() {
      return "Vala";
    }
    get collapsedIconTapHint() {
      return "Nweba";
    }
    get continueButtonLabel() {
      return "QHUBEKA";
    }
    get copyButtonLabel() {
      return "KOPISHA";
    }
    get cutButtonLabel() {
      return "SIKA";
    }
    get deleteButtonTooltip() {
      return "Susa";
    }
    get dialogLabel() {
      return "Ingxoxo";
    }
    get drawerLabel() {
      return "Imenyu yokuzulazula";
    }
    get expandedIconTapHint() {
      return "Goqa";
    }
    get hideAccountsLabel() {
      return "Fihla ama-akhawunti";
    }
    get licensesPageTitle() {
      return "Amalayisense";
    }
    get modalBarrierDismissLabel() {
      return "Cashisa";
    }
    get nextMonthTooltip() {
      return "Inyanga ezayo";
    }
    get nextPageTooltip() {
      return "Ikhasi elilandelayo";
    }
    get okButtonLabel() {
      return "KULUNGILE";
    }
    get openAppDrawerTooltip() {
      return "Vula imenyu yokuzulazula";
    }
    get pageRowsInfoTitleRaw() {
      return "$firstRow–$lastRow kokungu-$rowCount";
    }
    get pageRowsInfoTitleApproximateRaw() {
      return "$firstRow–$lastRow cishe kokungu-$rowCount";
    }
    get pasteButtonLabel() {
      return "NAMATHISELA";
    }
    get popupMenuLabel() {
      return "Imenyu ye-popup";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get previousMonthTooltip() {
      return "Inyanga edlule";
    }
    get previousPageTooltip() {
      return "Ikhasi elidlule";
    }
    get refreshIndicatorSemanticLabel() {
      return "Vuselela";
    }
    get remainingTextFieldCharacterCountFew() {
      return null;
    }
    get remainingTextFieldCharacterCountMany() {
      return null;
    }
    get remainingTextFieldCharacterCountOne() {
      return "1 uhlamvu olusele";
    }
    get remainingTextFieldCharacterCountOther() {
      return "$remainingCount izinhlamvu ezisele";
    }
    get remainingTextFieldCharacterCountTwo() {
      return null;
    }
    get remainingTextFieldCharacterCountZero() {
      return null;
    }
    get reorderItemDown() {
      return "Iya phansi";
    }
    get reorderItemLeft() {
      return "Hambisa kwesokunxele";
    }
    get reorderItemRight() {
      return "Yisa kwesokudla";
    }
    get reorderItemToEnd() {
      return "Yisa ekugcineni";
    }
    get reorderItemToStart() {
      return "Yisa ekuqaleni";
    }
    get reorderItemUp() {
      return "Iya phezulu";
    }
    get rowsPerPageTitle() {
      return "Imigqa ekhasini ngalinye:";
    }
    get scriptCategory() {
      return typography.ScriptCategory.englishLike;
    }
    get searchFieldLabel() {
      return "Sesha";
    }
    get selectAllButtonLabel() {
      return "KHETHA KONKE";
    }
    get selectedRowCountTitleFew() {
      return null;
    }
    get selectedRowCountTitleMany() {
      return null;
    }
    get selectedRowCountTitleOne() {
      return "1 into ekhethiwe";
    }
    get selectedRowCountTitleOther() {
      return "$selectedRowCount izinto ezikhethiwe";
    }
    get selectedRowCountTitleTwo() {
      return null;
    }
    get selectedRowCountTitleZero() {
      return null;
    }
    get showAccountsLabel() {
      return "Bonisa ama-akhawunti";
    }
    get showMenuTooltip() {
      return "Bonisa imenyu";
    }
    get signedInLabel() {
      return "Ungene ngemvume";
    }
    get tabLabelRaw() {
      return "Ithebhu $tabIndex kwangu-$tabCount";
    }
    get timeOfDayFormatRaw() {
      return time.TimeOfDayFormat.H_colon_mm;
    }
    get timePickerHourModeAnnouncement() {
      return "Khetha amahora";
    }
    get timePickerMinuteModeAnnouncement() {
      return "Khetha amaminithi";
    }
    get viewLicensesButtonLabel() {
      return "Buka amalayisense";
    }
  };
  (generated_material_localizations.MaterialLocalizationZu.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "zu";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let longDateFormat = opts && 'longDateFormat' in opts ? opts.longDateFormat : null;
    let yearMonthFormat = opts && 'yearMonthFormat' in opts ? opts.yearMonthFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    let twoDigitZeroPaddedFormat = opts && 'twoDigitZeroPaddedFormat' in opts ? opts.twoDigitZeroPaddedFormat : null;
    generated_material_localizations.MaterialLocalizationZu.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
    ;
  }).prototype = generated_material_localizations.MaterialLocalizationZu.prototype;
  dart.addTypeTests(generated_material_localizations.MaterialLocalizationZu);
  dart.setGetterSignature(generated_material_localizations.MaterialLocalizationZu, () => ({
    __proto__: dart.getGetters(generated_material_localizations.MaterialLocalizationZu.__proto__),
    aboutListTileTitleRaw: core.String,
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    backButtonTooltip: core.String,
    cancelButtonLabel: core.String,
    closeButtonLabel: core.String,
    closeButtonTooltip: core.String,
    collapsedIconTapHint: core.String,
    continueButtonLabel: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    deleteButtonTooltip: core.String,
    dialogLabel: core.String,
    drawerLabel: core.String,
    expandedIconTapHint: core.String,
    hideAccountsLabel: core.String,
    licensesPageTitle: core.String,
    modalBarrierDismissLabel: core.String,
    nextMonthTooltip: core.String,
    nextPageTooltip: core.String,
    okButtonLabel: core.String,
    openAppDrawerTooltip: core.String,
    pageRowsInfoTitleRaw: core.String,
    pageRowsInfoTitleApproximateRaw: core.String,
    pasteButtonLabel: core.String,
    popupMenuLabel: core.String,
    postMeridiemAbbreviation: core.String,
    previousMonthTooltip: core.String,
    previousPageTooltip: core.String,
    refreshIndicatorSemanticLabel: core.String,
    remainingTextFieldCharacterCountOther: core.String,
    remainingTextFieldCharacterCountZero: core.String,
    reorderItemDown: core.String,
    reorderItemLeft: core.String,
    reorderItemRight: core.String,
    reorderItemToEnd: core.String,
    reorderItemToStart: core.String,
    reorderItemUp: core.String,
    rowsPerPageTitle: core.String,
    scriptCategory: typography.ScriptCategory,
    searchFieldLabel: core.String,
    selectAllButtonLabel: core.String,
    selectedRowCountTitleOther: core.String,
    showAccountsLabel: core.String,
    showMenuTooltip: core.String,
    signedInLabel: core.String,
    tabLabelRaw: core.String,
    timeOfDayFormatRaw: time.TimeOfDayFormat,
    timePickerHourModeAnnouncement: core.String,
    timePickerMinuteModeAnnouncement: core.String,
    viewLicensesButtonLabel: core.String
  }));
  dart.setLibraryUri(generated_material_localizations.MaterialLocalizationZu, "package:flutter_localizations/src/l10n/generated_material_localizations.dart");
  generated_material_localizations.getMaterialTranslation = function getMaterialTranslation(locale, fullYearFormat, mediumDateFormat, longDateFormat, yearMonthFormat, decimalFormat, twoDigitZeroPaddedFormat) {
    switch (locale.languageCode) {
      case "af":
      {
        return new generated_material_localizations.MaterialLocalizationAf.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "am":
      {
        return new generated_material_localizations.MaterialLocalizationAm.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "ar":
      {
        return new generated_material_localizations.MaterialLocalizationAr.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "as":
      {
        return new generated_material_localizations.MaterialLocalizationAs.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "az":
      {
        return new generated_material_localizations.MaterialLocalizationAz.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "be":
      {
        return new generated_material_localizations.MaterialLocalizationBe.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "bg":
      {
        return new generated_material_localizations.MaterialLocalizationBg.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "bn":
      {
        return new generated_material_localizations.MaterialLocalizationBn.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "bs":
      {
        return new generated_material_localizations.MaterialLocalizationBs.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "ca":
      {
        return new generated_material_localizations.MaterialLocalizationCa.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "cs":
      {
        return new generated_material_localizations.MaterialLocalizationCs.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "da":
      {
        return new generated_material_localizations.MaterialLocalizationDa.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "de":
      {
        {
          switch (locale.countryCode) {
            case "CH":
            {
              return new generated_material_localizations.MaterialLocalizationDeCh.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
          }
          return new generated_material_localizations.MaterialLocalizationDe.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
        }
      }
      case "el":
      {
        return new generated_material_localizations.MaterialLocalizationEl.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "en":
      {
        {
          switch (locale.countryCode) {
            case "AU":
            {
              return new generated_material_localizations.MaterialLocalizationEnAu.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "CA":
            {
              return new generated_material_localizations.MaterialLocalizationEnCa.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "GB":
            {
              return new generated_material_localizations.MaterialLocalizationEnGb.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "IE":
            {
              return new generated_material_localizations.MaterialLocalizationEnIe.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "IN":
            {
              return new generated_material_localizations.MaterialLocalizationEnIn.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "SG":
            {
              return new generated_material_localizations.MaterialLocalizationEnSg.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "ZA":
            {
              return new generated_material_localizations.MaterialLocalizationEnZa.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
          }
          return new generated_material_localizations.MaterialLocalizationEn.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
        }
      }
      case "es":
      {
        {
          switch (locale.countryCode) {
            case "419":
            {
              return new generated_material_localizations.MaterialLocalizationEs419.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "AR":
            {
              return new generated_material_localizations.MaterialLocalizationEsAr.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "BO":
            {
              return new generated_material_localizations.MaterialLocalizationEsBo.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "CL":
            {
              return new generated_material_localizations.MaterialLocalizationEsCl.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "CO":
            {
              return new generated_material_localizations.MaterialLocalizationEsCo.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "CR":
            {
              return new generated_material_localizations.MaterialLocalizationEsCr.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "DO":
            {
              return new generated_material_localizations.MaterialLocalizationEsDo.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "EC":
            {
              return new generated_material_localizations.MaterialLocalizationEsEc.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "GT":
            {
              return new generated_material_localizations.MaterialLocalizationEsGt.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "HN":
            {
              return new generated_material_localizations.MaterialLocalizationEsHn.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "MX":
            {
              return new generated_material_localizations.MaterialLocalizationEsMx.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "NI":
            {
              return new generated_material_localizations.MaterialLocalizationEsNi.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "PA":
            {
              return new generated_material_localizations.MaterialLocalizationEsPa.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "PE":
            {
              return new generated_material_localizations.MaterialLocalizationEsPe.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "PR":
            {
              return new generated_material_localizations.MaterialLocalizationEsPr.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "PY":
            {
              return new generated_material_localizations.MaterialLocalizationEsPy.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "SV":
            {
              return new generated_material_localizations.MaterialLocalizationEsSv.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "US":
            {
              return new generated_material_localizations.MaterialLocalizationEsUs.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "UY":
            {
              return new generated_material_localizations.MaterialLocalizationEsUy.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "VE":
            {
              return new generated_material_localizations.MaterialLocalizationEsVe.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
          }
          return new generated_material_localizations.MaterialLocalizationEs.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
        }
      }
      case "et":
      {
        return new generated_material_localizations.MaterialLocalizationEt.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "eu":
      {
        return new generated_material_localizations.MaterialLocalizationEu.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "fa":
      {
        return new generated_material_localizations.MaterialLocalizationFa.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "fi":
      {
        return new generated_material_localizations.MaterialLocalizationFi.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "fil":
      {
        return new generated_material_localizations.MaterialLocalizationFil.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "fr":
      {
        {
          switch (locale.countryCode) {
            case "CA":
            {
              return new generated_material_localizations.MaterialLocalizationFrCa.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
          }
          return new generated_material_localizations.MaterialLocalizationFr.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
        }
      }
      case "gl":
      {
        return new generated_material_localizations.MaterialLocalizationGl.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "gsw":
      {
        return new generated_material_localizations.MaterialLocalizationGsw.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "gu":
      {
        return new generated_material_localizations.MaterialLocalizationGu.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "he":
      {
        return new generated_material_localizations.MaterialLocalizationHe.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "hi":
      {
        return new generated_material_localizations.MaterialLocalizationHi.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "hr":
      {
        return new generated_material_localizations.MaterialLocalizationHr.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "hu":
      {
        return new generated_material_localizations.MaterialLocalizationHu.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "hy":
      {
        return new generated_material_localizations.MaterialLocalizationHy.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "id":
      {
        return new generated_material_localizations.MaterialLocalizationId.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "is":
      {
        return new generated_material_localizations.MaterialLocalizationIs.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "it":
      {
        return new generated_material_localizations.MaterialLocalizationIt.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "ja":
      {
        return new generated_material_localizations.MaterialLocalizationJa.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "ka":
      {
        return new generated_material_localizations.MaterialLocalizationKa.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "kk":
      {
        return new generated_material_localizations.MaterialLocalizationKk.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "km":
      {
        return new generated_material_localizations.MaterialLocalizationKm.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "kn":
      {
        return new generated_material_localizations.MaterialLocalizationKn.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "ko":
      {
        return new generated_material_localizations.MaterialLocalizationKo.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "ky":
      {
        return new generated_material_localizations.MaterialLocalizationKy.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "lo":
      {
        return new generated_material_localizations.MaterialLocalizationLo.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "lt":
      {
        return new generated_material_localizations.MaterialLocalizationLt.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "lv":
      {
        return new generated_material_localizations.MaterialLocalizationLv.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "mk":
      {
        return new generated_material_localizations.MaterialLocalizationMk.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "ml":
      {
        return new generated_material_localizations.MaterialLocalizationMl.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "mn":
      {
        return new generated_material_localizations.MaterialLocalizationMn.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "mr":
      {
        return new generated_material_localizations.MaterialLocalizationMr.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "ms":
      {
        return new generated_material_localizations.MaterialLocalizationMs.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "my":
      {
        return new generated_material_localizations.MaterialLocalizationMy.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "nb":
      {
        return new generated_material_localizations.MaterialLocalizationNb.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "ne":
      {
        return new generated_material_localizations.MaterialLocalizationNe.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "nl":
      {
        return new generated_material_localizations.MaterialLocalizationNl.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "or":
      {
        return new generated_material_localizations.MaterialLocalizationOr.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "pa":
      {
        return new generated_material_localizations.MaterialLocalizationPa.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "pl":
      {
        return new generated_material_localizations.MaterialLocalizationPl.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "ps":
      {
        return new generated_material_localizations.MaterialLocalizationPs.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "pt":
      {
        {
          switch (locale.countryCode) {
            case "PT":
            {
              return new generated_material_localizations.MaterialLocalizationPtPt.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
          }
          return new generated_material_localizations.MaterialLocalizationPt.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
        }
      }
      case "ro":
      {
        return new generated_material_localizations.MaterialLocalizationRo.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "ru":
      {
        return new generated_material_localizations.MaterialLocalizationRu.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "si":
      {
        return new generated_material_localizations.MaterialLocalizationSi.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "sk":
      {
        return new generated_material_localizations.MaterialLocalizationSk.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "sl":
      {
        return new generated_material_localizations.MaterialLocalizationSl.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "sq":
      {
        return new generated_material_localizations.MaterialLocalizationSq.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "sr":
      {
        {
          switch (locale.scriptCode) {
            case "Cyrl":
            {
              {
                return new generated_material_localizations.MaterialLocalizationSrCyrl.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
              }
            }
            case "Latn":
            {
              {
                return new generated_material_localizations.MaterialLocalizationSrLatn.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
              }
            }
          }
          return new generated_material_localizations.MaterialLocalizationSr.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
        }
      }
      case "sv":
      {
        return new generated_material_localizations.MaterialLocalizationSv.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "sw":
      {
        return new generated_material_localizations.MaterialLocalizationSw.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "ta":
      {
        return new generated_material_localizations.MaterialLocalizationTa.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "te":
      {
        return new generated_material_localizations.MaterialLocalizationTe.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "th":
      {
        return new generated_material_localizations.MaterialLocalizationTh.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "tl":
      {
        return new generated_material_localizations.MaterialLocalizationTl.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "tr":
      {
        return new generated_material_localizations.MaterialLocalizationTr.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "uk":
      {
        return new generated_material_localizations.MaterialLocalizationUk.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "ur":
      {
        return new generated_material_localizations.MaterialLocalizationUr.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "uz":
      {
        return new generated_material_localizations.MaterialLocalizationUz.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "vi":
      {
        return new generated_material_localizations.MaterialLocalizationVi.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
      case "zh":
      {
        {
          switch (locale.scriptCode) {
            case "Hans":
            {
              {
                return new generated_material_localizations.MaterialLocalizationZhHans.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
              }
            }
            case "Hant":
            {
              {
                switch (locale.countryCode) {
                  case "HK":
                  {
                    return new generated_material_localizations.MaterialLocalizationZhHantHk.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
                  }
                  case "TW":
                  {
                    return new generated_material_localizations.MaterialLocalizationZhHantTw.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
                  }
                }
                return new generated_material_localizations.MaterialLocalizationZhHant.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
              }
            }
          }
          switch (locale.countryCode) {
            case "HK":
            {
              return new generated_material_localizations.MaterialLocalizationZhHantHk.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
            case "TW":
            {
              return new generated_material_localizations.MaterialLocalizationZhHantTw.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
            }
          }
          return new generated_material_localizations.MaterialLocalizationZh.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
        }
      }
      case "zu":
      {
        return new generated_material_localizations.MaterialLocalizationZu.new({fullYearFormat: fullYearFormat, mediumDateFormat: mediumDateFormat, longDateFormat: longDateFormat, yearMonthFormat: yearMonthFormat, decimalFormat: decimalFormat, twoDigitZeroPaddedFormat: twoDigitZeroPaddedFormat});
      }
    }
    if (!false) dart.assertFailed("getMaterialTranslation() called for unsupported locale \"" + dart.str(locale) + "\"", "org-dartlang-app:///packages/flutter_localizations/src/l10n/generated_material_localizations.dart", 18710, 10, "Mater");
    return null;
  };
  let C15;
  dart.defineLazy(generated_material_localizations, {
    /*generated_material_localizations.kMaterialSupportedLanguages*/get kMaterialSupportedLanguages() {
      return HashSetOfString().from(C15 || CT.C15);
    }
  });
  material_localizations$._MaterialLocalizationsDelegate = class _MaterialLocalizationsDelegate extends localizations.LocalizationsDelegate$(material_localizations.MaterialLocalizations) {
    isSupported(locale) {
      return generated_material_localizations.kMaterialSupportedLanguages.contains(locale.languageCode);
    }
    load(locale) {
      if (!dart.test(this.isSupported(locale))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter_localizations/src/material_localizations.dart", 567, 12, "t(isSupported(local");
      return material_localizations$._MaterialLocalizationsDelegate._loadedTranslations[$putIfAbsent](locale, dart.fn(() => {
        date_localizations.loadDateIntlDataIfNotLoaded();
        let localeName = intl.Intl.canonicalizedLocale(dart.toString(locale));
        if (!(dart.toString(locale) == localeName)) dart.assertFailed("Flutter does not support the non-standard locale form " + dart.str(locale) + " (which " + "might be " + dart.str(localeName), "org-dartlang-app:///packages/flutter_localizations/src/material_localizations.dart", 573, 9, "  locale.toString() == localeNa");
        let fullYearFormat = null;
        let mediumDateFormat = null;
        let longDateFormat = null;
        let yearMonthFormat = null;
        if (dart.test(intl.DateFormat.localeExists(localeName))) {
          fullYearFormat = new intl.DateFormat.y(localeName);
          mediumDateFormat = new intl.DateFormat.MMMEd(localeName);
          longDateFormat = new intl.DateFormat.yMMMMEEEEd(localeName);
          yearMonthFormat = new intl.DateFormat.yMMMM(localeName);
        } else if (dart.test(intl.DateFormat.localeExists(locale.languageCode))) {
          fullYearFormat = new intl.DateFormat.y(locale.languageCode);
          mediumDateFormat = new intl.DateFormat.MMMEd(locale.languageCode);
          longDateFormat = new intl.DateFormat.yMMMMEEEEd(locale.languageCode);
          yearMonthFormat = new intl.DateFormat.yMMMM(locale.languageCode);
        } else {
          fullYearFormat = new intl.DateFormat.y();
          mediumDateFormat = new intl.DateFormat.MMMEd();
          longDateFormat = new intl.DateFormat.yMMMMEEEEd();
          yearMonthFormat = new intl.DateFormat.yMMMM();
        }
        let decimalFormat = null;
        let twoDigitZeroPaddedFormat = null;
        if (dart.test(intl.NumberFormat.localeExists(localeName))) {
          decimalFormat = new intl.NumberFormat.decimalPattern(localeName);
          twoDigitZeroPaddedFormat = intl.NumberFormat.new("00", localeName);
        } else if (dart.test(intl.NumberFormat.localeExists(locale.languageCode))) {
          decimalFormat = new intl.NumberFormat.decimalPattern(locale.languageCode);
          twoDigitZeroPaddedFormat = intl.NumberFormat.new("00", locale.languageCode);
        } else {
          decimalFormat = new intl.NumberFormat.decimalPattern();
          twoDigitZeroPaddedFormat = intl.NumberFormat.new("00");
        }
        return new (SynchronousFutureOfMaterialLocalizations()).new(generated_material_localizations.getMaterialTranslation(locale, fullYearFormat, mediumDateFormat, longDateFormat, yearMonthFormat, decimalFormat, twoDigitZeroPaddedFormat));
      }, VoidToSynchronousFutureOfMaterialLocalizations()));
    }
    shouldReload(old) {
      material_localizations$._MaterialLocalizationsDelegate._check(old);
      return false;
    }
    toString() {
      return "GlobalMaterialLocalizations.delegate(" + dart.str(generated_material_localizations.kMaterialSupportedLanguages[$length]) + " locales)";
    }
  };
  (material_localizations$._MaterialLocalizationsDelegate.new = function() {
    material_localizations$._MaterialLocalizationsDelegate.__proto__.new.call(this);
    ;
  }).prototype = material_localizations$._MaterialLocalizationsDelegate.prototype;
  dart.addTypeTests(material_localizations$._MaterialLocalizationsDelegate);
  dart.setMethodSignature(material_localizations$._MaterialLocalizationsDelegate, () => ({
    __proto__: dart.getMethods(material_localizations$._MaterialLocalizationsDelegate.__proto__),
    isSupported: dart.fnType(core.bool, [ui.Locale]),
    load: dart.fnType(async.Future$(material_localizations.MaterialLocalizations), [ui.Locale]),
    shouldReload: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(material_localizations$._MaterialLocalizationsDelegate, "package:flutter_localizations/src/material_localizations.dart");
  dart.defineExtensionMethods(material_localizations$._MaterialLocalizationsDelegate, ['toString']);
  dart.defineLazy(material_localizations$._MaterialLocalizationsDelegate, {
    /*material_localizations$._MaterialLocalizationsDelegate._loadedTranslations*/get _loadedTranslations() {
      return new (LinkedMapOfLocale$FutureOfMaterialLocalizations()).new();
    }
  });
  material_localizations$._get24HourVersionOf = function _get24HourVersionOf(original) {
    switch (original) {
      case C5 || CT.C5:
      case C6 || CT.C6:
      case C8 || CT.C8:
      case C4 || CT.C4:
      {
        return original;
      }
      case C3 || CT.C3:
      case C7 || CT.C7:
      {
        return time.TimeOfDayFormat.HH_colon_mm;
      }
    }
    return time.TimeOfDayFormat.HH_colon_mm;
  };
  const _textDirection = dart.privateName(widgets_localizations, "_textDirection");
  const GlobalWidgetsLocalizations_locale = dart.privateName(widgets_localizations, "GlobalWidgetsLocalizations.locale");
  let C16;
  widgets_localizations.GlobalWidgetsLocalizations = class GlobalWidgetsLocalizations extends core.Object {
    get locale() {
      return this[locale$];
    }
    set locale(value) {
      super.locale = value;
    }
    get textDirection() {
      return this[_textDirection];
    }
    static load(locale) {
      return new (SynchronousFutureOfWidgetsLocalizations()).new(new widgets_localizations.GlobalWidgetsLocalizations.new(locale));
    }
  };
  (widgets_localizations.GlobalWidgetsLocalizations.new = function(locale) {
    this[_textDirection] = null;
    this[locale$] = locale;
    let language = this.locale.languageCode[$toLowerCase]();
    this[_textDirection] = dart.test(widgets_localizations.GlobalWidgetsLocalizations._rtlLanguages[$contains](language)) ? ui.TextDirection.rtl : ui.TextDirection.ltr;
  }).prototype = widgets_localizations.GlobalWidgetsLocalizations.prototype;
  dart.addTypeTests(widgets_localizations.GlobalWidgetsLocalizations);
  const locale$ = GlobalWidgetsLocalizations_locale;
  widgets_localizations.GlobalWidgetsLocalizations[dart.implements] = () => [localizations.WidgetsLocalizations];
  dart.setGetterSignature(widgets_localizations.GlobalWidgetsLocalizations, () => ({
    __proto__: dart.getGetters(widgets_localizations.GlobalWidgetsLocalizations.__proto__),
    textDirection: ui.TextDirection
  }));
  dart.setLibraryUri(widgets_localizations.GlobalWidgetsLocalizations, "package:flutter_localizations/src/widgets_localizations.dart");
  dart.setFieldSignature(widgets_localizations.GlobalWidgetsLocalizations, () => ({
    __proto__: dart.getFields(widgets_localizations.GlobalWidgetsLocalizations.__proto__),
    locale: dart.finalFieldType(ui.Locale),
    [_textDirection]: dart.fieldType(ui.TextDirection)
  }));
  dart.defineLazy(widgets_localizations.GlobalWidgetsLocalizations, {
    /*widgets_localizations.GlobalWidgetsLocalizations._rtlLanguages*/get _rtlLanguages() {
      return C16 || CT.C16;
    },
    /*widgets_localizations.GlobalWidgetsLocalizations.delegate*/get delegate() {
      return C14 || CT.C14;
    }
  });
  widgets_localizations._WidgetsLocalizationsDelegate = class _WidgetsLocalizationsDelegate extends localizations.LocalizationsDelegate$(localizations.WidgetsLocalizations) {
    isSupported(locale) {
      return true;
    }
    load(locale) {
      return widgets_localizations.GlobalWidgetsLocalizations.load(locale);
    }
    shouldReload(old) {
      widgets_localizations._WidgetsLocalizationsDelegate._check(old);
      return false;
    }
    toString() {
      return "GlobalWidgetsLocalizations.delegate(all locales)";
    }
  };
  (widgets_localizations._WidgetsLocalizationsDelegate.new = function() {
    widgets_localizations._WidgetsLocalizationsDelegate.__proto__.new.call(this);
    ;
  }).prototype = widgets_localizations._WidgetsLocalizationsDelegate.prototype;
  dart.addTypeTests(widgets_localizations._WidgetsLocalizationsDelegate);
  dart.setMethodSignature(widgets_localizations._WidgetsLocalizationsDelegate, () => ({
    __proto__: dart.getMethods(widgets_localizations._WidgetsLocalizationsDelegate.__proto__),
    isSupported: dart.fnType(core.bool, [ui.Locale]),
    load: dart.fnType(async.Future$(localizations.WidgetsLocalizations), [ui.Locale]),
    shouldReload: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(widgets_localizations._WidgetsLocalizationsDelegate, "package:flutter_localizations/src/widgets_localizations.dart");
  dart.defineExtensionMethods(widgets_localizations._WidgetsLocalizationsDelegate, ['toString']);
  date_localizations.loadDateIntlDataIfNotLoaded = function loadDateIntlDataIfNotLoaded() {
    if (!dart.test(date_localizations._dateIntlDataInitialized)) {
      let initializedLocales = LinkedHashSetOfString().new();
      generated_date_localizations.dateSymbols[$forEach](dart.fn((locale, data) => {
        let codes = locale[$split]("_");
        let countryCode = null;
        if (codes[$length] === 2) {
          countryCode = codes[$_get](1).length < 4 ? codes[$_get](1) : null;
        } else if (codes[$length] === 3) {
          countryCode = codes[$_get](1).length < codes[$_get](2).length ? codes[$_get](1) : codes[$_get](2);
        }
        locale = dart.notNull(codes[$_get](0)) + (countryCode != null ? "_" + dart.notNull(countryCode) : "");
        if (dart.test(initializedLocales.contains(locale))) return;
        initializedLocales.add(locale);
        if (!dart.test(generated_date_localizations.datePatterns[$containsKey](locale))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter_localizations/src/utils/date_localizations.dart", 39, 14, "date_localizations.datePatterns.containsKey(locale)");
        let symbols = new date_symbols.DateSymbols.deserializeFromMap(core.Map._check(data));
        date_symbol_data_custom.initializeDateFormattingCustom({locale: locale, symbols: symbols, patterns: generated_date_localizations.datePatterns[$_get](locale)});
      }, StringAnddynamicToNull()));
      date_localizations._dateIntlDataInitialized = true;
    }
  };
  dart.defineLazy(date_localizations, {
    /*date_localizations._dateIntlDataInitialized*/get _dateIntlDataInitialized() {
      return false;
    },
    set _dateIntlDataInitialized(_) {}
  });
  let C19;
  let C20;
  let C21;
  let C22;
  let C23;
  let C24;
  let C25;
  let C26;
  let C27;
  let C28;
  let C29;
  let C30;
  let C31;
  let C32;
  let C33;
  let C18;
  let C35;
  let C36;
  let C37;
  let C38;
  let C39;
  let C40;
  let C41;
  let C42;
  let C43;
  let C44;
  let C45;
  let C46;
  let C47;
  let C34;
  let C49;
  let C50;
  let C51;
  let C52;
  let C53;
  let C54;
  let C55;
  let C56;
  let C57;
  let C58;
  let C48;
  let C60;
  let C61;
  let C62;
  let C63;
  let C64;
  let C65;
  let C66;
  let C67;
  let C68;
  let C69;
  let C70;
  let C71;
  let C72;
  let C59;
  let C74;
  let C75;
  let C76;
  let C77;
  let C78;
  let C79;
  let C80;
  let C81;
  let C82;
  let C83;
  let C84;
  let C85;
  let C86;
  let C87;
  let C88;
  let C73;
  let C90;
  let C91;
  let C92;
  let C93;
  let C94;
  let C95;
  let C96;
  let C97;
  let C98;
  let C99;
  let C100;
  let C101;
  let C102;
  let C103;
  let C89;
  let C105;
  let C106;
  let C107;
  let C108;
  let C109;
  let C110;
  let C111;
  let C112;
  let C113;
  let C114;
  let C115;
  let C116;
  let C104;
  let C118;
  let C119;
  let C120;
  let C121;
  let C122;
  let C123;
  let C124;
  let C125;
  let C126;
  let C127;
  let C128;
  let C129;
  let C130;
  let C131;
  let C117;
  let C133;
  let C134;
  let C135;
  let C136;
  let C137;
  let C138;
  let C139;
  let C140;
  let C141;
  let C142;
  let C143;
  let C144;
  let C145;
  let C146;
  let C147;
  let C148;
  let C132;
  let C150;
  let C151;
  let C152;
  let C153;
  let C154;
  let C155;
  let C156;
  let C157;
  let C158;
  let C159;
  let C160;
  let C149;
  let C162;
  let C163;
  let C164;
  let C165;
  let C166;
  let C167;
  let C168;
  let C169;
  let C170;
  let C171;
  let C172;
  let C173;
  let C161;
  let C175;
  let C176;
  let C177;
  let C178;
  let C179;
  let C180;
  let C181;
  let C182;
  let C183;
  let C184;
  let C185;
  let C186;
  let C174;
  let C187;
  let C189;
  let C190;
  let C191;
  let C192;
  let C193;
  let C194;
  let C195;
  let C196;
  let C197;
  let C198;
  let C199;
  let C200;
  let C201;
  let C202;
  let C203;
  let C188;
  let C205;
  let C206;
  let C207;
  let C208;
  let C209;
  let C210;
  let C211;
  let C212;
  let C213;
  let C214;
  let C204;
  let C216;
  let C217;
  let C218;
  let C219;
  let C215;
  let C221;
  let C222;
  let C220;
  let C224;
  let C223;
  let C226;
  let C225;
  let C228;
  let C229;
  let C227;
  let C230;
  let C232;
  let C231;
  let C234;
  let C235;
  let C236;
  let C237;
  let C238;
  let C239;
  let C240;
  let C241;
  let C242;
  let C243;
  let C244;
  let C245;
  let C246;
  let C233;
  let C248;
  let C249;
  let C250;
  let C251;
  let C247;
  let C253;
  let C254;
  let C255;
  let C256;
  let C252;
  let C258;
  let C257;
  let C260;
  let C261;
  let C262;
  let C263;
  let C264;
  let C265;
  let C266;
  let C267;
  let C259;
  let C269;
  let C270;
  let C271;
  let C272;
  let C273;
  let C274;
  let C275;
  let C276;
  let C277;
  let C278;
  let C279;
  let C280;
  let C281;
  let C282;
  let C268;
  let C284;
  let C285;
  let C286;
  let C287;
  let C288;
  let C289;
  let C290;
  let C291;
  let C292;
  let C293;
  let C294;
  let C295;
  let C296;
  let C297;
  let C283;
  let C299;
  let C300;
  let C301;
  let C302;
  let C303;
  let C304;
  let C305;
  let C306;
  let C307;
  let C308;
  let C309;
  let C310;
  let C311;
  let C312;
  let C313;
  let C314;
  let C315;
  let C298;
  let C317;
  let C318;
  let C319;
  let C320;
  let C321;
  let C322;
  let C323;
  let C316;
  let C325;
  let C326;
  let C327;
  let C328;
  let C329;
  let C330;
  let C331;
  let C332;
  let C324;
  let C334;
  let C335;
  let C336;
  let C337;
  let C333;
  let C339;
  let C340;
  let C341;
  let C342;
  let C343;
  let C344;
  let C345;
  let C346;
  let C347;
  let C348;
  let C349;
  let C350;
  let C351;
  let C352;
  let C353;
  let C354;
  let C338;
  let C356;
  let C357;
  let C358;
  let C359;
  let C355;
  let C361;
  let C362;
  let C363;
  let C364;
  let C365;
  let C366;
  let C367;
  let C368;
  let C369;
  let C370;
  let C371;
  let C360;
  let C373;
  let C374;
  let C375;
  let C376;
  let C377;
  let C378;
  let C379;
  let C380;
  let C381;
  let C382;
  let C383;
  let C372;
  let C385;
  let C386;
  let C387;
  let C388;
  let C389;
  let C390;
  let C391;
  let C392;
  let C393;
  let C394;
  let C395;
  let C384;
  let C397;
  let C398;
  let C399;
  let C400;
  let C401;
  let C402;
  let C403;
  let C404;
  let C405;
  let C396;
  let C407;
  let C408;
  let C409;
  let C410;
  let C411;
  let C412;
  let C413;
  let C414;
  let C415;
  let C416;
  let C417;
  let C418;
  let C406;
  let C420;
  let C421;
  let C422;
  let C423;
  let C424;
  let C425;
  let C426;
  let C427;
  let C428;
  let C429;
  let C430;
  let C431;
  let C432;
  let C419;
  let C434;
  let C435;
  let C436;
  let C437;
  let C438;
  let C439;
  let C440;
  let C441;
  let C442;
  let C433;
  let C444;
  let C445;
  let C446;
  let C447;
  let C448;
  let C449;
  let C450;
  let C451;
  let C452;
  let C453;
  let C454;
  let C455;
  let C443;
  let C457;
  let C458;
  let C459;
  let C460;
  let C461;
  let C462;
  let C463;
  let C464;
  let C465;
  let C466;
  let C456;
  let C468;
  let C469;
  let C470;
  let C471;
  let C472;
  let C473;
  let C474;
  let C475;
  let C467;
  let C477;
  let C478;
  let C479;
  let C480;
  let C481;
  let C482;
  let C483;
  let C484;
  let C485;
  let C486;
  let C487;
  let C476;
  let C489;
  let C490;
  let C491;
  let C492;
  let C493;
  let C494;
  let C495;
  let C496;
  let C497;
  let C498;
  let C499;
  let C500;
  let C501;
  let C502;
  let C488;
  let C504;
  let C505;
  let C506;
  let C507;
  let C508;
  let C509;
  let C510;
  let C511;
  let C512;
  let C503;
  let C514;
  let C515;
  let C516;
  let C517;
  let C518;
  let C519;
  let C520;
  let C521;
  let C522;
  let C523;
  let C524;
  let C525;
  let C526;
  let C513;
  let C528;
  let C529;
  let C530;
  let C531;
  let C532;
  let C533;
  let C534;
  let C535;
  let C536;
  let C527;
  let C538;
  let C539;
  let C540;
  let C541;
  let C542;
  let C543;
  let C544;
  let C545;
  let C546;
  let C547;
  let C548;
  let C549;
  let C550;
  let C551;
  let C537;
  let C553;
  let C554;
  let C555;
  let C556;
  let C557;
  let C558;
  let C559;
  let C560;
  let C561;
  let C562;
  let C563;
  let C564;
  let C552;
  let C566;
  let C567;
  let C568;
  let C569;
  let C570;
  let C571;
  let C572;
  let C573;
  let C574;
  let C575;
  let C576;
  let C577;
  let C578;
  let C565;
  let C580;
  let C581;
  let C582;
  let C583;
  let C584;
  let C585;
  let C586;
  let C587;
  let C588;
  let C589;
  let C590;
  let C591;
  let C592;
  let C579;
  let C594;
  let C595;
  let C596;
  let C597;
  let C598;
  let C599;
  let C600;
  let C601;
  let C602;
  let C603;
  let C604;
  let C605;
  let C593;
  let C607;
  let C608;
  let C609;
  let C610;
  let C611;
  let C612;
  let C613;
  let C614;
  let C615;
  let C616;
  let C617;
  let C618;
  let C606;
  let C620;
  let C621;
  let C622;
  let C623;
  let C624;
  let C625;
  let C626;
  let C627;
  let C628;
  let C629;
  let C630;
  let C619;
  let C632;
  let C633;
  let C634;
  let C635;
  let C636;
  let C637;
  let C638;
  let C639;
  let C640;
  let C641;
  let C642;
  let C631;
  let C644;
  let C645;
  let C646;
  let C647;
  let C648;
  let C649;
  let C650;
  let C651;
  let C652;
  let C653;
  let C654;
  let C643;
  let C656;
  let C657;
  let C658;
  let C659;
  let C660;
  let C661;
  let C662;
  let C663;
  let C664;
  let C665;
  let C666;
  let C655;
  let C668;
  let C669;
  let C670;
  let C671;
  let C672;
  let C673;
  let C667;
  let C675;
  let C676;
  let C677;
  let C678;
  let C679;
  let C680;
  let C681;
  let C682;
  let C683;
  let C684;
  let C674;
  let C686;
  let C687;
  let C688;
  let C689;
  let C690;
  let C691;
  let C692;
  let C693;
  let C694;
  let C685;
  let C696;
  let C697;
  let C698;
  let C699;
  let C700;
  let C701;
  let C702;
  let C703;
  let C695;
  let C705;
  let C706;
  let C707;
  let C708;
  let C709;
  let C710;
  let C711;
  let C712;
  let C713;
  let C714;
  let C715;
  let C704;
  let C717;
  let C718;
  let C719;
  let C720;
  let C721;
  let C722;
  let C723;
  let C724;
  let C725;
  let C726;
  let C727;
  let C728;
  let C729;
  let C730;
  let C716;
  let C732;
  let C733;
  let C734;
  let C735;
  let C736;
  let C737;
  let C738;
  let C739;
  let C740;
  let C741;
  let C742;
  let C731;
  let C744;
  let C745;
  let C746;
  let C747;
  let C748;
  let C749;
  let C750;
  let C743;
  let C752;
  let C753;
  let C754;
  let C751;
  let C756;
  let C757;
  let C758;
  let C759;
  let C760;
  let C761;
  let C762;
  let C763;
  let C764;
  let C755;
  let C766;
  let C767;
  let C768;
  let C769;
  let C770;
  let C771;
  let C772;
  let C773;
  let C774;
  let C775;
  let C776;
  let C765;
  let C778;
  let C779;
  let C780;
  let C781;
  let C782;
  let C783;
  let C784;
  let C785;
  let C786;
  let C787;
  let C788;
  let C789;
  let C790;
  let C777;
  let C792;
  let C793;
  let C794;
  let C795;
  let C796;
  let C797;
  let C798;
  let C799;
  let C800;
  let C801;
  let C802;
  let C791;
  let C804;
  let C805;
  let C806;
  let C807;
  let C808;
  let C809;
  let C810;
  let C811;
  let C812;
  let C813;
  let C803;
  let C815;
  let C816;
  let C817;
  let C818;
  let C819;
  let C820;
  let C821;
  let C822;
  let C823;
  let C824;
  let C825;
  let C826;
  let C827;
  let C828;
  let C829;
  let C830;
  let C831;
  let C832;
  let C814;
  let C834;
  let C835;
  let C836;
  let C837;
  let C838;
  let C839;
  let C840;
  let C841;
  let C842;
  let C843;
  let C844;
  let C833;
  let C846;
  let C847;
  let C848;
  let C849;
  let C850;
  let C851;
  let C845;
  let C853;
  let C854;
  let C855;
  let C856;
  let C857;
  let C858;
  let C859;
  let C860;
  let C861;
  let C852;
  let C863;
  let C864;
  let C865;
  let C866;
  let C867;
  let C868;
  let C862;
  let C870;
  let C871;
  let C872;
  let C873;
  let C874;
  let C875;
  let C876;
  let C877;
  let C878;
  let C879;
  let C880;
  let C881;
  let C882;
  let C869;
  let C884;
  let C885;
  let C886;
  let C887;
  let C888;
  let C889;
  let C890;
  let C891;
  let C892;
  let C893;
  let C894;
  let C895;
  let C883;
  let C897;
  let C898;
  let C899;
  let C900;
  let C901;
  let C902;
  let C903;
  let C904;
  let C905;
  let C906;
  let C907;
  let C896;
  let C908;
  let C910;
  let C911;
  let C912;
  let C913;
  let C914;
  let C915;
  let C916;
  let C917;
  let C918;
  let C919;
  let C920;
  let C921;
  let C909;
  let C923;
  let C924;
  let C925;
  let C926;
  let C927;
  let C928;
  let C929;
  let C930;
  let C931;
  let C932;
  let C933;
  let C934;
  let C935;
  let C922;
  let C937;
  let C938;
  let C939;
  let C940;
  let C941;
  let C936;
  let C943;
  let C944;
  let C945;
  let C946;
  let C947;
  let C948;
  let C949;
  let C950;
  let C951;
  let C952;
  let C953;
  let C954;
  let C955;
  let C956;
  let C957;
  let C942;
  let C959;
  let C960;
  let C961;
  let C962;
  let C963;
  let C964;
  let C965;
  let C966;
  let C967;
  let C968;
  let C969;
  let C970;
  let C958;
  let C972;
  let C973;
  let C974;
  let C975;
  let C976;
  let C977;
  let C978;
  let C979;
  let C980;
  let C981;
  let C971;
  let C983;
  let C984;
  let C985;
  let C986;
  let C982;
  let C988;
  let C989;
  let C987;
  let C991;
  let C992;
  let C993;
  let C994;
  let C995;
  let C996;
  let C997;
  let C990;
  let C17;
  let C999;
  let C1000;
  let C1001;
  let C1002;
  let C1003;
  let C1004;
  let C1005;
  let C1006;
  let C1007;
  let C1008;
  let C1009;
  let C1010;
  let C1011;
  let C1012;
  let C1013;
  let C1014;
  let C1015;
  let C1016;
  let C1017;
  let C1018;
  let C1019;
  let C1020;
  let C1021;
  let C1022;
  let C1023;
  let C1024;
  let C1025;
  let C1026;
  let C1027;
  let C1028;
  let C1029;
  let C1030;
  let C1031;
  let C1032;
  let C1033;
  let C1034;
  let C1035;
  let C1036;
  let C1037;
  let C1038;
  let C1039;
  let C1040;
  let C1041;
  let C1042;
  let C1043;
  let C1044;
  let C1045;
  let C1046;
  let C1047;
  let C1048;
  let C1049;
  let C1050;
  let C1051;
  let C1052;
  let C1053;
  let C1054;
  let C1055;
  let C1056;
  let C1057;
  let C1058;
  let C1059;
  let C1060;
  let C1061;
  let C1062;
  let C1063;
  let C1064;
  let C1065;
  let C1066;
  let C1067;
  let C1068;
  let C1069;
  let C1070;
  let C1071;
  let C1072;
  let C1073;
  let C1074;
  let C1075;
  let C1076;
  let C1077;
  let C1078;
  let C1079;
  let C1080;
  let C1081;
  let C1082;
  let C1083;
  let C1084;
  let C1085;
  let C998;
  dart.defineLazy(generated_date_localizations, {
    /*generated_date_localizations.dateSymbols*/get dateSymbols() {
      return C17 || CT.C17;
    },
    /*generated_date_localizations.datePatterns*/get datePatterns() {
      return C998 || CT.C998;
    }
  });
  const _localeName$0 = dart.privateName(cupertino_localizations, "_localeName");
  const _fullYearFormat$0 = dart.privateName(cupertino_localizations, "_fullYearFormat");
  const _dayFormat = dart.privateName(cupertino_localizations, "_dayFormat");
  const _mediumDateFormat$0 = dart.privateName(cupertino_localizations, "_mediumDateFormat");
  const _singleDigitHourFormat = dart.privateName(cupertino_localizations, "_singleDigitHourFormat");
  const _singleDigitMinuteFormat = dart.privateName(cupertino_localizations, "_singleDigitMinuteFormat");
  const _doubleDigitMinuteFormat = dart.privateName(cupertino_localizations, "_doubleDigitMinuteFormat");
  const _singleDigitSecondFormat = dart.privateName(cupertino_localizations, "_singleDigitSecondFormat");
  const _decimalFormat$0 = dart.privateName(cupertino_localizations, "_decimalFormat");
  const GlobalCupertinoLocalizations__localeName = dart.privateName(cupertino_localizations, "GlobalCupertinoLocalizations._localeName");
  const GlobalCupertinoLocalizations__fullYearFormat = dart.privateName(cupertino_localizations, "GlobalCupertinoLocalizations._fullYearFormat");
  const GlobalCupertinoLocalizations__dayFormat = dart.privateName(cupertino_localizations, "GlobalCupertinoLocalizations._dayFormat");
  const GlobalCupertinoLocalizations__mediumDateFormat = dart.privateName(cupertino_localizations, "GlobalCupertinoLocalizations._mediumDateFormat");
  const GlobalCupertinoLocalizations__singleDigitHourFormat = dart.privateName(cupertino_localizations, "GlobalCupertinoLocalizations._singleDigitHourFormat");
  const GlobalCupertinoLocalizations__singleDigitMinuteFormat = dart.privateName(cupertino_localizations, "GlobalCupertinoLocalizations._singleDigitMinuteFormat");
  const GlobalCupertinoLocalizations__doubleDigitMinuteFormat = dart.privateName(cupertino_localizations, "GlobalCupertinoLocalizations._doubleDigitMinuteFormat");
  const GlobalCupertinoLocalizations__singleDigitSecondFormat = dart.privateName(cupertino_localizations, "GlobalCupertinoLocalizations._singleDigitSecondFormat");
  const GlobalCupertinoLocalizations__decimalFormat = dart.privateName(cupertino_localizations, "GlobalCupertinoLocalizations._decimalFormat");
  let C1086;
  cupertino_localizations.GlobalCupertinoLocalizations = class GlobalCupertinoLocalizations extends core.Object {
    get [_localeName$0]() {
      return this[_localeName$1];
    }
    set [_localeName$0](value) {
      super[_localeName$0] = value;
    }
    get [_fullYearFormat$0]() {
      return this[_fullYearFormat$1];
    }
    set [_fullYearFormat$0](value) {
      super[_fullYearFormat$0] = value;
    }
    get [_dayFormat]() {
      return this[_dayFormat$];
    }
    set [_dayFormat](value) {
      super[_dayFormat] = value;
    }
    get [_mediumDateFormat$0]() {
      return this[_mediumDateFormat$1];
    }
    set [_mediumDateFormat$0](value) {
      super[_mediumDateFormat$0] = value;
    }
    get [_singleDigitHourFormat]() {
      return this[_singleDigitHourFormat$];
    }
    set [_singleDigitHourFormat](value) {
      super[_singleDigitHourFormat] = value;
    }
    get [_singleDigitMinuteFormat]() {
      return this[_singleDigitMinuteFormat$];
    }
    set [_singleDigitMinuteFormat](value) {
      super[_singleDigitMinuteFormat] = value;
    }
    get [_doubleDigitMinuteFormat]() {
      return this[_doubleDigitMinuteFormat$];
    }
    set [_doubleDigitMinuteFormat](value) {
      super[_doubleDigitMinuteFormat] = value;
    }
    get [_singleDigitSecondFormat]() {
      return this[_singleDigitSecondFormat$];
    }
    set [_singleDigitSecondFormat](value) {
      super[_singleDigitSecondFormat] = value;
    }
    get [_decimalFormat$0]() {
      return this[_decimalFormat$1];
    }
    set [_decimalFormat$0](value) {
      super[_decimalFormat$0] = value;
    }
    datePickerYear(yearIndex) {
      return this[_fullYearFormat$0].format(new core.DateTime.utc(yearIndex));
    }
    datePickerMonth(monthIndex) {
      return this[_fullYearFormat$0].dateSymbols.MONTHS[$_get](dart.notNull(monthIndex) - 1);
    }
    datePickerDayOfMonth(dayIndex) {
      return this[_dayFormat].format(new core.DateTime.utc(0, 0, dayIndex));
    }
    datePickerMediumDate(date) {
      return this[_mediumDateFormat$0].format(date);
    }
    datePickerHour(hour) {
      return this[_singleDigitHourFormat].format(new core.DateTime.utc(0, 0, 0, hour));
    }
    datePickerMinute(minute) {
      return this[_doubleDigitMinuteFormat].format(new core.DateTime.utc(0, 0, 0, 0, minute));
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return null;
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    datePickerHourSemanticsLabel(hour) {
      return intl.Intl.pluralLogic(core.String, hour, {zero: this.datePickerHourSemanticsLabelZero, one: this.datePickerHourSemanticsLabelOne, two: this.datePickerHourSemanticsLabelTwo, few: this.datePickerHourSemanticsLabelFew, many: this.datePickerHourSemanticsLabelMany, other: this.datePickerHourSemanticsLabelOther, locale: this[_localeName$0]})[$replaceFirst]("$hour", this[_decimalFormat$0].format(hour));
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return null;
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    datePickerMinuteSemanticsLabel(minute) {
      return intl.Intl.pluralLogic(core.String, minute, {zero: this.datePickerMinuteSemanticsLabelZero, one: this.datePickerMinuteSemanticsLabelOne, two: this.datePickerMinuteSemanticsLabelTwo, few: this.datePickerMinuteSemanticsLabelFew, many: this.datePickerMinuteSemanticsLabelMany, other: this.datePickerMinuteSemanticsLabelOther, locale: this[_localeName$0]})[$replaceFirst]("$minute", this[_decimalFormat$0].format(minute));
    }
    get datePickerDateOrder() {
      switch (this.datePickerDateOrderString) {
        case "dmy":
        {
          return localizations$.DatePickerDateOrder.dmy;
        }
        case "mdy":
        {
          return localizations$.DatePickerDateOrder.mdy;
        }
        case "ymd":
        {
          return localizations$.DatePickerDateOrder.ymd;
        }
        case "ydm":
        {
          return localizations$.DatePickerDateOrder.ydm;
        }
        default:
        {
          if (!false) dart.assertFailed("Failed to load DatePickerDateOrder " + dart.str(this.datePickerDateOrderString) + " for " + "locale " + dart.str(this[_localeName$0]) + ".\nNon conforming string for " + dart.str(this[_localeName$0]) + "'s " + ".arb file", "org-dartlang-app:///packages/flutter_localizations/src/cupertino_localizations.dart", 211, 11, "false");
          return null;
        }
      }
    }
    get datePickerDateTimeOrder() {
      switch (this.datePickerDateTimeOrderString) {
        case "date_time_dayPeriod":
        {
          return localizations$.DatePickerDateTimeOrder.date_time_dayPeriod;
        }
        case "date_dayPeriod_time":
        {
          return localizations$.DatePickerDateTimeOrder.date_dayPeriod_time;
        }
        case "time_dayPeriod_date":
        {
          return localizations$.DatePickerDateTimeOrder.time_dayPeriod_date;
        }
        case "dayPeriod_time_date":
        {
          return localizations$.DatePickerDateTimeOrder.dayPeriod_time_date;
        }
        default:
        {
          if (!false) dart.assertFailed("Failed to load DatePickerDateTimeOrder " + dart.str(this.datePickerDateTimeOrderString) + " " + "for locale " + dart.str(this[_localeName$0]) + ".\nNon conforming string for " + dart.str(this[_localeName$0]) + "'s " + ".arb file", "org-dartlang-app:///packages/flutter_localizations/src/cupertino_localizations.dart", 245, 11, "false");
          return null;
        }
      }
    }
    timerPickerHour(hour) {
      return this[_singleDigitHourFormat].format(new core.DateTime.utc(0, 0, 0, hour));
    }
    timerPickerMinute(minute) {
      return this[_singleDigitMinuteFormat].format(new core.DateTime.utc(0, 0, 0, 0, minute));
    }
    timerPickerSecond(second) {
      return this[_singleDigitSecondFormat].format(new core.DateTime.utc(0, 0, 0, 0, 0, second));
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return null;
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    timerPickerHourLabel(hour) {
      return intl.Intl.pluralLogic(core.String, hour, {zero: this.timerPickerHourLabelZero, one: this.timerPickerHourLabelOne, two: this.timerPickerHourLabelTwo, few: this.timerPickerHourLabelFew, many: this.timerPickerHourLabelMany, other: this.timerPickerHourLabelOther, locale: this[_localeName$0]})[$replaceFirst]("$hour", this[_decimalFormat$0].format(hour));
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return null;
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    timerPickerMinuteLabel(minute) {
      return intl.Intl.pluralLogic(core.String, minute, {zero: this.timerPickerMinuteLabelZero, one: this.timerPickerMinuteLabelOne, two: this.timerPickerMinuteLabelTwo, few: this.timerPickerMinuteLabelFew, many: this.timerPickerMinuteLabelMany, other: this.timerPickerMinuteLabelOther, locale: this[_localeName$0]})[$replaceFirst]("$minute", this[_decimalFormat$0].format(minute));
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return null;
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    timerPickerSecondLabel(second) {
      return intl.Intl.pluralLogic(core.String, second, {zero: this.timerPickerSecondLabelZero, one: this.timerPickerSecondLabelOne, two: this.timerPickerSecondLabelTwo, few: this.timerPickerSecondLabelFew, many: this.timerPickerSecondLabelMany, other: this.timerPickerSecondLabelOther, locale: this[_localeName$0]})[$replaceFirst]("$second", this[_decimalFormat$0].format(second));
    }
  };
  (cupertino_localizations.GlobalCupertinoLocalizations.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : null;
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    if (!(localeName != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter_localizations/src/cupertino_localizations.dart", 69, 15, "localeName != null");
    this[_localeName$1] = localeName;
    if (!(fullYearFormat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter_localizations/src/cupertino_localizations.dart", 71, 15, "fullYearFormat != null");
    this[_fullYearFormat$1] = fullYearFormat;
    if (!(dayFormat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter_localizations/src/cupertino_localizations.dart", 73, 15, "dayFormat != null");
    this[_dayFormat$] = dayFormat;
    if (!(mediumDateFormat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter_localizations/src/cupertino_localizations.dart", 75, 15, "mediumDateFormat != null");
    this[_mediumDateFormat$1] = mediumDateFormat;
    if (!(singleDigitHourFormat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter_localizations/src/cupertino_localizations.dart", 77, 15, "singleDigitHourFormat != null");
    this[_singleDigitHourFormat$] = singleDigitHourFormat;
    if (!(singleDigitMinuteFormat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter_localizations/src/cupertino_localizations.dart", 79, 15, "singleDigitMinuteFormat != null");
    this[_singleDigitMinuteFormat$] = singleDigitMinuteFormat;
    if (!(doubleDigitMinuteFormat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter_localizations/src/cupertino_localizations.dart", 81, 15, "doubleDigitMinuteFormat != null");
    this[_doubleDigitMinuteFormat$] = doubleDigitMinuteFormat;
    if (!(singleDigitSecondFormat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter_localizations/src/cupertino_localizations.dart", 83, 15, "singleDigitSecondFormat != null");
    this[_singleDigitSecondFormat$] = singleDigitSecondFormat;
    if (!(decimalFormat != null)) dart.assertFailed(null, "org-dartlang-app:///packages/flutter_localizations/src/cupertino_localizations.dart", 85, 15, "decimalFormat != null");
    this[_decimalFormat$1] = decimalFormat;
    ;
  }).prototype = cupertino_localizations.GlobalCupertinoLocalizations.prototype;
  dart.addTypeTests(cupertino_localizations.GlobalCupertinoLocalizations);
  const _localeName$1 = GlobalCupertinoLocalizations__localeName;
  const _fullYearFormat$1 = GlobalCupertinoLocalizations__fullYearFormat;
  const _dayFormat$ = GlobalCupertinoLocalizations__dayFormat;
  const _mediumDateFormat$1 = GlobalCupertinoLocalizations__mediumDateFormat;
  const _singleDigitHourFormat$ = GlobalCupertinoLocalizations__singleDigitHourFormat;
  const _singleDigitMinuteFormat$ = GlobalCupertinoLocalizations__singleDigitMinuteFormat;
  const _doubleDigitMinuteFormat$ = GlobalCupertinoLocalizations__doubleDigitMinuteFormat;
  const _singleDigitSecondFormat$ = GlobalCupertinoLocalizations__singleDigitSecondFormat;
  const _decimalFormat$1 = GlobalCupertinoLocalizations__decimalFormat;
  cupertino_localizations.GlobalCupertinoLocalizations[dart.implements] = () => [localizations$.CupertinoLocalizations];
  dart.setMethodSignature(cupertino_localizations.GlobalCupertinoLocalizations, () => ({
    __proto__: dart.getMethods(cupertino_localizations.GlobalCupertinoLocalizations.__proto__),
    datePickerYear: dart.fnType(core.String, [core.int]),
    datePickerMonth: dart.fnType(core.String, [core.int]),
    datePickerDayOfMonth: dart.fnType(core.String, [core.int]),
    datePickerMediumDate: dart.fnType(core.String, [core.DateTime]),
    datePickerHour: dart.fnType(core.String, [core.int]),
    datePickerMinute: dart.fnType(core.String, [core.int]),
    datePickerHourSemanticsLabel: dart.fnType(core.String, [core.int]),
    datePickerMinuteSemanticsLabel: dart.fnType(core.String, [core.int]),
    timerPickerHour: dart.fnType(core.String, [core.int]),
    timerPickerMinute: dart.fnType(core.String, [core.int]),
    timerPickerSecond: dart.fnType(core.String, [core.int]),
    timerPickerHourLabel: dart.fnType(core.String, [core.int]),
    timerPickerMinuteLabel: dart.fnType(core.String, [core.int]),
    timerPickerSecondLabel: dart.fnType(core.String, [core.int])
  }));
  dart.setGetterSignature(cupertino_localizations.GlobalCupertinoLocalizations, () => ({
    __proto__: dart.getGetters(cupertino_localizations.GlobalCupertinoLocalizations.__proto__),
    datePickerHourSemanticsLabelZero: core.String,
    datePickerHourSemanticsLabelOne: core.String,
    datePickerHourSemanticsLabelTwo: core.String,
    datePickerHourSemanticsLabelFew: core.String,
    datePickerHourSemanticsLabelMany: core.String,
    datePickerMinuteSemanticsLabelZero: core.String,
    datePickerMinuteSemanticsLabelOne: core.String,
    datePickerMinuteSemanticsLabelTwo: core.String,
    datePickerMinuteSemanticsLabelFew: core.String,
    datePickerMinuteSemanticsLabelMany: core.String,
    datePickerDateOrder: localizations$.DatePickerDateOrder,
    datePickerDateTimeOrder: localizations$.DatePickerDateTimeOrder,
    timerPickerHourLabelZero: core.String,
    timerPickerHourLabelOne: core.String,
    timerPickerHourLabelTwo: core.String,
    timerPickerHourLabelFew: core.String,
    timerPickerHourLabelMany: core.String,
    timerPickerMinuteLabelZero: core.String,
    timerPickerMinuteLabelOne: core.String,
    timerPickerMinuteLabelTwo: core.String,
    timerPickerMinuteLabelFew: core.String,
    timerPickerMinuteLabelMany: core.String,
    timerPickerSecondLabelZero: core.String,
    timerPickerSecondLabelOne: core.String,
    timerPickerSecondLabelTwo: core.String,
    timerPickerSecondLabelFew: core.String,
    timerPickerSecondLabelMany: core.String
  }));
  dart.setLibraryUri(cupertino_localizations.GlobalCupertinoLocalizations, "package:flutter_localizations/src/cupertino_localizations.dart");
  dart.setFieldSignature(cupertino_localizations.GlobalCupertinoLocalizations, () => ({
    __proto__: dart.getFields(cupertino_localizations.GlobalCupertinoLocalizations.__proto__),
    [_localeName$0]: dart.finalFieldType(core.String),
    [_fullYearFormat$0]: dart.finalFieldType(intl.DateFormat),
    [_dayFormat]: dart.finalFieldType(intl.DateFormat),
    [_mediumDateFormat$0]: dart.finalFieldType(intl.DateFormat),
    [_singleDigitHourFormat]: dart.finalFieldType(intl.DateFormat),
    [_singleDigitMinuteFormat]: dart.finalFieldType(intl.DateFormat),
    [_doubleDigitMinuteFormat]: dart.finalFieldType(intl.DateFormat),
    [_singleDigitSecondFormat]: dart.finalFieldType(intl.DateFormat),
    [_decimalFormat$0]: dart.finalFieldType(intl.NumberFormat)
  }));
  dart.defineLazy(cupertino_localizations.GlobalCupertinoLocalizations, {
    /*cupertino_localizations.GlobalCupertinoLocalizations.delegate*/get delegate() {
      return C13 || CT.C13;
    },
    /*cupertino_localizations.GlobalCupertinoLocalizations.delegates*/get delegates() {
      return C1086 || CT.C1086;
    }
  });
  cupertino_localizations._GlobalCupertinoLocalizationsDelegate = class _GlobalCupertinoLocalizationsDelegate extends localizations.LocalizationsDelegate$(localizations$.CupertinoLocalizations) {
    isSupported(locale) {
      return generated_cupertino_localizations.kCupertinoSupportedLanguages.contains(locale.languageCode);
    }
    load(locale) {
      if (!dart.test(this.isSupported(locale))) dart.assertFailed(null, "org-dartlang-app:///packages/flutter_localizations/src/cupertino_localizations.dart", 395, 12, "isSupported(locale)");
      return cupertino_localizations._GlobalCupertinoLocalizationsDelegate._loadedTranslations[$putIfAbsent](locale, dart.fn(() => {
        date_localizations.loadDateIntlDataIfNotLoaded();
        let localeName = intl.Intl.canonicalizedLocale(dart.toString(locale));
        if (!(dart.toString(locale) == localeName)) dart.assertFailed("Flutter does not support the non-standard locale form " + dart.str(locale) + " (which " + "might be " + dart.str(localeName), "org-dartlang-app:///packages/flutter_localizations/src/cupertino_localizations.dart", 401, 9, "locale.toString() == localeName");
        let fullYearFormat = null;
        let dayFormat = null;
        let mediumDateFormat = null;
        let singleDigitHourFormat = null;
        let singleDigitMinuteFormat = null;
        let doubleDigitMinuteFormat = null;
        let singleDigitSecondFormat = null;
        let decimalFormat = null;
        function loadFormats(locale) {
          fullYearFormat = new intl.DateFormat.y(locale);
          dayFormat = new intl.DateFormat.d(locale);
          mediumDateFormat = new intl.DateFormat.MMMEd(locale);
          singleDigitHourFormat = new intl.DateFormat.new("HH", locale);
          singleDigitMinuteFormat = new intl.DateFormat.m(locale);
          doubleDigitMinuteFormat = new intl.DateFormat.new("mm", locale);
          singleDigitSecondFormat = new intl.DateFormat.s(locale);
          decimalFormat = new intl.NumberFormat.decimalPattern(locale);
        }
        dart.fn(loadFormats, StringTovoid());
        if (dart.test(intl.DateFormat.localeExists(localeName))) {
          loadFormats(localeName);
        } else if (dart.test(intl.DateFormat.localeExists(locale.languageCode))) {
          loadFormats(locale.languageCode);
        } else {
          loadFormats(null);
        }
        return new (SynchronousFutureOfCupertinoLocalizations()).new(generated_cupertino_localizations.getCupertinoTranslation(locale, fullYearFormat, dayFormat, mediumDateFormat, singleDigitHourFormat, singleDigitMinuteFormat, doubleDigitMinuteFormat, singleDigitSecondFormat, decimalFormat));
      }, VoidToSynchronousFutureOfCupertinoLocalizations()));
    }
    shouldReload(old) {
      cupertino_localizations._GlobalCupertinoLocalizationsDelegate._check(old);
      return false;
    }
    toString() {
      return "GlobalCupertinoLocalizations.delegate(" + dart.str(generated_cupertino_localizations.kCupertinoSupportedLanguages[$length]) + " locales)";
    }
  };
  (cupertino_localizations._GlobalCupertinoLocalizationsDelegate.new = function() {
    cupertino_localizations._GlobalCupertinoLocalizationsDelegate.__proto__.new.call(this);
    ;
  }).prototype = cupertino_localizations._GlobalCupertinoLocalizationsDelegate.prototype;
  dart.addTypeTests(cupertino_localizations._GlobalCupertinoLocalizationsDelegate);
  dart.setMethodSignature(cupertino_localizations._GlobalCupertinoLocalizationsDelegate, () => ({
    __proto__: dart.getMethods(cupertino_localizations._GlobalCupertinoLocalizationsDelegate.__proto__),
    isSupported: dart.fnType(core.bool, [ui.Locale]),
    load: dart.fnType(async.Future$(localizations$.CupertinoLocalizations), [ui.Locale]),
    shouldReload: dart.fnType(core.bool, [core.Object])
  }));
  dart.setLibraryUri(cupertino_localizations._GlobalCupertinoLocalizationsDelegate, "package:flutter_localizations/src/cupertino_localizations.dart");
  dart.defineExtensionMethods(cupertino_localizations._GlobalCupertinoLocalizationsDelegate, ['toString']);
  dart.defineLazy(cupertino_localizations._GlobalCupertinoLocalizationsDelegate, {
    /*cupertino_localizations._GlobalCupertinoLocalizationsDelegate._loadedTranslations*/get _loadedTranslations() {
      return new (LinkedMapOfLocale$FutureOfCupertinoLocalizations()).new();
    }
  });
  generated_cupertino_localizations.CupertinoLocalizationAf = class CupertinoLocalizationAf extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Opletberig";
    }
    get anteMeridiemAbbreviation() {
      return "vm.";
    }
    get copyButtonLabel() {
      return "Kopieer";
    }
    get cutButtonLabel() {
      return "Knip";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour uur";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour uur";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuut";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minute";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Plak";
    }
    get postMeridiemAbbreviation() {
      return "nm.";
    }
    get selectAllButtonLabel() {
      return "Kies alles";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "uur";
    }
    get timerPickerHourLabelOther() {
      return "uur";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sek.";
    }
    get timerPickerSecondLabelOther() {
      return "sek.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Vandag";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationAf.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "af";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationAf.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationAf.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationAf);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationAf, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationAf.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationAf, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationAm = class CupertinoLocalizationAm extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "ማንቂያ";
    }
    get anteMeridiemAbbreviation() {
      return "ጥዋት";
    }
    get copyButtonLabel() {
      return "ቅዳ";
    }
    get cutButtonLabel() {
      return "ቁረጥ";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour ሰዓት";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour ሰዓት";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 ደቂቃ";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute ደቂቃዎች";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "ለጥፍ";
    }
    get postMeridiemAbbreviation() {
      return "ከሰዓት";
    }
    get selectAllButtonLabel() {
      return "ሁሉንም ምረጥ";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ሰዓት";
    }
    get timerPickerHourLabelOther() {
      return "ሰዓቶች";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "ደቂቃ";
    }
    get timerPickerMinuteLabelOther() {
      return "ደቂቃ";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "ሴኮ";
    }
    get timerPickerSecondLabelOther() {
      return "ሴኮ";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "ዛሬ";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationAm.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "am";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationAm.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationAm.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationAm);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationAm, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationAm.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationAm, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationAr = class CupertinoLocalizationAr extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "تنبيه";
    }
    get anteMeridiemAbbreviation() {
      return "ص";
    }
    get copyButtonLabel() {
      return "نسخ";
    }
    get cutButtonLabel() {
      return "قص";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour بالضبط";
    }
    get datePickerHourSemanticsLabelMany() {
      return "$hour بالضبط";
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour بالضبط";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour بالضبط";
    }
    get datePickerHourSemanticsLabelTwo() {
      return "$hour بالضبط";
    }
    get datePickerHourSemanticsLabelZero() {
      return "$hour بالضبط";
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute دقائق";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return "$minute دقيقة​";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "دقيقة واحدة";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute دقيقة​";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return "دقيقتان ($minute)";
    }
    get datePickerMinuteSemanticsLabelZero() {
      return "$minute دقيقة​";
    }
    get pasteButtonLabel() {
      return "لصق";
    }
    get postMeridiemAbbreviation() {
      return "م";
    }
    get selectAllButtonLabel() {
      return "اختيار الكل";
    }
    get timerPickerHourLabelFew() {
      return "ساعات";
    }
    get timerPickerHourLabelMany() {
      return "ساعة";
    }
    get timerPickerHourLabelOne() {
      return "ساعة";
    }
    get timerPickerHourLabelOther() {
      return "ساعة";
    }
    get timerPickerHourLabelTwo() {
      return "ساعتان";
    }
    get timerPickerHourLabelZero() {
      return "ساعة";
    }
    get timerPickerMinuteLabelFew() {
      return "دقائق";
    }
    get timerPickerMinuteLabelMany() {
      return "دقيقة";
    }
    get timerPickerMinuteLabelOne() {
      return "دقيقة واحدة";
    }
    get timerPickerMinuteLabelOther() {
      return "دقيقة";
    }
    get timerPickerMinuteLabelTwo() {
      return "دقيقتان";
    }
    get timerPickerMinuteLabelZero() {
      return "دقيقة";
    }
    get timerPickerSecondLabelFew() {
      return "ثوانٍ";
    }
    get timerPickerSecondLabelMany() {
      return "ثانية";
    }
    get timerPickerSecondLabelOne() {
      return "ثانية واحدة";
    }
    get timerPickerSecondLabelOther() {
      return "ثانية";
    }
    get timerPickerSecondLabelTwo() {
      return "ثانيتان";
    }
    get timerPickerSecondLabelZero() {
      return "ثانية";
    }
    get todayLabel() {
      return "اليوم";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationAr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ar";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationAr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationAr.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationAr);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationAr, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationAr.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationAr, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationAs = class CupertinoLocalizationAs extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "সতৰ্কবাৰ্তা";
    }
    get anteMeridiemAbbreviation() {
      return "পূৰ্বাহ্ন";
    }
    get copyButtonLabel() {
      return "প্ৰতিলিপি কৰক";
    }
    get cutButtonLabel() {
      return "কাট কৰক";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour বাজিছে";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour বাজিছে";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "১মিনিট";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minuteমিনিট";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "পে" + "'" + "ষ্ট কৰক";
    }
    get postMeridiemAbbreviation() {
      return "অপৰাহ্ন";
    }
    get selectAllButtonLabel() {
      return "সকলো বাছনি কৰক";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ঘণ্টা";
    }
    get timerPickerHourLabelOther() {
      return "ঘণ্টা";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "মিনিট।";
    }
    get timerPickerMinuteLabelOther() {
      return "মিনিট।";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "ছেকেণ্ড।";
    }
    get timerPickerSecondLabelOther() {
      return "ছেকেণ্ড।";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "আজি";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationAs.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "as";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationAs.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationAs.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationAs);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationAs, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationAs.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationAs, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationAz = class CupertinoLocalizationAz extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Bildiriş";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopyalayın";
    }
    get cutButtonLabel() {
      return "Kəsin";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Saat $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "Saat $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 dəqiqə";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute dəqiqə";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Yerləşdirin";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Hamısını seçin";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "saat";
    }
    get timerPickerHourLabelOther() {
      return "saat";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "dəq.";
    }
    get timerPickerMinuteLabelOther() {
      return "dəq.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "san.";
    }
    get timerPickerSecondLabelOther() {
      return "san.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Bu gün";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationAz.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "az";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationAz.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationAz.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationAz);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationAz, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationAz.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationAz, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationBe = class CupertinoLocalizationBe extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Абвестка";
    }
    get anteMeridiemAbbreviation() {
      return "раніцы";
    }
    get copyButtonLabel() {
      return "Капіраваць";
    }
    get cutButtonLabel() {
      return "Выразаць";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour гадзіны нуль хвілін";
    }
    get datePickerHourSemanticsLabelMany() {
      return "$hour гадзін нуль хвілін";
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour гадзіна нуль хвілін";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour гадзіны нуль хвілін";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute хвіліны";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return "$minute хвілін";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 хвіліна";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute хвіліны";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Уставіць";
    }
    get postMeridiemAbbreviation() {
      return "вечара";
    }
    get selectAllButtonLabel() {
      return "Выбраць усе";
    }
    get timerPickerHourLabelFew() {
      return "гадзіны";
    }
    get timerPickerHourLabelMany() {
      return "гадзін";
    }
    get timerPickerHourLabelOne() {
      return "гадзіна";
    }
    get timerPickerHourLabelOther() {
      return "гадзіны";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "хв";
    }
    get timerPickerMinuteLabelMany() {
      return "хв";
    }
    get timerPickerMinuteLabelOne() {
      return "хв";
    }
    get timerPickerMinuteLabelOther() {
      return "хв";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "с";
    }
    get timerPickerSecondLabelMany() {
      return "с";
    }
    get timerPickerSecondLabelOne() {
      return "с";
    }
    get timerPickerSecondLabelOther() {
      return "с";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Сёння";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationBe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "be";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationBe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationBe.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationBe);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationBe, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationBe.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationBe, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationBg = class CupertinoLocalizationBg extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Сигнал";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Копиране";
    }
    get cutButtonLabel() {
      return "Изрязване";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour часа";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour часа";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 минута";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute минути";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Поставяне";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Избиране на всички";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "час";
    }
    get timerPickerHourLabelOther() {
      return "часа";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "мин";
    }
    get timerPickerMinuteLabelOther() {
      return "мин";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "сек";
    }
    get timerPickerSecondLabelOther() {
      return "сек";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Днес";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationBg.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "bg";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationBg.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationBg.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationBg);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationBg, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationBg.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationBg, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationBn = class CupertinoLocalizationBn extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "সতর্কতা";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "কপি করুন";
    }
    get cutButtonLabel() {
      return "কাট করুন";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hourটা বাজে";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hourটা বাজে";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "১ মিনিট";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute মিনিট";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "পেস্ট করুন";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "সব বেছে নিন";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ঘণ্টা";
    }
    get timerPickerHourLabelOther() {
      return "ঘণ্টা";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "মিনিট।";
    }
    get timerPickerMinuteLabelOther() {
      return "মিনিট।";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "সেকেন্ড।";
    }
    get timerPickerSecondLabelOther() {
      return "সেকেন্ড।";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "আজ";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationBn.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "bn";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationBn.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationBn.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationBn);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationBn, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationBn.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationBn, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationBs = class CupertinoLocalizationBs extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Upozorenje";
    }
    get anteMeridiemAbbreviation() {
      return "prijepodne";
    }
    get copyButtonLabel() {
      return "Kopiraj";
    }
    get cutButtonLabel() {
      return "Izreži";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour sata";
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour sat";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour sati";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute minute";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "Jedna minuta";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minuta";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Zalijepi";
    }
    get postMeridiemAbbreviation() {
      return "popodne";
    }
    get selectAllButtonLabel() {
      return "Odaberi sve";
    }
    get timerPickerHourLabelFew() {
      return "sata";
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "sat";
    }
    get timerPickerHourLabelOther() {
      return "sati";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "min";
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "s";
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Danas";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationBs.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "bs";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationBs.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationBs.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationBs);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationBs, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationBs.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationBs, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationCa = class CupertinoLocalizationCa extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Alerta";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Copia";
    }
    get cutButtonLabel() {
      return "Retalla";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punt";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punt";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minut";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minuts";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Enganxa";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Selecciona-ho tot";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "hora";
    }
    get timerPickerHourLabelOther() {
      return "hores";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Avui";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationCa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ca";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationCa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationCa.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationCa);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationCa, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationCa.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationCa, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationCs = class CupertinoLocalizationCs extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Upozornění";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopírovat";
    }
    get cutButtonLabel() {
      return "Vyjmout";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour hodiny";
    }
    get datePickerHourSemanticsLabelMany() {
      return "$hour hodiny";
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour hodina";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour hodin";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute minuty";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return "$minute minuty";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuta";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minut";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Vložit";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Vybrat vše";
    }
    get timerPickerHourLabelFew() {
      return "hodiny";
    }
    get timerPickerHourLabelMany() {
      return "hodiny";
    }
    get timerPickerHourLabelOne() {
      return "hodina";
    }
    get timerPickerHourLabelOther() {
      return "hodin";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "min";
    }
    get timerPickerMinuteLabelMany() {
      return "min";
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "s";
    }
    get timerPickerSecondLabelMany() {
      return "s";
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Dnes";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationCs.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "cs";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationCs.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationCs.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationCs);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationCs, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationCs.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationCs, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationDa = class CupertinoLocalizationDa extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Underretning";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopiér";
    }
    get cutButtonLabel() {
      return "Klip";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "klokken $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "klokken $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minut";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minutter";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Sæt ind";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Vælg alle";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "time";
    }
    get timerPickerHourLabelOther() {
      return "timer";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sek.";
    }
    get timerPickerSecondLabelOther() {
      return "sek.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "I dag";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationDa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "da";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationDa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationDa.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationDa);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationDa, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationDa.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationDa, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationDe = class CupertinoLocalizationDe extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Benachrichtigung";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopieren";
    }
    get cutButtonLabel() {
      return "Ausschneiden";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour Uhr";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour Uhr";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 Minute";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute Minuten";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Einsetzen";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Alles auswählen";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "Stunde";
    }
    get timerPickerHourLabelOther() {
      return "Stunden";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Heute";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationDe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "de";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationDe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationDe.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationDe);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationDe, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationDe.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationDe, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEl = class CupertinoLocalizationEl extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Ειδοποίηση";
    }
    get anteMeridiemAbbreviation() {
      return "π.μ.";
    }
    get copyButtonLabel() {
      return "Αντιγραφή";
    }
    get cutButtonLabel() {
      return "Αποκοπή";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour ακριβώς";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour ακριβώς";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 λεπτό";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute λεπτά";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Επικόλληση";
    }
    get postMeridiemAbbreviation() {
      return "μ.μ.";
    }
    get selectAllButtonLabel() {
      return "Επιλογή όλων";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ώρα";
    }
    get timerPickerHourLabelOther() {
      return "ώρες";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "λεπ.";
    }
    get timerPickerMinuteLabelOther() {
      return "λεπ.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "δευτ.";
    }
    get timerPickerSecondLabelOther() {
      return "δευτ.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Σήμερα";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "el";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEl.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEl);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationEl, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationEl.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEl, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEn = class CupertinoLocalizationEn extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Alert";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Copy";
    }
    get cutButtonLabel() {
      return "Cut";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour o" + "'" + "clock";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour o" + "'" + "clock";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minute";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minutes";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Paste";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Select All";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "hour";
    }
    get timerPickerHourLabelOther() {
      return "hours";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sec.";
    }
    get timerPickerSecondLabelOther() {
      return "sec.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Today";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEn.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEn.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEn.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEn);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationEn, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationEn.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEn, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEnAu = class CupertinoLocalizationEnAu extends generated_cupertino_localizations.CupertinoLocalizationEn {
    get datePickerDateOrderString() {
      return "dmy";
    }
    get selectAllButtonLabel() {
      return "Select all";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEnAu.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en_AU";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEnAu.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEnAu.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEnAu);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEnAu, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEnCa = class CupertinoLocalizationEnCa extends generated_cupertino_localizations.CupertinoLocalizationEn {
    get datePickerDateOrderString() {
      return "dmy";
    }
    get selectAllButtonLabel() {
      return "Select all";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEnCa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en_CA";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEnCa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEnCa.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEnCa);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEnCa, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEnGb = class CupertinoLocalizationEnGb extends generated_cupertino_localizations.CupertinoLocalizationEn {
    get datePickerDateOrderString() {
      return "dmy";
    }
    get selectAllButtonLabel() {
      return "Select all";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEnGb.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en_GB";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEnGb.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEnGb.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEnGb);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEnGb, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEnIe = class CupertinoLocalizationEnIe extends generated_cupertino_localizations.CupertinoLocalizationEn {
    get datePickerDateOrderString() {
      return "dmy";
    }
    get selectAllButtonLabel() {
      return "Select all";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEnIe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en_IE";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEnIe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEnIe.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEnIe);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEnIe, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEnIn = class CupertinoLocalizationEnIn extends generated_cupertino_localizations.CupertinoLocalizationEn {
    get datePickerDateOrderString() {
      return "dmy";
    }
    get selectAllButtonLabel() {
      return "Select all";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEnIn.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en_IN";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEnIn.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEnIn.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEnIn);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEnIn, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEnSg = class CupertinoLocalizationEnSg extends generated_cupertino_localizations.CupertinoLocalizationEn {
    get datePickerDateOrderString() {
      return "dmy";
    }
    get selectAllButtonLabel() {
      return "Select all";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEnSg.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en_SG";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEnSg.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEnSg.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEnSg);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEnSg, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEnZa = class CupertinoLocalizationEnZa extends generated_cupertino_localizations.CupertinoLocalizationEn {
    get datePickerDateOrderString() {
      return "dmy";
    }
    get selectAllButtonLabel() {
      return "Select all";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEnZa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "en_ZA";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEnZa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEnZa.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEnZa);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEnZa, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEs = class CupertinoLocalizationEs extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Alerta";
    }
    get anteMeridiemAbbreviation() {
      return "A.M.";
    }
    get copyButtonLabel() {
      return "Copiar";
    }
    get cutButtonLabel() {
      return "Cortar";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuto";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minutos";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Pegar";
    }
    get postMeridiemAbbreviation() {
      return "P.M.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todo";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "hora";
    }
    get timerPickerHourLabelOther() {
      return "horas";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Hoy";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEs.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEs.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEs.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEs);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationEs, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationEs.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEs, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEs419 = class CupertinoLocalizationEs419 extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todos";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEs419.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_419";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEs419.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEs419.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEs419);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEs419, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEsAr = class CupertinoLocalizationEsAr extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todos";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsAr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_AR";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsAr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsAr.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsAr);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsAr, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEsBo = class CupertinoLocalizationEsBo extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todos";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsBo.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_BO";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsBo.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsBo.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsBo);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsBo, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEsCl = class CupertinoLocalizationEsCl extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todos";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsCl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_CL";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsCl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsCl.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsCl);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsCl, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEsCo = class CupertinoLocalizationEsCo extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todos";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsCo.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_CO";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsCo.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsCo.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsCo);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsCo, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEsCr = class CupertinoLocalizationEsCr extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todos";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsCr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_CR";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsCr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsCr.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsCr);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsCr, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEsDo = class CupertinoLocalizationEsDo extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todos";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsDo.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_DO";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsDo.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsDo.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsDo);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsDo, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEsEc = class CupertinoLocalizationEsEc extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todos";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsEc.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_EC";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsEc.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsEc.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsEc);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsEc, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEsGt = class CupertinoLocalizationEsGt extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todos";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsGt.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_GT";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsGt.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsGt.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsGt);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsGt, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEsHn = class CupertinoLocalizationEsHn extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todos";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsHn.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_HN";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsHn.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsHn.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsHn);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsHn, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEsMx = class CupertinoLocalizationEsMx extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todos";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsMx.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_MX";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsMx.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsMx.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsMx);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsMx, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEsNi = class CupertinoLocalizationEsNi extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todos";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsNi.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_NI";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsNi.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsNi.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsNi);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsNi, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEsPa = class CupertinoLocalizationEsPa extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todos";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsPa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_PA";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsPa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsPa.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsPa);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsPa, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEsPe = class CupertinoLocalizationEsPe extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todos";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsPe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_PE";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsPe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsPe.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsPe);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsPe, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEsPr = class CupertinoLocalizationEsPr extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todos";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsPr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_PR";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsPr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsPr.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsPr);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsPr, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEsPy = class CupertinoLocalizationEsPy extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todos";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsPy.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_PY";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsPy.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsPy.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsPy);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsPy, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEsSv = class CupertinoLocalizationEsSv extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todos";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsSv.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_SV";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsSv.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsSv.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsSv);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsSv, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEsUs = class CupertinoLocalizationEsUs extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todos";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsUs.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_US";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsUs.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsUs.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsUs);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsUs, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEsUy = class CupertinoLocalizationEsUy extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todos";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsUy.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_UY";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsUy.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsUy.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsUy);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsUy, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEsVe = class CupertinoLocalizationEsVe extends generated_cupertino_localizations.CupertinoLocalizationEs {
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todos";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEsVe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "es_VE";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEsVe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEsVe.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEsVe);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEsVe, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEt = class CupertinoLocalizationEt extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Märguanne";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopeeri";
    }
    get cutButtonLabel() {
      return "Lõika";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Kell $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "Kell $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minut";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minutit";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Kleebi";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Vali kõik";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "tund";
    }
    get timerPickerHourLabelOther() {
      return "tundi";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Täna";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEt.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "et";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEt.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEt.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEt);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationEt, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationEt.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEt, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationEu = class CupertinoLocalizationEu extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Alerta";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopiatu";
    }
    get cutButtonLabel() {
      return "Ebaki";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Ordu$houra da";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hourak dira";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "Minutu bat";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minutu";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Itsatsi";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Hautatu guztiak";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ordu";
    }
    get timerPickerHourLabelOther() {
      return "ordu";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Gaur";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationEu.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "eu";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationEu.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationEu.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationEu);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationEu, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationEu.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationEu, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationFa = class CupertinoLocalizationFa extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "هشدار";
    }
    get anteMeridiemAbbreviation() {
      return "ق.ظ.";
    }
    get copyButtonLabel() {
      return "کپی";
    }
    get cutButtonLabel() {
      return "برش";
    }
    get datePickerDateOrderString() {
      return "ymd";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "ساعت $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "ساعت $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "۱ دقیقه";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute دقیقه";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "جای‌گذاری";
    }
    get postMeridiemAbbreviation() {
      return "ب.ظ.";
    }
    get selectAllButtonLabel() {
      return "انتخاب همه";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ساعت";
    }
    get timerPickerHourLabelOther() {
      return "ساعت";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "دقیقه";
    }
    get timerPickerMinuteLabelOther() {
      return "دقیقه";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "ثانیه";
    }
    get timerPickerSecondLabelOther() {
      return "ثانیه";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "امروز";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationFa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "fa";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationFa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationFa.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationFa);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationFa, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationFa.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationFa, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationFi = class CupertinoLocalizationFi extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Ilmoitus";
    }
    get anteMeridiemAbbreviation() {
      return "ap";
    }
    get copyButtonLabel() {
      return "Kopioi";
    }
    get cutButtonLabel() {
      return "Leikkaa";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "klo $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "klo $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuutti";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minuuttia";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Liitä";
    }
    get postMeridiemAbbreviation() {
      return "ip";
    }
    get selectAllButtonLabel() {
      return "Valitse kaikki";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "tunti";
    }
    get timerPickerHourLabelOther() {
      return "tuntia";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Tänään";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationFi.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "fi";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationFi.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationFi.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationFi);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationFi, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationFi.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationFi, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationFil = class CupertinoLocalizationFil extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Alerto";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopyahin";
    }
    get cutButtonLabel() {
      return "I-cut";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Ala $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "Alas $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuto";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute na minuto";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "I-paste";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Piliin Lahat";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "oras";
    }
    get timerPickerHourLabelOther() {
      return "na oras";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "na min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "seg.";
    }
    get timerPickerSecondLabelOther() {
      return "na seg.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Ngayon";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationFil.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "fil";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationFil.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationFil.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationFil);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationFil, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationFil.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationFil, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationFr = class CupertinoLocalizationFr extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Alerte";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Copier";
    }
    get cutButtonLabel() {
      return "Couper";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour heure";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour heures";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minute";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minutes";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Coller";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Tout sélect.";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "heure";
    }
    get timerPickerHourLabelOther() {
      return "heures";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "minute";
    }
    get timerPickerMinuteLabelOther() {
      return "minutes";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "aujourd" + "'" + "hui";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationFr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "fr";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationFr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationFr.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationFr);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationFr, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationFr.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationFr, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationFrCa = class CupertinoLocalizationFrCa extends generated_cupertino_localizations.CupertinoLocalizationFr {
    get datePickerHourSemanticsLabelOne() {
      return "$hour heure";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour heures";
    }
    get anteMeridiemAbbreviation() {
      return "am";
    }
    get postMeridiemAbbreviation() {
      return "pm";
    }
    get todayLabel() {
      return "Aujourd" + "'" + "hui";
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get selectAllButtonLabel() {
      return "Tout sélectionner";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationFrCa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "fr_CA";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationFrCa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationFrCa.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationFrCa);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationFrCa, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationGl = class CupertinoLocalizationGl extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Alerta";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get copyButtonLabel() {
      return "Copiar";
    }
    get cutButtonLabel() {
      return "Cortar";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour en punto";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuto";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minutos";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Pegar";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Seleccionar todo";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "hora";
    }
    get timerPickerHourLabelOther() {
      return "horas";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Hoxe";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationGl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "gl";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationGl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationGl.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationGl);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationGl, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationGl.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationGl, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationGsw = class CupertinoLocalizationGsw extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Benachrichtigung";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopieren";
    }
    get cutButtonLabel() {
      return "Ausschneiden";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour Uhr";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour Uhr";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 Minute";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute Minuten";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Einsetzen";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Alles auswählen";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "Stunde";
    }
    get timerPickerHourLabelOther() {
      return "Stunden";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Heute";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationGsw.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "gsw";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationGsw.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationGsw.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationGsw);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationGsw, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationGsw.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationGsw, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationGu = class CupertinoLocalizationGu extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "અલર્ટ";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "કૉપિ કરો";
    }
    get cutButtonLabel() {
      return "કાપો";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour વાગ્યો છે";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour વાગ્યા છે";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 મિનિટ";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute મિનિટ";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "પેસ્ટ કરો";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "બધા પસંદ કરો";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "કલાક";
    }
    get timerPickerHourLabelOther() {
      return "કલાક";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "મિનિટ";
    }
    get timerPickerMinuteLabelOther() {
      return "મિનિટ";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "સેકન્ડ";
    }
    get timerPickerSecondLabelOther() {
      return "સેકન્ડ";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "આજે";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationGu.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "gu";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationGu.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationGu.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationGu);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationGu, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationGu.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationGu, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationHe = class CupertinoLocalizationHe extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "התראה";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "העתקה";
    }
    get cutButtonLabel() {
      return "גזירה";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return "$hour בדיוק";
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour בדיוק";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour בדיוק";
    }
    get datePickerHourSemanticsLabelTwo() {
      return "$hour בדיוק";
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return "$minute דקות";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "דקה אחת";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute דקות";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return "$minute דקות";
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "הדבקה";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "בחירת הכול";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return "שעות";
    }
    get timerPickerHourLabelOne() {
      return "שעה";
    }
    get timerPickerHourLabelOther() {
      return "שעות";
    }
    get timerPickerHourLabelTwo() {
      return "שעות";
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return "דק’";
    }
    get timerPickerMinuteLabelOne() {
      return "דק’";
    }
    get timerPickerMinuteLabelOther() {
      return "דק’";
    }
    get timerPickerMinuteLabelTwo() {
      return "דק’";
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return "שנ’";
    }
    get timerPickerSecondLabelOne() {
      return "שנ’";
    }
    get timerPickerSecondLabelOther() {
      return "שנ’";
    }
    get timerPickerSecondLabelTwo() {
      return "שנ’";
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "היום";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationHe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "he";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationHe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationHe.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationHe);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationHe, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationHe.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationHe, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationHi = class CupertinoLocalizationHi extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "अलर्ट";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "कॉपी करें";
    }
    get cutButtonLabel() {
      return "काटें";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour बजे";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour बजे";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 मिनट";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute मिनट";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "चिपकाएं";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "सभी चुनें";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "घंटा";
    }
    get timerPickerHourLabelOther() {
      return "घंटे";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "मिनट";
    }
    get timerPickerMinuteLabelOther() {
      return "मिनट";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "सेकंड";
    }
    get timerPickerSecondLabelOther() {
      return "सेकंड";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "आज";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationHi.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "hi";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationHi.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationHi.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationHi);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationHi, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationHi.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationHi, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationHr = class CupertinoLocalizationHr extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Upozorenje";
    }
    get anteMeridiemAbbreviation() {
      return "prijepodne";
    }
    get copyButtonLabel() {
      return "Kopiraj";
    }
    get cutButtonLabel() {
      return "Izreži";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour sata";
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour sat";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour sati";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute minute";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "Jedna minuta";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minuta";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Zalijepi";
    }
    get postMeridiemAbbreviation() {
      return "popodne";
    }
    get selectAllButtonLabel() {
      return "Odaberi sve";
    }
    get timerPickerHourLabelFew() {
      return "sata";
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "sat";
    }
    get timerPickerHourLabelOther() {
      return "sati";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "min";
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "s";
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Danas";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationHr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "hr";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationHr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationHr.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationHr);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationHr, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationHr.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationHr, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationHu = class CupertinoLocalizationHu extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Értesítés";
    }
    get anteMeridiemAbbreviation() {
      return "de.";
    }
    get copyButtonLabel() {
      return "Másolás";
    }
    get cutButtonLabel() {
      return "Kivágás";
    }
    get datePickerDateOrderString() {
      return "ymd";
    }
    get datePickerDateTimeOrderString() {
      return "date_dayPeriod_time";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour óra";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour óra";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 perc";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute perc";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Beillesztés";
    }
    get postMeridiemAbbreviation() {
      return "du.";
    }
    get selectAllButtonLabel() {
      return "Összes kijelölése";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "óra";
    }
    get timerPickerHourLabelOther() {
      return "óra";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "perc";
    }
    get timerPickerMinuteLabelOther() {
      return "perc";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "mp";
    }
    get timerPickerSecondLabelOther() {
      return "mp";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Ma";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationHu.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "hu";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationHu.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationHu.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationHu);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationHu, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationHu.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationHu, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationHy = class CupertinoLocalizationHy extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Ծանուցում";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Պատճենել";
    }
    get cutButtonLabel() {
      return "Կտրել";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour:00";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour:00";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 րոպե";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute րոպե";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Տեղադրել";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Նշել բոլորը";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ժամ";
    }
    get timerPickerHourLabelOther() {
      return "ժամ";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "րոպե";
    }
    get timerPickerMinuteLabelOther() {
      return "րոպե";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "վրկ";
    }
    get timerPickerSecondLabelOther() {
      return "վրկ";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Այսօր";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationHy.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "hy";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationHy.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationHy.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationHy);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationHy, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationHy.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationHy, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationId = class CupertinoLocalizationId extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Notifikasi";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Salin";
    }
    get cutButtonLabel() {
      return "Potong";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour tepat";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour tepat";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 menit";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute menit";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Tempel";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Pilih Semua";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "jam";
    }
    get timerPickerHourLabelOther() {
      return "jam";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "mnt.";
    }
    get timerPickerMinuteLabelOther() {
      return "mnt.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "dtk.";
    }
    get timerPickerSecondLabelOther() {
      return "dtk.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Hari ini";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationId.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "id";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationId.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationId.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationId);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationId, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationId.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationId, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationIs = class CupertinoLocalizationIs extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Tilkynning";
    }
    get anteMeridiemAbbreviation() {
      return "f.h.";
    }
    get copyButtonLabel() {
      return "Afrita";
    }
    get cutButtonLabel() {
      return "Klippa";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "klukkan $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "klukkan $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 mínúta";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute mínútur";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Líma";
    }
    get postMeridiemAbbreviation() {
      return "e.h.";
    }
    get selectAllButtonLabel() {
      return "Velja allt";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "klukkustund";
    }
    get timerPickerHourLabelOther() {
      return "klukkustundir";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "mín.";
    }
    get timerPickerMinuteLabelOther() {
      return "mín.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sek.";
    }
    get timerPickerSecondLabelOther() {
      return "sek.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Í dag";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationIs.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "is";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationIs.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationIs.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationIs);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationIs, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationIs.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationIs, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationIt = class CupertinoLocalizationIt extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Avviso";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Copia";
    }
    get cutButtonLabel() {
      return "Taglia";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour in punto";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour in punto";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuto";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minuti";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Incolla";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Seleziona tutto";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ora";
    }
    get timerPickerHourLabelOther() {
      return "ore";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sec.";
    }
    get timerPickerSecondLabelOther() {
      return "sec.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Oggi";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationIt.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "it";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationIt.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationIt.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationIt);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationIt, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationIt.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationIt, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationJa = class CupertinoLocalizationJa extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "通知";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "コピー";
    }
    get cutButtonLabel() {
      return "切り取り";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour時";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour時";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1分";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute分";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "貼り付け";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "すべて選択";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "時間";
    }
    get timerPickerHourLabelOther() {
      return "時間";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "分";
    }
    get timerPickerMinuteLabelOther() {
      return "分";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "秒";
    }
    get timerPickerSecondLabelOther() {
      return "秒";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "今日";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationJa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ja";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationJa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationJa.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationJa);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationJa, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationJa.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationJa, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationKa = class CupertinoLocalizationKa extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "გაფრთხილება";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "კოპირება";
    }
    get cutButtonLabel() {
      return "ამოჭრა";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_dayPeriod_time";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour საათი";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour საათი";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 წუთი";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute წუთი";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "ჩასმა";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "ყველას არჩევა";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "საათი";
    }
    get timerPickerHourLabelOther() {
      return "საათი";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "წთ";
    }
    get timerPickerMinuteLabelOther() {
      return "წთ";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "წმ";
    }
    get timerPickerSecondLabelOther() {
      return "წმ";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "დღეს";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationKa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ka";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationKa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationKa.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationKa);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationKa, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationKa.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationKa, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationKk = class CupertinoLocalizationKk extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Дабыл";
    }
    get anteMeridiemAbbreviation() {
      return "түстен кейін";
    }
    get copyButtonLabel() {
      return "Көшіру";
    }
    get cutButtonLabel() {
      return "Қию";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Сағат: $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "Сағат: $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 минут";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute минут";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Қою";
    }
    get postMeridiemAbbreviation() {
      return "түстен кейін";
    }
    get selectAllButtonLabel() {
      return "Барлығын таңдау";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "сағат";
    }
    get timerPickerHourLabelOther() {
      return "сағат";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "мин";
    }
    get timerPickerMinuteLabelOther() {
      return "мин";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "сек";
    }
    get timerPickerSecondLabelOther() {
      return "сек";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Бүгін";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationKk.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "kk";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationKk.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationKk.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationKk);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationKk, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationKk.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationKk, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationKm = class CupertinoLocalizationKm extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "ជូនដំណឹង";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "ចម្លង";
    }
    get cutButtonLabel() {
      return "កាត់";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "ម៉ោង $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "ម៉ោង $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 នាទី";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute នាទី";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "ដាក់​ចូល";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "ជ្រើសរើស​ទាំងអស់";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ម៉ោង";
    }
    get timerPickerHourLabelOther() {
      return "ម៉ោង";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "នាទី";
    }
    get timerPickerMinuteLabelOther() {
      return "នាទី";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "វិនាទី";
    }
    get timerPickerSecondLabelOther() {
      return "វិនាទី";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "ថ្ងៃនេះ";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationKm.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "km";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationKm.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationKm.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationKm);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationKm, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationKm.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationKm, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationKn = class CupertinoLocalizationKn extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "ಎಚ್ಚರಿಕೆ";
    }
    get anteMeridiemAbbreviation() {
      return "ಬೆಳಿಗ್ಗೆ";
    }
    get copyButtonLabel() {
      return "ನಕಲಿಸಿ";
    }
    get cutButtonLabel() {
      return "ಕತ್ತರಿಸಿ";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour ಗಂಟೆ";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour ಗಂಟೆ";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 ನಿಮಿಷ";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute ನಿಮಿಷಗಳು";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "ಅಂಟಿಸಿ";
    }
    get postMeridiemAbbreviation() {
      return "ಸಂಜೆ";
    }
    get selectAllButtonLabel() {
      return "ಎಲ್ಲವನ್ನೂ ಆಯ್ಕೆಮಾಡಿ";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ಗಂಟೆ";
    }
    get timerPickerHourLabelOther() {
      return "ಗಂಟೆಗಳು";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "ನಿಮಿ.";
    }
    get timerPickerMinuteLabelOther() {
      return "ನಿಮಿ.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "ಸೆ.";
    }
    get timerPickerSecondLabelOther() {
      return "ಸೆ.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "ಇಂದು";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationKn.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "kn";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationKn.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationKn.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationKn);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationKn, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationKn.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationKn, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationKo = class CupertinoLocalizationKo extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "알림";
    }
    get anteMeridiemAbbreviation() {
      return "오전";
    }
    get copyButtonLabel() {
      return "복사";
    }
    get cutButtonLabel() {
      return "잘라냄";
    }
    get datePickerDateOrderString() {
      return "ymd";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour시 정각";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour시 정각";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1분";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute분";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "붙여넣기";
    }
    get postMeridiemAbbreviation() {
      return "오후";
    }
    get selectAllButtonLabel() {
      return "전체 선택";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "시간";
    }
    get timerPickerHourLabelOther() {
      return "시간";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "분";
    }
    get timerPickerMinuteLabelOther() {
      return "분";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "초";
    }
    get timerPickerSecondLabelOther() {
      return "초";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "오늘";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationKo.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ko";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationKo.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationKo.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationKo);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationKo, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationKo.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationKo, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationKy = class CupertinoLocalizationKy extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Эскертүү";
    }
    get anteMeridiemAbbreviation() {
      return "түшкө чейин";
    }
    get copyButtonLabel() {
      return "Көчүрүү";
    }
    get cutButtonLabel() {
      return "Кесүү";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Саат $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "Саат $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 мүнөт";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute мүнөт";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Чаптоо";
    }
    get postMeridiemAbbreviation() {
      return "түштөн кийин";
    }
    get selectAllButtonLabel() {
      return "Баарын тандоо";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "саат";
    }
    get timerPickerHourLabelOther() {
      return "саат";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "мүн.";
    }
    get timerPickerMinuteLabelOther() {
      return "мүн.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "сек.";
    }
    get timerPickerSecondLabelOther() {
      return "сек.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Бүгүн";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationKy.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ky";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationKy.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationKy.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationKy);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationKy, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationKy.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationKy, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationLo = class CupertinoLocalizationLo extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "ການເຕືອນ";
    }
    get anteMeridiemAbbreviation() {
      return "ກ່ອນທ່ຽງ";
    }
    get copyButtonLabel() {
      return "ສຳເນົາ";
    }
    get cutButtonLabel() {
      return "ຕັດ";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour ໂມງກົງ";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour ໂມງກົງ";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 ນາທີ";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute ນາທີ";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "ວາງ";
    }
    get postMeridiemAbbreviation() {
      return "ຫຼັງທ່ຽງ";
    }
    get selectAllButtonLabel() {
      return "ເລືອກທັງໝົດ";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ຊົ່ວໂມງ";
    }
    get timerPickerHourLabelOther() {
      return "ຊົ່ວໂມງ";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "ນທ.";
    }
    get timerPickerMinuteLabelOther() {
      return "ນທ.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "ວິ.";
    }
    get timerPickerSecondLabelOther() {
      return "ວິ.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "ມື້ນີ້";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationLo.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "lo";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationLo.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationLo.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationLo);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationLo, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationLo.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationLo, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationLt = class CupertinoLocalizationLt extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Įspėjimas";
    }
    get anteMeridiemAbbreviation() {
      return "priešpiet";
    }
    get copyButtonLabel() {
      return "Kopijuoti";
    }
    get cutButtonLabel() {
      return "Iškirpti";
    }
    get datePickerDateOrderString() {
      return "ymd";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour val.";
    }
    get datePickerHourSemanticsLabelMany() {
      return "$hour val.";
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour val.";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour val.";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute min.";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return "$minute min.";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 min.";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute min.";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Įklijuoti";
    }
    get postMeridiemAbbreviation() {
      return "popiet";
    }
    get selectAllButtonLabel() {
      return "Pasirinkti viską";
    }
    get timerPickerHourLabelFew() {
      return "val.";
    }
    get timerPickerHourLabelMany() {
      return "val.";
    }
    get timerPickerHourLabelOne() {
      return "val.";
    }
    get timerPickerHourLabelOther() {
      return "val.";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "min.";
    }
    get timerPickerMinuteLabelMany() {
      return "min.";
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "sek.";
    }
    get timerPickerSecondLabelMany() {
      return "sek.";
    }
    get timerPickerSecondLabelOne() {
      return "sek.";
    }
    get timerPickerSecondLabelOther() {
      return "sek.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Šiandien";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationLt.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "lt";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationLt.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationLt.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationLt);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationLt, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationLt.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationLt, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationLv = class CupertinoLocalizationLv extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Brīdinājums";
    }
    get anteMeridiemAbbreviation() {
      return "priekšpusdienā";
    }
    get copyButtonLabel() {
      return "Kopēt";
    }
    get cutButtonLabel() {
      return "Izgriezt";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "plkst. $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "plkst. $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return "plkst. $hour";
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minūte";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minūtes";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return "$minute minūtes";
    }
    get pasteButtonLabel() {
      return "Ielīmēt";
    }
    get postMeridiemAbbreviation() {
      return "pēcpusdienā";
    }
    get selectAllButtonLabel() {
      return "Atlasīt visu";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "h";
    }
    get timerPickerHourLabelOther() {
      return "h";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return "h";
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return "min";
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return "s";
    }
    get todayLabel() {
      return "Šodien";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationLv.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "lv";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationLv.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationLv.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationLv);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationLv, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationLv.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationLv, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationMk = class CupertinoLocalizationMk extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Предупредување";
    }
    get anteMeridiemAbbreviation() {
      return "ПРЕТПЛАДНЕ";
    }
    get copyButtonLabel() {
      return "Копирај";
    }
    get cutButtonLabel() {
      return "Исечи";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour часот";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour часот";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 минута";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute минути";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Залепи";
    }
    get postMeridiemAbbreviation() {
      return "ПОПЛАДНЕ";
    }
    get selectAllButtonLabel() {
      return "Избери ги сите";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "час";
    }
    get timerPickerHourLabelOther() {
      return "часа";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "мин.";
    }
    get timerPickerMinuteLabelOther() {
      return "мин.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "сек.";
    }
    get timerPickerSecondLabelOther() {
      return "сек.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Денес";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationMk.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "mk";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationMk.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationMk.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationMk);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationMk, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationMk.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationMk, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationMl = class CupertinoLocalizationMl extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "മുന്നറിയിപ്പ്";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "പകർത്തുക";
    }
    get cutButtonLabel() {
      return "മുറിക്കുക";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour മണി";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour മണി";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "ഒരു മിനിറ്റ്";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute മിനിറ്റ്";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "ഒട്ടിക്കുക";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "എല്ലാം തിരഞ്ഞെടുക്കുക";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "മണിക്കൂർ";
    }
    get timerPickerHourLabelOther() {
      return "മണിക്കൂർ";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "മിനിറ്റ്";
    }
    get timerPickerMinuteLabelOther() {
      return "മിനിറ്റ്";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "സെക്കൻഡ്";
    }
    get timerPickerSecondLabelOther() {
      return "സെക്കൻഡ്";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "ഇന്ന്";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationMl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ml";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationMl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationMl.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationMl);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationMl, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationMl.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationMl, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationMn = class CupertinoLocalizationMn extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Сэрэмжлүүлэг";
    }
    get anteMeridiemAbbreviation() {
      return "ӨГЛӨӨ";
    }
    get copyButtonLabel() {
      return "Хуулах";
    }
    get cutButtonLabel() {
      return "Таслах";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour цаг";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour цаг";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 минут";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute минут";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Буулгах";
    }
    get postMeridiemAbbreviation() {
      return "ОРОЙ";
    }
    get selectAllButtonLabel() {
      return "Бүгдийг сонгох";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "цаг";
    }
    get timerPickerHourLabelOther() {
      return "цаг";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "минут.";
    }
    get timerPickerMinuteLabelOther() {
      return "минут.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "секунд.";
    }
    get timerPickerSecondLabelOther() {
      return "секунд.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Өнөөдөр";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationMn.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "mn";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationMn.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationMn.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationMn);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationMn, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationMn.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationMn, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationMr = class CupertinoLocalizationMr extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "सूचना";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "कॉपी करा";
    }
    get cutButtonLabel() {
      return "कट करा";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour वाजता";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour वाजता";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "एक मिनिट";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute मिनिटे";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "पेस्ट करा";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "सर्व निवडा";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "तास";
    }
    get timerPickerHourLabelOther() {
      return "तास";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "मि.";
    }
    get timerPickerMinuteLabelOther() {
      return "मि.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "से.";
    }
    get timerPickerSecondLabelOther() {
      return "से.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "आज";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationMr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "mr";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationMr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationMr.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationMr);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationMr, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationMr.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationMr, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationMs = class CupertinoLocalizationMs extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Makluman";
    }
    get anteMeridiemAbbreviation() {
      return "PG";
    }
    get copyButtonLabel() {
      return "Salin";
    }
    get cutButtonLabel() {
      return "Potong";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Pukul $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "Pukul $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minit";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minit";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Tampal";
    }
    get postMeridiemAbbreviation() {
      return "PTG";
    }
    get selectAllButtonLabel() {
      return "Pilih Semua";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "jam";
    }
    get timerPickerHourLabelOther() {
      return "jam";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "minit";
    }
    get timerPickerMinuteLabelOther() {
      return "minit";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "saat";
    }
    get timerPickerSecondLabelOther() {
      return "saat";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Hari ini";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationMs.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ms";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationMs.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationMs.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationMs);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationMs, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationMs.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationMs, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationMy = class CupertinoLocalizationMy extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "သတိပေးချက်";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "မိတ္တူကူးရန်";
    }
    get cutButtonLabel() {
      return "ဖြတ်ယူရန်";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour နာရီ";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour နာရီ";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "၁ မိနစ်";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute မိနစ်";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "ကူးထည့်ရန်";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "အားလုံး ရွေးရန်";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "နာရီ";
    }
    get timerPickerHourLabelOther() {
      return "နာရီ";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "မိနစ်";
    }
    get timerPickerMinuteLabelOther() {
      return "မိနစ်";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "စက္ကန့်";
    }
    get timerPickerSecondLabelOther() {
      return "စက္ကန့်";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "ယနေ့";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationMy.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "my";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationMy.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationMy.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationMy);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationMy, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationMy.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationMy, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationNb = class CupertinoLocalizationNb extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Varsel";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopiér";
    }
    get cutButtonLabel() {
      return "Klipp ut";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour null-null";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour null-null";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minutt";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minutter";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Lim inn";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Velg alle";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "time";
    }
    get timerPickerHourLabelOther() {
      return "timer";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sek.";
    }
    get timerPickerSecondLabelOther() {
      return "sek.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "I dag";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationNb.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "nb";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationNb.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationNb.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationNb);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationNb, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationNb.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationNb, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationNe = class CupertinoLocalizationNe extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "अलर्ट";
    }
    get anteMeridiemAbbreviation() {
      return "पूर्वाह्न";
    }
    get copyButtonLabel() {
      return "प्रतिलिपि गर्नुहोस्";
    }
    get cutButtonLabel() {
      return "काट्नुहोस्";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour बजे";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour बजे";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "१ मिनेट";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute मिनेट";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "टाँस्नुहोस्";
    }
    get postMeridiemAbbreviation() {
      return "अपराह्न";
    }
    get selectAllButtonLabel() {
      return "सबै चयन गर्नुहोस्";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "घन्टा";
    }
    get timerPickerHourLabelOther() {
      return "घन्टा";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "मिनेट";
    }
    get timerPickerMinuteLabelOther() {
      return "मिनेट";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "सेकेन्ड";
    }
    get timerPickerSecondLabelOther() {
      return "सेकेन्ड";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "आज";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationNe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ne";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationNe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationNe.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationNe);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationNe, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationNe.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationNe, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationNl = class CupertinoLocalizationNl extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Melding";
    }
    get anteMeridiemAbbreviation() {
      return "am";
    }
    get copyButtonLabel() {
      return "Kopiëren";
    }
    get cutButtonLabel() {
      return "Knippen";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour uur";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour uur";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuut";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minuten";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Plakken";
    }
    get postMeridiemAbbreviation() {
      return "pm";
    }
    get selectAllButtonLabel() {
      return "Alles selecteren";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "uur";
    }
    get timerPickerHourLabelOther() {
      return "uur";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sec.";
    }
    get timerPickerSecondLabelOther() {
      return "sec.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Vandaag";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationNl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "nl";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationNl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationNl.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationNl);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationNl, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationNl.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationNl, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationOr = class CupertinoLocalizationOr extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "ଆଲର୍ଟ";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "କପି କରନ୍ତୁ";
    }
    get cutButtonLabel() {
      return "କଟ୍ କରନ୍ତୁ";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hourଟା";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hourଟା";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 ମିନିଟ୍";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute ମିନିଟ୍";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "ପେଷ୍ଟ କରନ୍ତୁ";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "ସମସ୍ତ ଚୟନ କରନ୍ତୁ";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ଘଣ୍ଟା";
    }
    get timerPickerHourLabelOther() {
      return "ଘଣ୍ଟା";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "ମିନିଟ୍";
    }
    get timerPickerMinuteLabelOther() {
      return "ମିନିଟ୍";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "ସେକେଣ୍ଡ";
    }
    get timerPickerSecondLabelOther() {
      return "ସେକେଣ୍ଡ";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "ଆଜି";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationOr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "or";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationOr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationOr.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationOr);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationOr, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationOr.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationOr, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationPa = class CupertinoLocalizationPa extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "ਸੁਚੇਤਨਾ";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "ਕਾਪੀ ਕਰੋ";
    }
    get cutButtonLabel() {
      return "ਕੱਟ ਕਰੋ";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour ਵਜੇ";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour ਵਜੇ";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 ਮਿੰਟ";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute ਮਿੰਟ";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "ਪੇਸਟ ਕਰੋ";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "ਸਭ ਚੁਣੋ";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ਘੰਟਾ";
    }
    get timerPickerHourLabelOther() {
      return "ਘੰਟੇ";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "ਮਿੰ.";
    }
    get timerPickerMinuteLabelOther() {
      return "ਮਿੰ.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "ਸਕਿੰ.";
    }
    get timerPickerSecondLabelOther() {
      return "ਸਕਿੰ.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "ਅੱਜ";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationPa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "pa";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationPa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationPa.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationPa);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationPa, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationPa.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationPa, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationPl = class CupertinoLocalizationPl extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Alert";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopiuj";
    }
    get cutButtonLabel() {
      return "Wytnij";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour";
    }
    get datePickerHourSemanticsLabelMany() {
      return "$hour";
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute minuty";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return "$minute minut";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuta";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minuty";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Wklej";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Wybierz wszystkie";
    }
    get timerPickerHourLabelFew() {
      return "godziny";
    }
    get timerPickerHourLabelMany() {
      return "godzin";
    }
    get timerPickerHourLabelOne() {
      return "godzina";
    }
    get timerPickerHourLabelOther() {
      return "godziny";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "min";
    }
    get timerPickerMinuteLabelMany() {
      return "min";
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "s";
    }
    get timerPickerSecondLabelMany() {
      return "s";
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Dziś";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationPl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "pl";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationPl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationPl.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationPl);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationPl, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationPl.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationPl, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationPt = class CupertinoLocalizationPt extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Alerta";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Copiar";
    }
    get cutButtonLabel() {
      return "Cortar";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour hora";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour horas";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuto";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minutos";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Colar";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Selecionar Tudo";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "hora";
    }
    get timerPickerHourLabelOther() {
      return "horas";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Hoje";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationPt.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "pt";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationPt.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationPt.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationPt);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationPt, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationPt.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationPt, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationPtPt = class CupertinoLocalizationPtPt extends generated_cupertino_localizations.CupertinoLocalizationPt {
    get datePickerHourSemanticsLabelOther() {
      return "$hour hora";
    }
    get timerPickerSecondLabelOne() {
      return "seg";
    }
    get timerPickerSecondLabelOther() {
      return "seg";
    }
    get selectAllButtonLabel() {
      return "Selecionar tudo";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationPtPt.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "pt_PT";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationPtPt.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationPtPt.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationPtPt);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationPtPt, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationRo = class CupertinoLocalizationRo extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Alertă";
    }
    get anteMeridiemAbbreviation() {
      return "a.m.";
    }
    get copyButtonLabel() {
      return "Copiați";
    }
    get cutButtonLabel() {
      return "Decupați";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "Ora $hour";
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Ora $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "Ora $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute minute";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minut";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute de minute";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Inserați";
    }
    get postMeridiemAbbreviation() {
      return "p.m.";
    }
    get selectAllButtonLabel() {
      return "Selectați-le pe toate";
    }
    get timerPickerHourLabelFew() {
      return "ore";
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "oră";
    }
    get timerPickerHourLabelOther() {
      return "de ore";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "min.";
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "sec.";
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sec.";
    }
    get timerPickerSecondLabelOther() {
      return "sec.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Azi";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationRo.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ro";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationRo.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationRo.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationRo);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationRo, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationRo.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationRo, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationRu = class CupertinoLocalizationRu extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Оповещение";
    }
    get anteMeridiemAbbreviation() {
      return "АМ";
    }
    get copyButtonLabel() {
      return "Копировать";
    }
    get cutButtonLabel() {
      return "Вырезать";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour часа";
    }
    get datePickerHourSemanticsLabelMany() {
      return "$hour часов";
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour час";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour часа";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute минуты";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return "$minute минут";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 минута";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute минуты";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Вставить";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Выбрать все";
    }
    get timerPickerHourLabelFew() {
      return "часа";
    }
    get timerPickerHourLabelMany() {
      return "часов";
    }
    get timerPickerHourLabelOne() {
      return "час";
    }
    get timerPickerHourLabelOther() {
      return "часа";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "мин.";
    }
    get timerPickerMinuteLabelMany() {
      return "мин.";
    }
    get timerPickerMinuteLabelOne() {
      return "мин.";
    }
    get timerPickerMinuteLabelOther() {
      return "мин.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "сек.";
    }
    get timerPickerSecondLabelMany() {
      return "сек.";
    }
    get timerPickerSecondLabelOne() {
      return "сек.";
    }
    get timerPickerSecondLabelOther() {
      return "сек.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Сегодня";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationRu.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ru";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationRu.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationRu.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationRu);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationRu, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationRu.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationRu, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationSi = class CupertinoLocalizationSi extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "ඇඟවීම";
    }
    get anteMeridiemAbbreviation() {
      return "පෙ.ව.";
    }
    get copyButtonLabel() {
      return "පිටපත් කරන්න";
    }
    get cutButtonLabel() {
      return "කපන්න";
    }
    get datePickerDateOrderString() {
      return "ymd";
    }
    get datePickerDateTimeOrderString() {
      return "date_dayPeriod_time";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hourයි";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hourයි";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "මිනිත්තු 1";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "මිනිත්තු $minute";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "අලවන්න";
    }
    get postMeridiemAbbreviation() {
      return "ප.ව.";
    }
    get selectAllButtonLabel() {
      return "සියල්ල තෝරන්න";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "පැය";
    }
    get timerPickerHourLabelOther() {
      return "පැය";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "මිනි.";
    }
    get timerPickerMinuteLabelOther() {
      return "මිනි.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "තත්.";
    }
    get timerPickerSecondLabelOther() {
      return "තත්.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "අද";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationSi.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "si";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationSi.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationSi.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationSi);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationSi, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationSi.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationSi, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationSk = class CupertinoLocalizationSk extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Upozornenie";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopírovať";
    }
    get cutButtonLabel() {
      return "Vystrihnúť";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour hodiny";
    }
    get datePickerHourSemanticsLabelMany() {
      return "$hour hodiny";
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour hodina";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour hodín";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute minúty";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return "$minute minúty";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minúta";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minút";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Prilepiť";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Vybrať všetko";
    }
    get timerPickerHourLabelFew() {
      return "hodiny";
    }
    get timerPickerHourLabelMany() {
      return "hodiny";
    }
    get timerPickerHourLabelOne() {
      return "hodina";
    }
    get timerPickerHourLabelOther() {
      return "hodín";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "min";
    }
    get timerPickerMinuteLabelMany() {
      return "min";
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "s";
    }
    get timerPickerSecondLabelMany() {
      return "s";
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Dnes";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationSk.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sk";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationSk.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationSk.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationSk);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationSk, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationSk.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationSk, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationSl = class CupertinoLocalizationSl extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Opozorilo";
    }
    get anteMeridiemAbbreviation() {
      return "DOP.";
    }
    get copyButtonLabel() {
      return "Kopiraj";
    }
    get cutButtonLabel() {
      return "Izreži";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour";
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return "$hour";
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute minute";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuta";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minut";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return "$minute minuti";
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Prilepi";
    }
    get postMeridiemAbbreviation() {
      return "POP.";
    }
    get selectAllButtonLabel() {
      return "Izberi vse";
    }
    get timerPickerHourLabelFew() {
      return "ure";
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ura";
    }
    get timerPickerHourLabelOther() {
      return "ure";
    }
    get timerPickerHourLabelTwo() {
      return "ure";
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "min";
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return "min";
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "s";
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "s";
    }
    get timerPickerSecondLabelOther() {
      return "s";
    }
    get timerPickerSecondLabelTwo() {
      return "s";
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Danes";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationSl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sl";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationSl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationSl.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationSl);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationSl, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationSl.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationSl, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationSq = class CupertinoLocalizationSq extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Sinjalizim";
    }
    get anteMeridiemAbbreviation() {
      return "paradite";
    }
    get copyButtonLabel() {
      return "Kopjo";
    }
    get cutButtonLabel() {
      return "Prit";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour fiks";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour fiks";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minutë";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minuta";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Ngjit";
    }
    get postMeridiemAbbreviation() {
      return "pasdite";
    }
    get selectAllButtonLabel() {
      return "Zgjidhi të gjitha";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "orë";
    }
    get timerPickerHourLabelOther() {
      return "orë";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sek.";
    }
    get timerPickerSecondLabelOther() {
      return "sek.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Sot";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationSq.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sq";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationSq.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationSq.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationSq);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationSq, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationSq.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationSq, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationSr = class CupertinoLocalizationSr extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Обавештење";
    }
    get anteMeridiemAbbreviation() {
      return "пре подне";
    }
    get copyButtonLabel() {
      return "Копирај";
    }
    get cutButtonLabel() {
      return "Исеци";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour сата";
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour сат";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour сати";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute минута";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 минут";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute минута";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Налепи";
    }
    get postMeridiemAbbreviation() {
      return "по подне";
    }
    get selectAllButtonLabel() {
      return "Изабери све";
    }
    get timerPickerHourLabelFew() {
      return "сата";
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "сат";
    }
    get timerPickerHourLabelOther() {
      return "сати";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "мин";
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "мин";
    }
    get timerPickerMinuteLabelOther() {
      return "мин";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "сек";
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "сек";
    }
    get timerPickerSecondLabelOther() {
      return "сек";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Данас";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationSr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sr";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationSr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationSr.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationSr);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationSr, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationSr.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationSr, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationSrCyrl = class CupertinoLocalizationSrCyrl extends generated_cupertino_localizations.CupertinoLocalizationSr {};
  (generated_cupertino_localizations.CupertinoLocalizationSrCyrl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sr_Cyrl";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationSrCyrl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationSrCyrl.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationSrCyrl);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationSrCyrl, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationSrLatn = class CupertinoLocalizationSrLatn extends generated_cupertino_localizations.CupertinoLocalizationSr {
    get datePickerHourSemanticsLabelFew() {
      return "$hour sata";
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute minuta";
    }
    get timerPickerHourLabelFew() {
      return "sata";
    }
    get timerPickerMinuteLabelFew() {
      return "min";
    }
    get timerPickerSecondLabelFew() {
      return "sek";
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour sat";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour sati";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minut";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minuta";
    }
    get anteMeridiemAbbreviation() {
      return "pre podne";
    }
    get postMeridiemAbbreviation() {
      return "po podne";
    }
    get todayLabel() {
      return "Danas";
    }
    get alertDialogLabel() {
      return "Obaveštenje";
    }
    get timerPickerHourLabelOne() {
      return "sat";
    }
    get timerPickerHourLabelOther() {
      return "sati";
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerSecondLabelOne() {
      return "sek";
    }
    get timerPickerSecondLabelOther() {
      return "sek";
    }
    get cutButtonLabel() {
      return "Iseci";
    }
    get copyButtonLabel() {
      return "Kopiraj";
    }
    get pasteButtonLabel() {
      return "Nalepi";
    }
    get selectAllButtonLabel() {
      return "Izaberi sve";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationSrLatn.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sr_Latn";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationSrLatn.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationSrLatn.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationSrLatn);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationSrLatn, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationSv = class CupertinoLocalizationSv extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Varning";
    }
    get anteMeridiemAbbreviation() {
      return "FM";
    }
    get copyButtonLabel() {
      return "Kopiera";
    }
    get cutButtonLabel() {
      return "Klipp ut";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Klockan $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "Klockan $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minut";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute minuter";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Klistra in";
    }
    get postMeridiemAbbreviation() {
      return "EM";
    }
    get selectAllButtonLabel() {
      return "Markera alla";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "timme";
    }
    get timerPickerHourLabelOther() {
      return "timmar";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min";
    }
    get timerPickerMinuteLabelOther() {
      return "min";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sek";
    }
    get timerPickerSecondLabelOther() {
      return "sek";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "I dag";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationSv.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sv";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationSv.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationSv.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationSv);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationSv, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationSv.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationSv, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationSw = class CupertinoLocalizationSw extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Arifa";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Nakili";
    }
    get cutButtonLabel() {
      return "Kata";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Saa $hour kamili";
    }
    get datePickerHourSemanticsLabelOther() {
      return "Saa $hour kamili";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "Dakika 1";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "Dakika $minute";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Bandika";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Teua Zote";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "saa";
    }
    get timerPickerHourLabelOther() {
      return "saa";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "dakika";
    }
    get timerPickerMinuteLabelOther() {
      return "dakika";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sekunde";
    }
    get timerPickerSecondLabelOther() {
      return "sekunde";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Leo";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationSw.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "sw";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationSw.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationSw.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationSw);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationSw, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationSw.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationSw, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationTa = class CupertinoLocalizationTa extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "விழிப்பூட்டல்";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "நகலெடு";
    }
    get cutButtonLabel() {
      return "வெட்டு";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour மணி";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour மணி";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 நிமிடம்";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute நிமிடங்கள்";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "ஒட்டு";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "எல்லாம் தேர்ந்தெடு";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "மணிநேரம்";
    }
    get timerPickerHourLabelOther() {
      return "மணிநேரம்";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "நிமி.";
    }
    get timerPickerMinuteLabelOther() {
      return "நிமி.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "வி.";
    }
    get timerPickerSecondLabelOther() {
      return "வி.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "இன்று";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationTa.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ta";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationTa.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationTa.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationTa);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationTa, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationTa.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationTa, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationTe = class CupertinoLocalizationTe extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "అలర్ట్";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "కాపీ చేయి";
    }
    get cutButtonLabel() {
      return "కత్తిరించు";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour అవుతుంది";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour అవుతుంది";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 నిమిషం";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute నిమిషాలు";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "అతికించు";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "అన్నింటినీ ఎంచుకోండి";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "గంట";
    }
    get timerPickerHourLabelOther() {
      return "గంటలు";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "నిమి.";
    }
    get timerPickerMinuteLabelOther() {
      return "నిమి.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "సెకన్లు.";
    }
    get timerPickerSecondLabelOther() {
      return "సెకన్లు.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "ఈరోజు";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationTe.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "te";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationTe.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationTe.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationTe);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationTe, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationTe.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationTe, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationTh = class CupertinoLocalizationTh extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "การแจ้งเตือน";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "คัดลอก";
    }
    get cutButtonLabel() {
      return "ตัด";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour นาฬิกา";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour นาฬิกา";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 นาที";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute นาที";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "วาง";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "เลือกทั้งหมด";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ชั่วโมง";
    }
    get timerPickerHourLabelOther() {
      return "ชั่วโมง";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "นาที";
    }
    get timerPickerMinuteLabelOther() {
      return "นาที";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "วินาที";
    }
    get timerPickerSecondLabelOther() {
      return "วินาที";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "วันนี้";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationTh.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "th";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationTh.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationTh.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationTh);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationTh, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationTh.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationTh, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationTl = class CupertinoLocalizationTl extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Alerto";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopyahin";
    }
    get cutButtonLabel() {
      return "I-cut";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Ala $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "Alas $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 minuto";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute na minuto";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "I-paste";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Piliin Lahat";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "oras";
    }
    get timerPickerHourLabelOther() {
      return "na oras";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "min.";
    }
    get timerPickerMinuteLabelOther() {
      return "na min.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "seg.";
    }
    get timerPickerSecondLabelOther() {
      return "na seg.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Ngayon";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationTl.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "tl";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationTl.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationTl.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationTl);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationTl, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationTl.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationTl, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationTr = class CupertinoLocalizationTr extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Uyarı";
    }
    get anteMeridiemAbbreviation() {
      return "ÖÖ";
    }
    get copyButtonLabel() {
      return "Kopyala";
    }
    get cutButtonLabel() {
      return "Kes";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "Saat $hour";
    }
    get datePickerHourSemanticsLabelOther() {
      return "Saat $hour";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 dakika";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute dakika";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Yapıştır";
    }
    get postMeridiemAbbreviation() {
      return "ÖS";
    }
    get selectAllButtonLabel() {
      return "Tümünü Seç";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "saat";
    }
    get timerPickerHourLabelOther() {
      return "saat";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "dk.";
    }
    get timerPickerMinuteLabelOther() {
      return "dk.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "sn.";
    }
    get timerPickerSecondLabelOther() {
      return "sn.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Bugün";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationTr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "tr";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationTr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationTr.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationTr);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationTr, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationTr.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationTr, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationUk = class CupertinoLocalizationUk extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Сповіщення";
    }
    get anteMeridiemAbbreviation() {
      return "дп";
    }
    get copyButtonLabel() {
      return "Копіювати";
    }
    get cutButtonLabel() {
      return "Вирізати";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return "$hour години";
    }
    get datePickerHourSemanticsLabelMany() {
      return "$hour годин";
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour година";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour години";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return "$minute хвилини";
    }
    get datePickerMinuteSemanticsLabelMany() {
      return "$minute хвилин";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 хвилина";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute хвилини";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Вставити";
    }
    get postMeridiemAbbreviation() {
      return "пп";
    }
    get selectAllButtonLabel() {
      return "Вибрати все";
    }
    get timerPickerHourLabelFew() {
      return "години";
    }
    get timerPickerHourLabelMany() {
      return "годин";
    }
    get timerPickerHourLabelOne() {
      return "година";
    }
    get timerPickerHourLabelOther() {
      return "години";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return "хв";
    }
    get timerPickerMinuteLabelMany() {
      return "хв";
    }
    get timerPickerMinuteLabelOne() {
      return "хв";
    }
    get timerPickerMinuteLabelOther() {
      return "хв";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return "с";
    }
    get timerPickerSecondLabelMany() {
      return "с";
    }
    get timerPickerSecondLabelOne() {
      return "с";
    }
    get timerPickerSecondLabelOther() {
      return "с";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Сьогодні";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationUk.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "uk";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationUk.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationUk.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationUk);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationUk, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationUk.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationUk, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationUr = class CupertinoLocalizationUr extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "الرٹ";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "کاپی کریں";
    }
    get cutButtonLabel() {
      return "کٹ کریں";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour بجے";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour بجے";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 منٹ";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute منٹس";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "پیسٹ کریں";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "سبھی منتخب کریں";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "گھنٹہ";
    }
    get timerPickerHourLabelOther() {
      return "گھنٹے";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "منٹ۔";
    }
    get timerPickerMinuteLabelOther() {
      return "منٹ۔";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "سیکنڈ۔";
    }
    get timerPickerSecondLabelOther() {
      return "سیکنڈ۔";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "آج";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationUr.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "ur";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationUr.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationUr.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationUr);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationUr, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationUr.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationUr, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationUz = class CupertinoLocalizationUz extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Ogohlantirish";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Nusxa olish";
    }
    get cutButtonLabel() {
      return "Kesib olish";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour soat";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour soat";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 daqiqa";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute daqiqa";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Joylash";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Barchasini tanlash";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "soat";
    }
    get timerPickerHourLabelOther() {
      return "soat";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "daqiqa";
    }
    get timerPickerMinuteLabelOther() {
      return "daqiqa";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "soniya";
    }
    get timerPickerSecondLabelOther() {
      return "soniya";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Bugun";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationUz.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "uz";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationUz.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationUz.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationUz);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationUz, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationUz.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationUz, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationVi = class CupertinoLocalizationVi extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Thông báo";
    }
    get anteMeridiemAbbreviation() {
      return "SÁNG";
    }
    get copyButtonLabel() {
      return "Sao chép";
    }
    get cutButtonLabel() {
      return "Cắt";
    }
    get datePickerDateOrderString() {
      return "dmy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour giờ";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour giờ";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 phút";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute phút";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Dán";
    }
    get postMeridiemAbbreviation() {
      return "CHIỀU";
    }
    get selectAllButtonLabel() {
      return "Chọn tất cả";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "giờ";
    }
    get timerPickerHourLabelOther() {
      return "giờ";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "phút";
    }
    get timerPickerMinuteLabelOther() {
      return "phút";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "giây";
    }
    get timerPickerSecondLabelOther() {
      return "giây";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Hôm nay";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationVi.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "vi";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationVi.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationVi.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationVi);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationVi, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationVi.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationVi, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationZh = class CupertinoLocalizationZh extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "提醒";
    }
    get anteMeridiemAbbreviation() {
      return "上午";
    }
    get copyButtonLabel() {
      return "复制";
    }
    get cutButtonLabel() {
      return "剪切";
    }
    get datePickerDateOrderString() {
      return "ymd";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour 点";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour 点";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 分钟";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute 分钟";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "粘贴";
    }
    get postMeridiemAbbreviation() {
      return "下午";
    }
    get selectAllButtonLabel() {
      return "全选";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "小时";
    }
    get timerPickerHourLabelOther() {
      return "小时";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "分钟";
    }
    get timerPickerMinuteLabelOther() {
      return "分钟";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "秒";
    }
    get timerPickerSecondLabelOther() {
      return "秒";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "今天";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationZh.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "zh";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationZh.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationZh.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationZh);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationZh, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationZh.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationZh, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationZhHans = class CupertinoLocalizationZhHans extends generated_cupertino_localizations.CupertinoLocalizationZh {};
  (generated_cupertino_localizations.CupertinoLocalizationZhHans.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "zh_Hans";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationZhHans.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationZhHans.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationZhHans);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationZhHans, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationZhHant = class CupertinoLocalizationZhHant extends generated_cupertino_localizations.CupertinoLocalizationZh {
    get datePickerHourSemanticsLabelOne() {
      return "$hour 點";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour 點";
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 分";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute 分";
    }
    get alertDialogLabel() {
      return "快訊";
    }
    get timerPickerHourLabelOne() {
      return "小時";
    }
    get timerPickerHourLabelOther() {
      return "小時";
    }
    get timerPickerMinuteLabelOne() {
      return "分";
    }
    get timerPickerMinuteLabelOther() {
      return "分";
    }
    get cutButtonLabel() {
      return "剪下";
    }
    get copyButtonLabel() {
      return "複製";
    }
    get pasteButtonLabel() {
      return "貼上";
    }
    get selectAllButtonLabel() {
      return "全選";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationZhHant.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "zh_Hant";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationZhHant.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationZhHant.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationZhHant);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationZhHant, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationZhHantHk = class CupertinoLocalizationZhHantHk extends generated_cupertino_localizations.CupertinoLocalizationZhHant {};
  (generated_cupertino_localizations.CupertinoLocalizationZhHantHk.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "zh_Hant_HK";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationZhHantHk.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationZhHantHk.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationZhHantHk);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationZhHantHk, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationZhHantTw = class CupertinoLocalizationZhHantTw extends generated_cupertino_localizations.CupertinoLocalizationZhHant {};
  (generated_cupertino_localizations.CupertinoLocalizationZhHantTw.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "zh_Hant_TW";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationZhHantTw.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationZhHantTw.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationZhHantTw);
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationZhHantTw, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.CupertinoLocalizationZu = class CupertinoLocalizationZu extends cupertino_localizations.GlobalCupertinoLocalizations {
    get alertDialogLabel() {
      return "Isexwayiso";
    }
    get anteMeridiemAbbreviation() {
      return "AM";
    }
    get copyButtonLabel() {
      return "Kopisha";
    }
    get cutButtonLabel() {
      return "Sika";
    }
    get datePickerDateOrderString() {
      return "mdy";
    }
    get datePickerDateTimeOrderString() {
      return "date_time_dayPeriod";
    }
    get datePickerHourSemanticsLabelFew() {
      return null;
    }
    get datePickerHourSemanticsLabelMany() {
      return null;
    }
    get datePickerHourSemanticsLabelOne() {
      return "$hour ezimpondweni";
    }
    get datePickerHourSemanticsLabelOther() {
      return "$hour ezimpondweni";
    }
    get datePickerHourSemanticsLabelTwo() {
      return null;
    }
    get datePickerHourSemanticsLabelZero() {
      return null;
    }
    get datePickerMinuteSemanticsLabelFew() {
      return null;
    }
    get datePickerMinuteSemanticsLabelMany() {
      return null;
    }
    get datePickerMinuteSemanticsLabelOne() {
      return "1 iminithi";
    }
    get datePickerMinuteSemanticsLabelOther() {
      return "$minute amaminithi";
    }
    get datePickerMinuteSemanticsLabelTwo() {
      return null;
    }
    get datePickerMinuteSemanticsLabelZero() {
      return null;
    }
    get pasteButtonLabel() {
      return "Namathisela";
    }
    get postMeridiemAbbreviation() {
      return "PM";
    }
    get selectAllButtonLabel() {
      return "Khetha konke";
    }
    get timerPickerHourLabelFew() {
      return null;
    }
    get timerPickerHourLabelMany() {
      return null;
    }
    get timerPickerHourLabelOne() {
      return "ihora";
    }
    get timerPickerHourLabelOther() {
      return "amahora";
    }
    get timerPickerHourLabelTwo() {
      return null;
    }
    get timerPickerHourLabelZero() {
      return null;
    }
    get timerPickerMinuteLabelFew() {
      return null;
    }
    get timerPickerMinuteLabelMany() {
      return null;
    }
    get timerPickerMinuteLabelOne() {
      return "iminithi.";
    }
    get timerPickerMinuteLabelOther() {
      return "iminithi.";
    }
    get timerPickerMinuteLabelTwo() {
      return null;
    }
    get timerPickerMinuteLabelZero() {
      return null;
    }
    get timerPickerSecondLabelFew() {
      return null;
    }
    get timerPickerSecondLabelMany() {
      return null;
    }
    get timerPickerSecondLabelOne() {
      return "isekhondi.";
    }
    get timerPickerSecondLabelOther() {
      return "isekhondi.";
    }
    get timerPickerSecondLabelTwo() {
      return null;
    }
    get timerPickerSecondLabelZero() {
      return null;
    }
    get todayLabel() {
      return "Namuhla";
    }
  };
  (generated_cupertino_localizations.CupertinoLocalizationZu.new = function(opts) {
    let localeName = opts && 'localeName' in opts ? opts.localeName : "zu";
    let fullYearFormat = opts && 'fullYearFormat' in opts ? opts.fullYearFormat : null;
    let dayFormat = opts && 'dayFormat' in opts ? opts.dayFormat : null;
    let mediumDateFormat = opts && 'mediumDateFormat' in opts ? opts.mediumDateFormat : null;
    let singleDigitHourFormat = opts && 'singleDigitHourFormat' in opts ? opts.singleDigitHourFormat : null;
    let singleDigitMinuteFormat = opts && 'singleDigitMinuteFormat' in opts ? opts.singleDigitMinuteFormat : null;
    let doubleDigitMinuteFormat = opts && 'doubleDigitMinuteFormat' in opts ? opts.doubleDigitMinuteFormat : null;
    let singleDigitSecondFormat = opts && 'singleDigitSecondFormat' in opts ? opts.singleDigitSecondFormat : null;
    let decimalFormat = opts && 'decimalFormat' in opts ? opts.decimalFormat : null;
    generated_cupertino_localizations.CupertinoLocalizationZu.__proto__.new.call(this, {localeName: localeName, fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
    ;
  }).prototype = generated_cupertino_localizations.CupertinoLocalizationZu.prototype;
  dart.addTypeTests(generated_cupertino_localizations.CupertinoLocalizationZu);
  dart.setGetterSignature(generated_cupertino_localizations.CupertinoLocalizationZu, () => ({
    __proto__: dart.getGetters(generated_cupertino_localizations.CupertinoLocalizationZu.__proto__),
    alertDialogLabel: core.String,
    anteMeridiemAbbreviation: core.String,
    copyButtonLabel: core.String,
    cutButtonLabel: core.String,
    datePickerDateOrderString: core.String,
    datePickerDateTimeOrderString: core.String,
    datePickerHourSemanticsLabelOther: core.String,
    datePickerMinuteSemanticsLabelOther: core.String,
    pasteButtonLabel: core.String,
    postMeridiemAbbreviation: core.String,
    selectAllButtonLabel: core.String,
    timerPickerHourLabelOther: core.String,
    timerPickerMinuteLabelOther: core.String,
    timerPickerSecondLabelOther: core.String,
    todayLabel: core.String
  }));
  dart.setLibraryUri(generated_cupertino_localizations.CupertinoLocalizationZu, "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart");
  generated_cupertino_localizations.getCupertinoTranslation = function getCupertinoTranslation(locale, fullYearFormat, dayFormat, mediumDateFormat, singleDigitHourFormat, singleDigitMinuteFormat, doubleDigitMinuteFormat, singleDigitSecondFormat, decimalFormat) {
    switch (locale.languageCode) {
      case "af":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationAf.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "am":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationAm.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ar":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationAr.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "as":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationAs.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "az":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationAz.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "be":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationBe.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "bg":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationBg.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "bn":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationBn.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "bs":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationBs.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ca":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationCa.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "cs":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationCs.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "da":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationDa.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "de":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationDe.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "el":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationEl.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "en":
      {
        {
          switch (locale.countryCode) {
            case "AU":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEnAu.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "CA":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEnCa.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "GB":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEnGb.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "IE":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEnIe.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "IN":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEnIn.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "SG":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEnSg.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "ZA":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEnZa.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
          }
          return new generated_cupertino_localizations.CupertinoLocalizationEn.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
        }
      }
      case "es":
      {
        {
          switch (locale.countryCode) {
            case "419":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEs419.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "AR":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsAr.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "BO":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsBo.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "CL":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsCl.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "CO":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsCo.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "CR":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsCr.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "DO":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsDo.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "EC":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsEc.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "GT":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsGt.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "HN":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsHn.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "MX":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsMx.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "NI":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsNi.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "PA":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsPa.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "PE":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsPe.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "PR":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsPr.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "PY":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsPy.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "SV":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsSv.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "US":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsUs.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "UY":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsUy.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "VE":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationEsVe.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
          }
          return new generated_cupertino_localizations.CupertinoLocalizationEs.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
        }
      }
      case "et":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationEt.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "eu":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationEu.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "fa":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationFa.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "fi":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationFi.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "fil":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationFil.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "fr":
      {
        {
          switch (locale.countryCode) {
            case "CA":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationFrCa.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
          }
          return new generated_cupertino_localizations.CupertinoLocalizationFr.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
        }
      }
      case "gl":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationGl.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "gsw":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationGsw.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "gu":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationGu.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "he":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationHe.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "hi":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationHi.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "hr":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationHr.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "hu":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationHu.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "hy":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationHy.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "id":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationId.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "is":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationIs.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "it":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationIt.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ja":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationJa.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ka":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationKa.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "kk":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationKk.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "km":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationKm.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "kn":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationKn.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ko":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationKo.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ky":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationKy.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "lo":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationLo.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "lt":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationLt.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "lv":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationLv.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "mk":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationMk.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ml":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationMl.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "mn":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationMn.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "mr":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationMr.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ms":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationMs.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "my":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationMy.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "nb":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationNb.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ne":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationNe.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "nl":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationNl.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "or":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationOr.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "pa":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationPa.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "pl":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationPl.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "pt":
      {
        {
          switch (locale.countryCode) {
            case "PT":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationPtPt.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
          }
          return new generated_cupertino_localizations.CupertinoLocalizationPt.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
        }
      }
      case "ro":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationRo.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ru":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationRu.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "si":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationSi.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "sk":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationSk.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "sl":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationSl.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "sq":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationSq.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "sr":
      {
        {
          switch (locale.scriptCode) {
            case "Cyrl":
            {
              {
                return new generated_cupertino_localizations.CupertinoLocalizationSrCyrl.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
              }
            }
            case "Latn":
            {
              {
                return new generated_cupertino_localizations.CupertinoLocalizationSrLatn.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
              }
            }
          }
          return new generated_cupertino_localizations.CupertinoLocalizationSr.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
        }
      }
      case "sv":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationSv.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "sw":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationSw.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ta":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationTa.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "te":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationTe.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "th":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationTh.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "tl":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationTl.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "tr":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationTr.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "uk":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationUk.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "ur":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationUr.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "uz":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationUz.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "vi":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationVi.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
      case "zh":
      {
        {
          switch (locale.scriptCode) {
            case "Hans":
            {
              {
                return new generated_cupertino_localizations.CupertinoLocalizationZhHans.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
              }
            }
            case "Hant":
            {
              {
                switch (locale.countryCode) {
                  case "HK":
                  {
                    return new generated_cupertino_localizations.CupertinoLocalizationZhHantHk.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
                  }
                  case "TW":
                  {
                    return new generated_cupertino_localizations.CupertinoLocalizationZhHantTw.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
                  }
                }
                return new generated_cupertino_localizations.CupertinoLocalizationZhHant.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
              }
            }
          }
          switch (locale.countryCode) {
            case "HK":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationZhHantHk.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
            case "TW":
            {
              return new generated_cupertino_localizations.CupertinoLocalizationZhHantTw.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
            }
          }
          return new generated_cupertino_localizations.CupertinoLocalizationZh.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
        }
      }
      case "zu":
      {
        return new generated_cupertino_localizations.CupertinoLocalizationZu.new({fullYearFormat: fullYearFormat, dayFormat: dayFormat, mediumDateFormat: mediumDateFormat, singleDigitHourFormat: singleDigitHourFormat, singleDigitMinuteFormat: singleDigitMinuteFormat, doubleDigitMinuteFormat: doubleDigitMinuteFormat, singleDigitSecondFormat: singleDigitSecondFormat, decimalFormat: decimalFormat});
      }
    }
    if (!false) dart.assertFailed("getCupertinoTranslation() called for unsupported locale \"" + dart.str(locale) + "\"", "org-dartlang-app:///packages/flutter_localizations/src/l10n/generated_cupertino_localizations.dart", 13243, 10, "rmat:");
    return null;
  };
  let C1087;
  dart.defineLazy(generated_cupertino_localizations, {
    /*generated_cupertino_localizations.kCupertinoSupportedLanguages*/get kCupertinoSupportedLanguages() {
      return HashSetOfString().from(C1087 || CT.C1087);
    }
  });
  dart.trackLibraries("packages/flutter_localizations/flutter_localizations", {
    "package:flutter_localizations/src/l10n/generated_material_localizations.dart": generated_material_localizations,
    "package:flutter_localizations/src/material_localizations.dart": material_localizations$,
    "package:flutter_localizations/src/widgets_localizations.dart": widgets_localizations,
    "package:flutter_localizations/src/utils/date_localizations.dart": date_localizations,
    "package:flutter_localizations/src/l10n/generated_date_localizations.dart": generated_date_localizations,
    "package:flutter_localizations/src/cupertino_localizations.dart": cupertino_localizations,
    "package:flutter_localizations/src/l10n/generated_cupertino_localizations.dart": generated_cupertino_localizations,
    "package:flutter_localizations/flutter_localizations.dart": flutter_localizations
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["src/material_localizations.dart","src/l10n/generated_material_localizations.dart","src/widgets_localizations.dart","src/utils/date_localizations.dart","src/l10n/generated_date_localizations.dart","src/cupertino_localizations.dart","src/l10n/generated_cupertino_localizations.dart"],"names":[],"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","file":"flutter_localizations.ddc.js"}');
  // Exports:
  return {
    src__l10n__generated_material_localizations: generated_material_localizations,
    src__material_localizations: material_localizations$,
    src__widgets_localizations: widgets_localizations,
    src__utils__date_localizations: date_localizations,
    src__l10n__generated_date_localizations: generated_date_localizations,
    src__cupertino_localizations: cupertino_localizations,
    src__l10n__generated_cupertino_localizations: generated_cupertino_localizations,
    flutter_localizations: flutter_localizations
  };
});

//# sourceMappingURL=flutter_localizations.ddc.js.map
